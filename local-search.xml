<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>torch.autograd.Function</title>
    <link href="/2024/04/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/torch-autograd-Function/"/>
    <url>/2024/04/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/torch-autograd-Function/</url>
    
    <content type="html"><![CDATA[<h1 id="torchautogradfunction解析"><a class="markdownIt-Anchor" href="#torchautogradfunction解析"></a> torch.autograd.Function解析</h1><p>​pytorch的灵活性体现在它可以任意拓展我们所需要的内容，包括自定义模型（<code>nn.Module</code>）、自定义函数（<code>nn.Function</code>）、自定义损失函数（<code>nn.Module</code>）、自定义求导方式（<code>torch.autograd.Function</code>），本节内容介绍<code>torch.autograd.Function</code>自定义求导的使用方法</p><p>​为什么需要<code>torch.autograd.Function</code>？虽然pytorch可以自动求导，但是有时候一些<strong>操作是不可导</strong>的，这时候你需要自定义求导方式</p><h2 id="使用模板"><a class="markdownIt-Anchor" href="#使用模板"></a> 使用模板：</h2><ol><li><strong>继承<code>torch.autograd.Function</code></strong>： 自定义的类需要继承自<code>torch.autograd.Function</code>。这样，你的类就可以使用PyTorch自动微分系统提供的所有功能</li><li><strong>定义前向传播逻辑</strong>： 自定义函数必须实现一个<code>forward</code>方法，该方法定义了如何计算输入张量的输出。这个方法中可以定义任何需要的操作，并且返回输出结果，注意要保存信息</li><li><strong>定义反向传播逻辑</strong>： 自定义函数必须实现一个<code>backward</code>方法，该方法是反向传播的核心，定义了如何根据输出张量的梯度来计算输入张量的梯度。<code>backward</code>方法通常接收一个参数，<strong>输出张量的梯度，并返回输入张量的梯度</strong></li><li><strong>创建并使用自定义函数</strong>： 在定义了<code>forward</code>和<code>backward</code>方法之后，你可以创建自定义函数的实例，并像使用普通的PyTorch操作一样使用它。当你调用这个实例的<code>apply</code>方法时，它会执行前向传播，并返回输出张量。在反向传播时，PyTorch会自动调用你的<code>backward</code>方法</li></ol><h3 id="事例代码如下"><a class="markdownIt-Anchor" href="#事例代码如下"></a> 事例代码如下：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCustomFunction</span>(torch.autograd.Function):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">ctx, input1, input2</span>):<br>        <span class="hljs-comment"># 保存输入和一些可能需要的信息</span><br>        ctx.save_for_backward(input1, input2)<br>        <span class="hljs-comment"># 定义前向传播</span><br>        output = input1 * input2<br>        <span class="hljs-keyword">return</span> output<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">backward</span>(<span class="hljs-params">ctx, grad_output</span>):<br>        <span class="hljs-comment"># 从上下文中恢复保存的信息</span><br>        input1, input2 = ctx.saved_tensors<br>        <span class="hljs-comment"># 定义反向传播的操作</span><br>        grad_input1 = grad_output * input2<br>        grad_input2 = grad_output * input1<br>        <span class="hljs-keyword">return</span> grad_input1, grad_input2<br><br><br>x1 = torch.tensor([<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>], requires_grad=<span class="hljs-literal">True</span>)<br>x2 = torch.tensor([<span class="hljs-number">4.0</span>, <span class="hljs-number">6.0</span>, <span class="hljs-number">7.0</span>], requires_grad=<span class="hljs-literal">True</span>)<br>custom_op = MyCustomFunction.apply<br>y = custom_op(x)<br><br><span class="hljs-built_in">print</span>(y)<br>y.backward(torch.ones_like(y))<br><span class="hljs-built_in">print</span>(x.grad)<br></code></pre></td></tr></table></figure><h3 id="解析含义"><a class="markdownIt-Anchor" href="#解析含义"></a> 解析含义：</h3><ul><li>该代码可以与正常的其他 Pytorch 模块融合使用，而不产生任何副作用，这部分代码只会影响自定义的这部分梯度传播</li><li><code>ctx</code>为一个上下文管理器，他负责保存前向传播的信息，用于反向传播，需要记住<code>ctx.save_for_backward</code>和<code>ctx.saved_tensors</code>的用法</li><li>使用<code>@staticmethod</code>装饰器是为了定义一个静态方法。静态方法不需要一个类实例就可以被调用，而且它不会自动传递实例（<code>self</code>）或类（<code>cls</code>）作为第一个参数。在<code>torch.autograd.Function</code>的上下文中，这正是我们需要的，因为我们希望<code>forward</code>和<code>backward</code>方法能够独立于类的任何实例而被调用</li><li><code>return grad_input1, grad_input2</code>会在后续反向传播过程中返回上一级计算图（这个过程是隐藏的），知道达到源节点</li></ul><h2 id="例子relu函数的反向求导"><a class="markdownIt-Anchor" href="#例子relu函数的反向求导"></a> 例子：ReLU函数的反向求导：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> torch <span class="hljs-keyword">import</span> nn<br><span class="hljs-keyword">from</span> torch.autograd <span class="hljs-keyword">import</span> Function<br><span class="hljs-keyword">import</span> torch<br> <br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReLU</span>(<span class="hljs-title class_ inherited__">Function</span>):<br> <br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">ctx, input_</span>):<br>        <span class="hljs-comment"># 在forward中，需要定义MyReLU这个运算的forward计算过程</span><br>        <span class="hljs-comment"># 同时可以保存任何在后向传播中需要使用的变量值</span><br>        ctx.save_for_backward(input_)         <span class="hljs-comment"># 将输入保存起来，在backward时使用</span><br>        output = input_.clamp(<span class="hljs-built_in">min</span>=<span class="hljs-number">0</span>)        <span class="hljs-comment"># relu就是截断负数，让所有负数等于0</span><br>        <span class="hljs-keyword">return</span> output<br> <br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">backward</span>(<span class="hljs-params">ctx, grad_output</span>):<br>        <span class="hljs-comment"># 根据BP算法的推导（链式法则），dloss / dx = (dloss / doutput) * (doutput / dx)</span><br>        <span class="hljs-comment"># dloss / doutput就是输入的参数grad_output</span><br>        <span class="hljs-comment"># 因此只需求relu的导数，在乘以grad_output    </span><br>        input_, = ctx.saved_tensors<br>        grad_input = grad_output.clone()<br>        grad_input[input_ &lt; <span class="hljs-number">0</span>] = <span class="hljs-number">0</span>                <span class="hljs-comment"># 上诉计算的结果就是左式。即ReLU在反向传播中可以看做一个通道选择函数，所有未达到阈值（激活值&lt;0）的单元的梯度都为0</span><br>        <span class="hljs-keyword">return</span> grad_input<br> <br>x = torch.rand(<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">5</span>)<br>myrelu = MyReLU.apply <span class="hljs-comment"># Use it by calling the apply method:</span><br>output = myrelu(x)<br><span class="hljs-built_in">print</span>(output.shape)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>梯度回传与计算图</title>
    <link href="/2024/04/10/%E6%A2%AF%E5%BA%A6%E5%9B%9E%E4%BC%A0%E4%B8%8E%E8%AE%A1%E7%AE%97%E5%9B%BE/"/>
    <url>/2024/04/10/%E6%A2%AF%E5%BA%A6%E5%9B%9E%E4%BC%A0%E4%B8%8E%E8%AE%A1%E7%AE%97%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h1 id><a class="markdownIt-Anchor" href="#"></a> </h1><p>​我需要使用上采样核通过一个 Linear 层生成上采样核指导的下采样，再对这个生产的下采样核与下采样核本身进行加权平均，再把它赋给下采样核，用符号语言表达问题如下：</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span> 均为一个<code>nn.Parameter</code>，需要的计算过程为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mn>0.5</mn><mi>a</mi><mo>+</mo><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a = 0.5a + Linear(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 其中因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">0.5a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">a</span></span></span></span> 是一个 in-place 操作，所以梯度回传的时候不需要传入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.5</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">0.5a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">a</span></span></span></span> 的部分，但是需要传入 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Linear(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span> 的部分</p><p>​初始代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">offset_weight_copy = self.Dy_UpSample.offset_weight.detach().clone()<br>offset_weight_copy = (<br>    <span class="hljs-comment"># (1 - self.gated2u) * self.upkernel.clone() +</span><br>        (<span class="hljs-number">1</span> - self.gated2u) * offset_weight_copy +<br>        self.gated2u * self.rearr2up(self.d2u(self.Dy_DownSample.offset_weight.flatten()))<br>)<br>self.Dy_UpSample.offset_weight = offset_weight_copy<br>x = self.Dy_UpSample(x)<br><br><span class="hljs-comment"># 下面这句话报错：</span><br>self.upkernel = self.Dy_UpSample.offset_weight<br><br>&gt;&gt;&gt;<br>TypeError: cannot assign <span class="hljs-string">&#x27;torch.cuda.FloatTensor&#x27;</span> <span class="hljs-keyword">as</span> parameter <span class="hljs-string">&#x27;offset_weight&#x27;</span> (torch.nn.Parameter <span class="hljs-keyword">or</span> <span class="hljs-literal">None</span> expected)<br></code></pre></td></tr></table></figure><p><img src="/2024/04/10/%E6%A2%AF%E5%BA%A6%E5%9B%9E%E4%BC%A0%E4%B8%8E%E8%AE%A1%E7%AE%97%E5%9B%BE/image-20240410170950099.png" alt="image-20240410170950099"></p><p>​如果简单地将<code>self.upkernel = self.Dy_UpSample.offset_weight</code>这一行代码改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">self.upkernel = nn.Parameter(self.Dy_UpSample.offset_weight)<br></code></pre></td></tr></table></figure><p>就是掩耳盗铃，<code>nn.Parameter</code>这里的含义是创建一个值为<code>self.Dy_UpSample.offset_weight</code>的 <code>nn.Parameter</code>，这样是不可能将梯度回传的</p><p>​如果想解决这个问题，正常来说有两种方案：</p><ul><li>使用<code>.copy_()</code>或者<code>.add_()</code>等操作，但是这种 in-place 操作不利于计算图的构建，会使梯度图断开，梯度信息丢失</li><li>使用<code>.data</code>直接修改值，即使用<code>self.upkernel.data = self.Dy_UpSample.offset_weight</code>，但是这样操作同样有问题，<strong>因为直接修改值会使梯度图断开！</strong></li></ul><h3 id="能不能使用detach方式实现"><a class="markdownIt-Anchor" href="#能不能使用detach方式实现"></a> 能不能使用<code>.detach()</code>方式实现？</h3><p>​答案是不行，我们先看<code>.detach()</code>的用法：</p><p>​用于从计算图中分离出一个张量，这样对该张量的任何操作都不会影响计算图的其余部分，也就是说，它不会追踪梯度。比如当我们需要运行一个操作而不希望这个操作参与到梯度计算中时会很有用（但是<code>.detach()</code>方法虽然会返回一个新的张量，但这个新张量仍然与原始张量共享相同的数据内存空间）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Java高级特性</title>
    <link href="/2024/04/09/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Java/Java%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"/>
    <url>/2024/04/09/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Java/Java%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Wandb教程(3)</title>
    <link href="/2024/04/06/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-3/"/>
    <url>/2024/04/06/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-3/</url>
    
    <content type="html"><![CDATA[<h1 id="wandb教程3"><a class="markdownIt-Anchor" href="#wandb教程3"></a> Wandb教程(3)</h1><p>​本篇文章用于介绍Wandb如何进行网格超参数搜索，主要使用了Wandb中的Sweep功能：</p><h2 id="sweep配置"><a class="markdownIt-Anchor" href="#sweep配置"></a> Sweep配置：</h2><h3 id="定义-sweeps-配置"><a class="markdownIt-Anchor" href="#定义-sweeps-配置"></a> 定义 Sweeps 配置</h3><p>​Wandb的配置文件支持YAML和Python等多种文件格式，关于如何配置Sweep可见[官方文档](<a href="https://docs.wandb.ai/guides/sweeps/define-sweep-configuration">Define sweep configuration for hyperparameter tuning. (wandb.ai)</a>)，下面是两种文件配置的例子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">program:</span> <span class="hljs-string">train.py</span> <span class="hljs-comment"># 训练脚本文件名</span><br><span class="hljs-attr">method:</span> <span class="hljs-string">grid</span> <span class="hljs-comment"># 或 bayes, random 等其他搜索方法</span><br><span class="hljs-attr">parameters:</span><br>  <span class="hljs-attr">learning_rate:</span><br>    <span class="hljs-attr">distribution:</span> <span class="hljs-string">uniform</span><br>    <span class="hljs-attr">min:</span> <span class="hljs-number">0.0001</span><br>    <span class="hljs-attr">max:</span> <span class="hljs-number">0.01</span><br>  <span class="hljs-attr">batch_size:</span><br>    <span class="hljs-attr">values:</span> [<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, <span class="hljs-number">128</span>]<br>  <span class="hljs-attr">dropout_rate:</span><br>    <span class="hljs-attr">distribution:</span> <span class="hljs-string">log_uniform</span><br>    <span class="hljs-attr">min:</span> <span class="hljs-number">0.001</span><br>    <span class="hljs-attr">max:</span> <span class="hljs-number">0.5</span><br><span class="hljs-attr">metric:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">val_accuracy</span> <span class="hljs-comment"># 监控的目标指标名称</span><br>    <span class="hljs-attr">goal:</span> <span class="hljs-string">maximize</span> <span class="hljs-comment"># 指标优化目标（maximize 或 minimize）</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> wandb<br><br>sweep_config = &#123;<br>    <span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;grid&quot;</span>,<br>    <span class="hljs-string">&quot;metric&quot;</span>: &#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;val_loss&quot;</span>, <span class="hljs-string">&quot;goal&quot;</span>: <span class="hljs-string">&quot;minimize&quot;</span>&#125;,<br>    <span class="hljs-string">&quot;parameters&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;learning_rate&quot;</span>: &#123;<span class="hljs-string">&quot;distribution&quot;</span>: <span class="hljs-string">&quot;uniform&quot;</span>, <span class="hljs-string">&quot;min&quot;</span>: <span class="hljs-number">1e-4</span>, <span class="hljs-string">&quot;max&quot;</span>: <span class="hljs-number">1e-2</span>&#125;,<br>        <span class="hljs-string">&quot;dropout_rate&quot;</span>: &#123;<span class="hljs-string">&quot;distribution&quot;</span>: <span class="hljs-string">&quot;categorical&quot;</span>, <span class="hljs-string">&quot;values&quot;</span>: [<span class="hljs-number">0.2</span>, <span class="hljs-number">0.3</span>, <span class="hljs-number">0.4</span>]&#125;,<br>    &#125;,<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="初始化-sweep"><a class="markdownIt-Anchor" href="#初始化-sweep"></a> 初始化 Sweep</h3><p>​对于Python文件，初始化则需要使用<code>wandb.sweep</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> wandb<br><br><span class="hljs-comment"># 加载或创建 sweep 配置</span><br>sweep_id = wandb.sweep(sweep_config)<br><br><span class="hljs-comment"># 在训练函数中加入 sweep 调用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">train</span>(<span class="hljs-params">hparams</span>):<br>    <span class="hljs-comment"># 使用 hparams 来设置训练过程中的超参数</span><br>    wandb.init(config=hparams)<br>    <span class="hljs-comment"># ... 实现你的训练逻辑 ...</span><br>    <br><span class="hljs-comment"># 启动 Sweep，用于启动和管理 Sweep 中的实验执行的一个函数</span><br>wandb.agent(sweep_id, function=train)<br></code></pre></td></tr></table></figure><h3 id="常用配置"><a class="markdownIt-Anchor" href="#常用配置"></a> 常用配置：</h3><h4 id="1选择一个调优算法"><a class="markdownIt-Anchor" href="#1选择一个调优算法"></a> 1，选择一个调优算法</h4><p>Sweep支持如下3种调优算法:</p><ul><li><p>网格搜索：grid. 遍历所有可能得超参组合，只在超参空间不大的时候使用，否则会非常慢</p></li><li><p>随机搜索：random. 每个超参数都选择一个随机值，非常有效，一般情况下建议使用</p></li><li><p>贝叶斯搜索：bayes. 创建一个概率模型估计不同超参数组合的效果，采样有更高概率提升优化目标的超参数组合。对连续型的超参数特别有效，但扩展到非常高维度的超参数时效果不好</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">sweep_config = &#123;<br>    <span class="hljs-string">&#x27;method&#x27;</span>: <span class="hljs-string">&#x27;random&#x27;</span><br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="2定义调优目标"><a class="markdownIt-Anchor" href="#2定义调优目标"></a> 2，定义调优目标</h4><p>设置优化指标，以及优化方向。</p><p>sweep agents 通过 wandb.log 的形式向 sweep controller 传递优化目标的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">metric = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;val_acc&#x27;</span>,<br>    <span class="hljs-string">&#x27;goal&#x27;</span>: <span class="hljs-string">&#x27;maximize&#x27;</span>   <br>    &#125;<br>sweep_config[<span class="hljs-string">&#x27;metric&#x27;</span>] = metric<br></code></pre></td></tr></table></figure><h4 id="3定义超参空间"><a class="markdownIt-Anchor" href="#3定义超参空间"></a> 3，定义超参空间</h4><p>超参空间可以分成 固定型，离散型和连续型</p><ul><li>固定型：指定 value</li><li>离散型：指定 values，列出全部候选取值</li><li>连续性：需要指定 分布类型 distribution, 和范围 min, max。用于 random 或者 bayes采样</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">sweep_config[<span class="hljs-string">&#x27;parameters&#x27;</span>] = &#123;&#125;<br><br><span class="hljs-comment"># 固定不变的超参</span><br>sweep_config[<span class="hljs-string">&#x27;parameters&#x27;</span>].update(&#123;<br>    <span class="hljs-string">&#x27;project_name&#x27;</span>:&#123;<span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-string">&#x27;wandb_demo&#x27;</span>&#125;,<br>    <span class="hljs-string">&#x27;epochs&#x27;</span>: &#123;<span class="hljs-string">&#x27;value&#x27;</span>: <span class="hljs-number">10</span>&#125;,<br>    <span class="hljs-string">&#x27;ckpt_path&#x27;</span>: &#123;<span class="hljs-string">&#x27;value&#x27;</span>:<span class="hljs-string">&#x27;checkpoint.pt&#x27;</span>&#125;&#125;)<br><br><span class="hljs-comment"># 离散型分布超参</span><br>sweep_config[<span class="hljs-string">&#x27;parameters&#x27;</span>].update(&#123;<br>    <span class="hljs-string">&#x27;optim_type&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;values&#x27;</span>: [<span class="hljs-string">&#x27;Adam&#x27;</span>, <span class="hljs-string">&#x27;SGD&#x27;</span>,<span class="hljs-string">&#x27;AdamW&#x27;</span>]<br>        &#125;,<br>    <span class="hljs-string">&#x27;hidden_layer_width&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;values&#x27;</span>: [<span class="hljs-number">16</span>,<span class="hljs-number">32</span>,<span class="hljs-number">48</span>,<span class="hljs-number">64</span>,<span class="hljs-number">80</span>,<span class="hljs-number">96</span>,<span class="hljs-number">112</span>,<span class="hljs-number">128</span>]<br>        &#125;<br>    &#125;)<br><br><span class="hljs-comment"># 连续型分布超参</span><br>sweep_config[<span class="hljs-string">&#x27;parameters&#x27;</span>].update(&#123;<br>    <br>    <span class="hljs-string">&#x27;lr&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;distribution&#x27;</span>: <span class="hljs-string">&#x27;log_uniform_values&#x27;</span>,<br>        <span class="hljs-string">&#x27;min&#x27;</span>: <span class="hljs-number">1e-6</span>,<br>        <span class="hljs-string">&#x27;max&#x27;</span>: <span class="hljs-number">0.1</span><br>      &#125;,<br>    <br>    <span class="hljs-string">&#x27;batch_size&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;distribution&#x27;</span>: <span class="hljs-string">&#x27;q_uniform&#x27;</span>,<br>        <span class="hljs-string">&#x27;q&#x27;</span>: <span class="hljs-number">8</span>,<br>        <span class="hljs-string">&#x27;min&#x27;</span>: <span class="hljs-number">32</span>,<br>        <span class="hljs-string">&#x27;max&#x27;</span>: <span class="hljs-number">256</span>,<br>      &#125;,<br>    <br>    <span class="hljs-string">&#x27;dropout_p&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;distribution&#x27;</span>: <span class="hljs-string">&#x27;uniform&#x27;</span>,<br>        <span class="hljs-string">&#x27;min&#x27;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&#x27;max&#x27;</span>: <span class="hljs-number">0.6</span>,<br>      &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="4定义剪枝策略-可选"><a class="markdownIt-Anchor" href="#4定义剪枝策略-可选"></a> 4，定义剪枝策略 (可选)</h4><p>可以定义剪枝策略，提前终止那些没有希望的任务。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">sweep_config[<span class="hljs-string">&#x27;early_terminate&#x27;</span>] = &#123;<br>    <span class="hljs-string">&#x27;type&#x27;</span>:<span class="hljs-string">&#x27;hyperband&#x27;</span>,<br>    <span class="hljs-string">&#x27;min_iter&#x27;</span>:<span class="hljs-number">3</span>,<br>    <span class="hljs-string">&#x27;eta&#x27;</span>:<span class="hljs-number">2</span>,<br>    <span class="hljs-string">&#x27;s&#x27;</span>:<span class="hljs-number">3</span><br>&#125; <span class="hljs-comment">#在step=3, 6, 12 时考虑是否剪枝</span><br></code></pre></td></tr></table></figure><h2 id="启动sweep"><a class="markdownIt-Anchor" href="#启动sweep"></a> 启动Sweep：</h2><h3 id="初始化-sweep-controller"><a class="markdownIt-Anchor" href="#初始化-sweep-controller"></a> 初始化 sweep controller</h3><p>​<code>wandb.sweep</code> 用于创建和管理超参数搜索（Hyperparameter Sweeps）的主要接口。它允许定义搜索空间、选择搜索策略，并启动一个或多个 Agent 来执行一系列训练试验，以寻找最优模型配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.sweep(sweep_config: <span class="hljs-type">Union</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]], project: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>) -&gt; <span class="hljs-built_in">str</span><br></code></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li><strong><code>sweep_config</code></strong>: 定义超参数搜索的配置。可以是 YAML 文件的路径（字符串）或直接提供一个 Python 字典。该配置包含搜索空间、搜索算法、调度策略等信息</li><li><strong><code>project</code></strong>: 可选的字符串，指定 <code>wandb</code> 项目名称。如果不指定，将使用当前默认项目</li></ul><p><strong>返回值</strong>：返回一个字符串，表示新创建的 Sweep 的唯一 ID (<code>sweep_id</code>)。这个 ID 用于后续通过 <code>wandb.agent</code> 启动 Agent 时关联到该 Sweep</p><p><strong>注意：name 在 sweep_config 里面配置</strong></p><h3 id="启动-sweep-agent"><a class="markdownIt-Anchor" href="#启动-sweep-agent"></a> 启动 Sweep agent</h3><p>​我们需要把模型训练相关的全部代码整理成一个 train函数，再将train函数传入 sweep agent：</p><p>​<code>sweep_id</code>就是一个 sweep controller，<code>wandb.agent</code>就是用于创建 sweep agent 的函数它和 sweep agent 的关系如下：</p><ul><li><code>Sweep Controller</code> 负责定义超参数搜索的整体策略、配置搜索空间，并根据策略分配具体的超参数组合给 Agent 执行</li><li><code>Agent</code> 根据 <code>Sweep Controller</code> 分配的超参数组合执行相应的训练任务，将训练过程中的数据同步回 <code>wandb</code> 平台</li></ul><p><img src="/2024/04/06/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-3/1.webp" alt="agent &amp; controller"></p><p><code>wandb.agent()</code> 主要接收参数：</p><ul><li><code>sweep_id</code>：这是你之前创建或通过 API 获取到的 Sweep 的唯一标识符</li><li><code>function</code>：这是一个可调用对象，通常是<code>train</code>函数，并且可以访问当前 sweep 运行时传入的超参数</li><li>后面的参数可以用关键字参数传入 train 函数的配置参数</li></ul><h3 id="修改训练脚本以接收超参数"><a class="markdownIt-Anchor" href="#修改训练脚本以接收超参数"></a> 修改训练脚本以接收超参数</h3><p>确保训练脚本（例如上述的 <code>train.py</code>）能够从 <code>wandb.config</code> 中读取超参数值，并根据这些值来配置模型和训练过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> wandb<br><br>cofig = &#123;<br>    ...<br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">train</span>(<span class="hljs-params">config=config</span>):<br>    <span class="hljs-comment"># 获取当前运行的配置（包含超参数）</span><br>    hparams = wandb.config<br>    learning_rate = hparams.learning_rate<br>    batch_size = hparams.batch_size<br>    dropout_rate = hparams.dropout_rate<br>    <span class="hljs-comment"># 使用这些超参数训练模型...</span><br>    <br></code></pre></td></tr></table></figure><h2 id="效果展示"><a class="markdownIt-Anchor" href="#效果展示"></a> 效果展示：</h2><h3 id="平行坐标系图"><a class="markdownIt-Anchor" href="#平行坐标系图"></a> 平行坐标系图</h3><p>​可以直观展示哪些超参数组合更加容易获取更好的结果</p><p><img src="/2024/04/06/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-3/2.webp" alt="坐标线图"></p><h2 id="超参数重要性图"><a class="markdownIt-Anchor" href="#超参数重要性图"></a> 超参数重要性图</h2><p>​可以显示超参数和优化目标最终取值的重要性，和相关性方向</p><p><img src="/2024/04/06/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-3/3.webp" alt="重要性图"></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>常用Neck网络-1</title>
    <link href="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/"/>
    <url>/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="sppspatial-pyramid-pooling"><a class="markdownIt-Anchor" href="#sppspatial-pyramid-pooling"></a> SPP(Spatial Pyramid Pooling)</h1><h2 id="motivation"><a class="markdownIt-Anchor" href="#motivation"></a> Motivation：</h2><p>​SPP的提出就是为了解决CNN输入图像大小必须固定的问题，从而可以使得输入图像高宽比和大小任意</p><h2 id="网络结构解析"><a class="markdownIt-Anchor" href="#网络结构解析"></a> 网络结构解析：</h2><p>​SPP-Neck网络结构如下：</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/1.png" alt="SPP-Neck"></p><ul><li>首先是输入层(input image),其大小可以是任意的</li><li>中间的部分就是SPP-Neck层，SPP会<strong>在最后一层卷积层</strong>输出的特征图上进行操作，将其划分为多个不同大小的子区域，并对每个子区域分别执行池化操作<ul><li>最左边有是原特征图拆分成16份的图，256表示的是原特征图的channel对应在Linear层的维度，共有16个这样的Linear层(最常见的是使用等比分割以形成规则的网格，并不一定是等比分)</li><li>中间部分和右侧部分的网络同理，就是将原特征图分成了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2 \times 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，同理左边的部分</li></ul></li></ul><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><br><span class="hljs-comment"># 构建SPP层(空间金字塔池化层)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SPPLayer</span>(nn.Module):<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, num_levels, pool_type=<span class="hljs-string">&#x27;max_pool&#x27;</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>        self.num_levels = num_levels<br>        self.pool_type = pool_type<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        num, c, h, w = x.size()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(self.num_levels):<br>            level = i+<span class="hljs-number">1</span><br>            kernel_size = (math.ceil(h / level), math.ceil(w / level))<br>            stride = (math.ceil(h / level), math.ceil(w / level))<br>            pooling = (math.floor((kernel_size[<span class="hljs-number">0</span>]*level-h+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>), math.floor((kernel_size[<span class="hljs-number">1</span>]*level-w+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>))<br><br>            <span class="hljs-comment"># 选择池化方式 </span><br>            <span class="hljs-keyword">if</span> self.pool_type == <span class="hljs-string">&#x27;max_pool&#x27;</span>:<br>                tensor = F.max_pool2d(x, kernel_size=kernel_size, stride=stride, padding=pooling).view(num, -<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> self.pool_type == <span class="hljs-string">&#x27;avg_pool&#x27;</span>:<br>                tensor = F.avg_pool2d(x, kernel_size=kernel_size, stride=stride, padding=pooling).view(num, -<span class="hljs-number">1</span>)<br><br>            <span class="hljs-comment"># 展开、拼接</span><br>            <span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>):<br>                x_flatten = tensor.view(num, -<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">else</span>:<br>                x_flatten = torch.cat((x_flatten, tensor.view(num, -<span class="hljs-number">1</span>)), <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> x_flatten<br></code></pre></td></tr></table></figure><h1 id="asppatrous-spatial-pyramid-pooling"><a class="markdownIt-Anchor" href="#asppatrous-spatial-pyramid-pooling"></a> ASPP(Atrous Spatial Pyramid Pooling)</h1><h2 id="motivation-2"><a class="markdownIt-Anchor" href="#motivation-2"></a> Motivation:</h2><p>​可以认为是SPP在语义分割中的应用，结合了空洞卷积可在不丢失分辨率（不进行下采样）的情况下扩大卷积核的感受野。Deep CNN 中普通卷积对于其他任务还有一些致命性的缺陷。主要问题有：</p><ul><li>内部数据结构丢失；空间层级化信息丢失</li><li>小物体信息无法重建 (假设有四个pooling layer 则任何小于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>4</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">2^4=16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span> pixel 的物体信息将理论上无法重建</li></ul><p>在这样问题的存在下，语义分割问题一直处在瓶颈期无法再明显提高精度， 而 dilated convolution 的设计就良好的避免了这些问题</p><h2 id="网络结构解析-2"><a class="markdownIt-Anchor" href="#网络结构解析-2"></a> 网络结构解析：</h2><p>ASPP网络结构如下：</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/2.png" alt="ASPP-network"></p><p>中间黄色括号部分即为 ASPP-Neck，展开结构如下所示：</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/3.png" alt="ASPP"></p><ul><li>对于 input，网络会对 feature map 分别进行 $1 \times1 $ 和不同比例空洞卷积，这些操作都不改变 feature map 的大小</li><li>右边部分称为 ASPP Pooling，目的是为了得到语义信息，首先是一个 <code>AdaptiveAvgPool2d</code> 层。自适应均值池化就是不需要指定 kernel size 和 stride，只需指定最后的输出尺寸，再进行 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 卷积后上采样</li><li>最终将这些 feature map concat 到一起再特征融合即可</li></ul><h2 id="代码实现-2"><a class="markdownIt-Anchor" href="#代码实现-2"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 空洞卷积</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ASPPConv</span>(nn.Sequential):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, in_channels, out_channels, dilation</span>):<br>        modules = [<br>            nn.Conv2d(in_channels, out_channels, <span class="hljs-number">3</span>, padding=dilation, dilation=dilation, bias=<span class="hljs-literal">False</span>),<br>            nn.BatchNorm2d(out_channels),<br>            nn.ReLU()<br>        ]<br>        <span class="hljs-built_in">super</span>(ASPPConv, self).__init__(*modules)<br><br><span class="hljs-comment"># 池化 -&gt; 1*1 卷积 -&gt; 上采样</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ASPPPooling</span>(nn.Sequential):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, in_channels, out_channels</span>):<br>        <span class="hljs-built_in">super</span>(ASPPPooling, self).__init__(<br>            nn.AdaptiveAvgPool2d(<span class="hljs-number">1</span>),  <span class="hljs-comment"># 自适应均值池化</span><br>            nn.Conv2d(in_channels, out_channels, <span class="hljs-number">1</span>, bias=<span class="hljs-literal">False</span>),<br>            nn.BatchNorm2d(out_channels),<br>            nn.ReLU())<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        size = x.shape[-<span class="hljs-number">2</span>:]<br>        <span class="hljs-keyword">for</span> mod <span class="hljs-keyword">in</span> self:<br>            x = mod(x)<br>        <span class="hljs-comment"># 上采样</span><br>        <span class="hljs-keyword">return</span> F.interpolate(x, size=size, mode=<span class="hljs-string">&#x27;bilinear&#x27;</span>, align_corners=<span class="hljs-literal">False</span>)  <br><br><span class="hljs-comment"># 整个 ASPP 架构</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ASPP</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, in_channels, atrous_rates, out_channels=<span class="hljs-number">256</span></span>):<br>        <span class="hljs-built_in">super</span>(ASPP, self).__init__()<br>        modules = []<br>        <span class="hljs-comment"># 1*1 卷积</span><br>        modules.append(nn.Sequential(<br>            nn.Conv2d(in_channels, out_channels, <span class="hljs-number">1</span>, bias=<span class="hljs-literal">False</span>),<br>            nn.BatchNorm2d(out_channels),<br>            nn.ReLU()))<br><br>        <span class="hljs-comment"># 多尺度空洞卷积</span><br>        rates = <span class="hljs-built_in">tuple</span>(atrous_rates)<br>        <span class="hljs-keyword">for</span> rate <span class="hljs-keyword">in</span> rates:<br>            modules.append(ASPPConv(in_channels, out_channels, rate))<br><br>        <span class="hljs-comment"># 池化</span><br>        modules.append(ASPPPooling(in_channels, out_channels))<br><br>        self.convs = nn.ModuleList(modules)<br>        <br>        <span class="hljs-comment"># 拼接后的卷积</span><br>        self.project = nn.Sequential(<br>            nn.Conv2d(<span class="hljs-built_in">len</span>(self.convs) * out_channels, out_channels, <span class="hljs-number">1</span>, bias=<span class="hljs-literal">False</span>),<br>            nn.BatchNorm2d(out_channels),<br>            nn.ReLU(),<br>            nn.Dropout(<span class="hljs-number">0.5</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        res = []<br>        <span class="hljs-keyword">for</span> conv <span class="hljs-keyword">in</span> self.convs:<br>            res.append(conv(x))<br>        res = torch.cat(res, dim=<span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">return</span> self.project(res)<br></code></pre></td></tr></table></figure><h1 id="nas-fpnneural-architecture-search"><a class="markdownIt-Anchor" href="#nas-fpnneural-architecture-search"></a> NAS-FPN(Neural Architecture Search)</h1><h2 id="motivation-3"><a class="markdownIt-Anchor" href="#motivation-3"></a> Motivation:</h2><p>​采用神经网络结构搜索（Neural Architecture Search, NAS），在一个覆盖所有跨尺度连接的新型可扩展搜索空间中发现了一个新的特征金字塔结构，NAS-FPN。与原始FPN相比，NAS-FPN显著提高了目标检测的性能，并取得了更好了速度-精度的 trade-off</p><h2 id="网络结构解析-3"><a class="markdownIt-Anchor" href="#网络结构解析-3"></a> 网络结构解析：</h2><p>​作者提出了merging cell作为FPN的basic building block，将任何两层的输入特征融合为一层的输出特征：</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/4.png" alt="搜索示意图"></p><p>​最终搜索到的NAS-FPN的完整结构如图6所示</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/5.png" alt="NAS-FPN"></p><p>​如下图所示，下图其中(a)是原始FPN结构，(b)-(f)的精度逐渐变高，(f)是最终的NAS-FPN结构，每个圆点代表一个特征层，绿色圆圈表示输入层，红色圆圈表示输出层，这些特征层在同一个行中具有相同的分辨率。箭头指示特征层之间的连接或信息流的方向</p><p><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/6.png" alt="网格搜索示意"></p><h2 id="代码实现-3"><a class="markdownIt-Anchor" href="#代码实现-3"></a> 代码实现：</h2><p>​以 mmdetection 中的一部分代码为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, inputs: <span class="hljs-type">Tuple</span>[Tensor]</span>) -&gt; <span class="hljs-built_in">tuple</span>:<br>    <span class="hljs-comment"># [(8,256,160,160),</span><br>    <span class="hljs-comment">#  (8,512,80,80),</span><br>    <span class="hljs-comment">#  (8,1024,40,40),</span><br>    <span class="hljs-comment">#  (8,2048,20,20)]</span><br>    <span class="hljs-string">&quot;&quot;&quot;Forward function.</span><br><span class="hljs-string">     Args:</span><br><span class="hljs-string">        inputs (tuple[Tensor]): Features from the upstream network, each</span><br><span class="hljs-string">            is a 4D-tensor.</span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        tuple: Feature maps, each is a 4D-tensor.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-comment"># build P3-P5</span><br>    feats = [<br>        lateral_conv(inputs[i + self.start_level])<br>        <span class="hljs-keyword">for</span> i, lateral_conv <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(self.lateral_convs)<br>    ]  <span class="hljs-comment"># [(8,256,80,80),(8,256,40,40),(8,256,20,20)]</span><br>    <span class="hljs-comment"># build P6-P7 on top of P5</span><br>    <span class="hljs-keyword">for</span> downsample <span class="hljs-keyword">in</span> self.extra_downsamples:<br>        feats.append(downsample(feats[-<span class="hljs-number">1</span>]))  <span class="hljs-comment"># [..., (8,256,10,10),(8,256,5,5)]</span><br> <br>    p3, p4, p5, p6, p7 = feats<br> <br>    <span class="hljs-keyword">for</span> stage <span class="hljs-keyword">in</span> self.fpn_stages:<br>        <span class="hljs-comment"># gp(p6, p4) -&gt; p4_1</span><br>        <span class="hljs-comment"># print(stage[&#x27;gp_64_4&#x27;])</span><br>        p4_1 = stage[<span class="hljs-string">&#x27;gp_64_4&#x27;</span>](p6, p4, out_size=p4.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,40,40)</span><br>        <span class="hljs-comment"># sum(p4_1, p4) -&gt; p4_2</span><br>        p4_2 = stage[<span class="hljs-string">&#x27;sum_44_4&#x27;</span>](p4_1, p4, out_size=p4.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,40,40)</span><br>        <span class="hljs-comment"># sum(p4_2, p3) -&gt; p3_out</span><br>        p3 = stage[<span class="hljs-string">&#x27;sum_43_3&#x27;</span>](p4_2, p3, out_size=p3.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,80,80)</span><br>        <span class="hljs-comment"># sum(p3_out, p4_2) -&gt; p4_out</span><br>        p4 = stage[<span class="hljs-string">&#x27;sum_34_4&#x27;</span>](p3, p4_2, out_size=p4.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,40,40)</span><br>        <span class="hljs-comment"># sum(p5, gp(p4_out, p3_out)) -&gt; p5_out</span><br>        p5_tmp = stage[<span class="hljs-string">&#x27;gp_43_5&#x27;</span>](p4, p3, out_size=p5.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,20,20)</span><br>        p5 = stage[<span class="hljs-string">&#x27;sum_55_5&#x27;</span>](p5, p5_tmp, out_size=p5.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,20,20)</span><br>        <span class="hljs-comment"># sum(p7, gp(p5_out, p4_2)) -&gt; p7_out</span><br>        p7_tmp = stage[<span class="hljs-string">&#x27;gp_54_7&#x27;</span>](p5, p4_2, out_size=p7.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,5,5)</span><br>        p7 = stage[<span class="hljs-string">&#x27;sum_77_7&#x27;</span>](p7, p7_tmp, out_size=p7.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,5,5)</span><br>        <span class="hljs-comment"># gp(p7_out, p5_out) -&gt; p6_out</span><br>        p6 = stage[<span class="hljs-string">&#x27;gp_75_6&#x27;</span>](p7, p5, out_size=p6.shape[-<span class="hljs-number">2</span>:])  <span class="hljs-comment"># (8,256,10,10)</span><br> <br>    <span class="hljs-keyword">return</span> p3, p4, p5, p6, p7<br></code></pre></td></tr></table></figure><h1 id="panetpath-aggregation-network"><a class="markdownIt-Anchor" href="#panetpath-aggregation-network"></a> PANet(Path Aggregation Network)</h1><h2 id="motivation-4"><a class="markdownIt-Anchor" href="#motivation-4"></a> Motivation:</h2><p>​dense prediction task 不仅要关心语义信息，还要关注图像的精确到像素点的浅层信息。PANet 最大的贡献是提出了一个自顶向下和自底向上的双向融合骨干网络，同时在最底层和最高层之间添加了一条“short-cut”，用于缩短层之间的路径</p><h2 id="网络结构解析-4"><a class="markdownIt-Anchor" href="#网络结构解析-4"></a> 网络结构解析：</h2><p>​PANet网络结构如下：<br><img src="/2024/04/05/%E5%B8%B8%E7%94%A8Neck%E7%BD%91%E7%BB%9C/7.png" alt="PANet"></p><p>​具体的实现比较简单，就是在FPN的基础上加上了一个Neck部分，再通过两条虚线将浅层网络信息跳连到深层网络中（按理来说PANet是可以在NAS-FPN那篇论文中搜索到的，查了一下确实PANet的发表时间早于NAS-FPN）</p><h1 id="其它"><a class="markdownIt-Anchor" href="#其它"></a> 其它：</h1><p>​还有各种FPN网络如PANet、ASFF、NAS-FPN、BiFPN、Recursive-FPN…太多了，有需要的时候再查</p><p>​个人感想：要是 NAS 能够改变算法能够搜索地足够快的话，能把这些 FPN 网络全部搜索完就好了，哪需要认为设计这么多乱七八糟的 FPN…</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>8086寻址方式</title>
    <link href="/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F/"/>
    <url>/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="8086寻址方式详解"><a class="markdownIt-Anchor" href="#8086寻址方式详解"></a> 8086寻址方式详解</h1><p><img src="/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F/1.png" alt="数据允许传输的方式"></p><p>​MOV指令只能在这些有箭头的流向使用，比如通用寄存器到通用寄存器，而不能立即数到立即数</p><h2 id="寻址方式分类"><a class="markdownIt-Anchor" href="#寻址方式分类"></a> 寻址方式分类</h2><p>​8086有三种基本的寻址方式：</p><ul><li>立即寻址（源操作数在指令中）<code>MOV AL 26H</code></li><li>寄存器寻址（源操作数在寄存器中）（执行速度最快）<code>MOV DX AX</code></li><li>存储器寻址（源操作书在存储器中）（执行速度最慢）</li></ul><p>其中，存储器寻址（操作数一般存放在数据段，所以操作数的段地址默认为DS）还可以分为：</p><ul><li>直接寻址</li><li>寄存器间接寻址</li><li>寄存器相对寻址</li><li>基址变址寻址</li><li>相对基址变址寻址</li></ul><h2 id="存储器寻址"><a class="markdownIt-Anchor" href="#存储器寻址"></a> 存储器寻址：</h2><h3 id="约定"><a class="markdownIt-Anchor" href="#约定"></a> 约定：</h3><p>​操作数的偏移地址称为有效地址，有效地址要加上方括号，以便与立即数区别（<strong>方括号代表着相对地址或者加法</strong>）</p><ul><li>“相对”就代表着用一个数值偏移量</li></ul><h3 id="直接寻址方法"><a class="markdownIt-Anchor" href="#直接寻址方法"></a> 直接寻址方法：</h3><ul><li>直接寻址：<code>MOV AX,[2000H]</code> 省略掉段地址，使用默认的DS</li><li>超越段前缀：使用冒号修改段前缀 <code>MOV AX,ES:[500H]</code></li><li>符号地址：使用一个符号代替数值，汇编之后本质与直接寻址一样</li></ul><h3 id="寄存器间接寻址"><a class="markdownIt-Anchor" href="#寄存器间接寻址"></a> 寄存器间接寻址：</h3><p>​本质上就是用寄存器里面的值代替数值，例如 <code>MOV BX,DS:[BP]</code></p><h3 id="寄存器相对寻址"><a class="markdownIt-Anchor" href="#寄存器相对寻址"></a> 寄存器相对寻址：</h3><p>​在间接寻址的基础上再加上一个位移量（偏移量是数值）。此时没有冒号的方括号可以理解为加法：<code>MOV AX,COUNT[SI]</code>（基地址默认使用了DS）</p><h3 id="基址变址寻址"><a class="markdownIt-Anchor" href="#基址变址寻址"></a> 基址变址寻址：</h3><p>​使用基址寄存器和变址寄存器，类似于寄存器相对寻址将数值变为寄存器内数值：<code>MOV AX,[BX][SI]</code>（段地址使用了DS，两个方括号就是加法）</p><h3 id="相对基址变址"><a class="markdownIt-Anchor" href="#相对基址变址"></a> 相对基址变址：</h3><p>​在基址变址的基础上再加入一个数值偏移量：<code>MOV AX,MASK[BX][SI]</code></p><h2 id="其他寻址方式io端口寻址"><a class="markdownIt-Anchor" href="#其他寻址方式io端口寻址"></a> 其他寻址方式（I/O端口寻址）：</h2><p>​由于8086端口有64k个（共计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>16</mn></msup></mrow><annotation encoding="application/x-tex">2^{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></span> 个地址），I/O 端口寻址默认使用立即数为8位，因此两种寻址方式为使用8位的直接寻址和使用16位的相对寻址</p><ul><li>直接寻址方式：<code>IN AL,63H</code></li><li>相对寻址方式：<code>MOV DX,213H   IN AL,DX</code></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>8086内部寄存器</title>
    <link href="/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%84%E5%AD%98%E5%99%A8/"/>
    <url>/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%84%E5%AD%98%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="8086内部寄存器"><a class="markdownIt-Anchor" href="#8086内部寄存器"></a> 8086内部寄存器</h1><p><img src="/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%84%E5%AD%98%E5%99%A8/1.png" alt="全部寄存器"></p><ul><li><strong>AX，BX，CX，DX称为数据寄存器：</strong></li></ul><p>AX (Accumulator)：累加寄存器，也称为累加器</p><p>BX (Base)：基地址寄存器</p><p>CX (Count)：计数器寄存器</p><p>DX (Data)：数据寄存器</p><ul><li><strong>SP和BP称为指针寄存器：</strong></li></ul><p>SP (Stack Pointer)：堆栈指针寄存器（存放栈顶的逻辑偏移地址）</p><p>BP (Base Pointer)：基指针寄存器（存放内存的逻辑偏移地址，比如调用的时候寄存）</p><ul><li><strong>SI和DI又称作为变址寄存器：</strong></li></ul><p>SI (Source Index)：源变址寄存器</p><p>DI (Destination Index)：目的变址寄存器</p><ul><li><strong>控制寄存器：</strong></li></ul><p>IP (Instruction Pointer)：指令指针寄存器</p><p>FLAG：标志寄存器</p><ul><li><strong>段寄存器：</strong></li></ul><p>CS (Code Segment)：代码段寄存器</p><p>DS (Data Segment)：数据段寄存器</p><p>SS (Stack Segment)：堆栈段寄存器</p><p>ES (Extra Segment)：附加段寄存器</p><h2 id="默认寄存器的使用"><a class="markdownIt-Anchor" href="#默认寄存器的使用"></a> 默认寄存器的使用：</h2><p>在8086微处理器中，有些寄存器组合在一起使用是出于特定的寻址模式、数据传输或运算目的。以下是一些默认一起使用的寄存器组合：</p><ol><li><p><strong>段寄存器与数据/地址寄存器</strong>：</p><ul><li><strong>数据段寄存器 DS</strong> 与 <strong>数据寄存变址寄存器</strong> 组合，用于访问内存中的数据。<strong>在默认情况下，大多数内存操作数的寻址会隐式使用DS段寄存器作为前缀</strong>，除非显式指定其他段寄存器（如ES、SS等）</li><li><strong>堆栈段寄存器 SS</strong> 与 <strong>堆栈指针寄存器 SP</strong> 组合，用于栈操作。<code>PUSH</code>、<code>POP</code>、<code>PUSHF</code>、<code>POPF</code>、<code>CALL</code>、<code>RET</code>等指令会自动结合SS和SP来寻址栈顶元素</li><li><strong>附加段寄存器 ES</strong> 与 <strong>数据寄存器或变址寄存器</strong> 组合，用于访问额外的数据区域，特别是进行字符串操作时（如<code>MOVS</code>, <code>CMPS</code>, <code>STOS</code>, <code>LODS</code>等指令），默认使用ES作为段寄存器</li></ul></li><li><p><strong>基址寄存器（BX或BP）与变址寄存器（SI或DI）</strong>：</p><ul><li><p>在基址加变址寻址模式中，基址寄存器（BX或BP）和变址寄存器（SI或DI）一起使用，形成复杂寻址方式，用于访问内存中相对于某个基址和变址偏移量的位置。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs assembly">MOV AL, [BX+SI] ; 基于BX和SI的偏移寻址内存数据<br></code></pre></td></tr></table></figure></li></ul></li><li><p><strong>指令指针寄存器 IP 与代码段寄存器 CS</strong>：</p><ul><li>IP 和 CS 一起构成了当前指令的完整逻辑地址（物理地址 = CS × 16 + IP）。虽然它们在编程中不直接作为一对来操作，但在硬件层面始终是一起工作的，以确定下一条要执行的指令所在的位置</li></ul></li></ol><p><img src="/2024/03/30/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/%E6%B1%87%E7%BC%96/8086%E5%AF%84%E5%AD%98%E5%99%A8/2.png" alt="各个段的访问"></p><h2 id="不可修改的寄存器"><a class="markdownIt-Anchor" href="#不可修改的寄存器"></a> 不可修改的寄存器：</h2><ol><li><strong>指令指针寄存器</strong>（Instruction Pointer, IP）：<ul><li><strong>不可直接修改</strong>：IP寄存器存储了下一条要执行指令的偏移地址，它不能直接通过<code>MOV</code>指令赋值。IP的修改通常由转移（jump）指令、调用（call）指令、中断处理（interrupt handling）等自动完成，这些指令会根据需要自动更新IP的值。</li></ul></li><li><strong>代码段寄存器</strong>（Code Segment, CS）：<ul><li><strong>间接影响IP</strong>：与IP类似，上述转移指令、调用指令或者系统级操作（如任务切换、中断处理等）间接完成，这些操作会同时更新CS和IP</li></ul></li><li><strong>栈段寄存器</strong>（Stack Segment, SS）和<strong>堆栈指针寄存器</strong>（Stack Pointer, SP）：<ul><li><strong>通常不单独修改</strong>：虽然SS和SP寄存器可以被<code>MOV</code>指令修改，但在实际编程中，通常不会直接对SS赋值，而是通过<code>POP</code>、<code>PUSH</code>、<code>CALL</code>、<code>RET</code>等指令间接修改SP，同时这些指令也会隐含地影响SS（如果需要切换栈段）</li></ul></li></ol><p>请注意，上述“不可直接修改”或“通常不单独修改”指的是通过常规的<code>MOV</code>指令直接赋值，而不是指这些寄存器在运行过程中永远不变。实际上，它们的值会随着程序的执行和特定指令的操作而动态变化</p><h2 id="各个段在内存的分布情况"><a class="markdownIt-Anchor" href="#各个段在内存的分布情况"></a> 各个段在内存的分布情况：</h2><ul><li><p>代码段：通常位于内存的低地址区域（向下增长）</p></li><li><p>数据段：通常紧邻代码段下方，存放已初始化的全局变量、静态变量和常量</p></li><li><p>堆栈段：通常位于内存的最高地址区域，其底部不断增长（向上增长）</p></li><li><p>附加段本身不是一个独立的内存区域，而是一个段寄存器，它存储的是一个内存段的地址。可以在程序中动态设定ES寄存器的值，使其指向任何已分配且合适的内存区域</p></li></ul><p>概括来说，代码段、数据段、堆栈段在内存中的相对位置大致如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs code">低地址   ---------------------------- <br>        |                          |<br>        |          代码段           |<br>        |                          |<br>        |--------------------------|<br>        |          数据段           |<br>        |--------------------------|<br>        |           ...            |<br>        |--------------------------|<br>        |      堆栈段（向上增长）     |<br>高地址   ----------------------------<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMDetection1</title>
    <link href="/2024/03/28/MMDetection1/"/>
    <url>/2024/03/28/MMDetection1/</url>
    
    <content type="html"><![CDATA[<h1 id="mmdection教程1"><a class="markdownIt-Anchor" href="#mmdection教程1"></a> MMDection教程(1)</h1><h2 id="框架整体流程"><a class="markdownIt-Anchor" href="#框架整体流程"></a> 框架整体流程</h2><p>​我们将 Pytorch 训练流程和 MMDection 训练流程做对比：</p><h3 id="pytorch"><a class="markdownIt-Anchor" href="#pytorch"></a> Pytorch</h3><p>我们使用Pytorch构建一个新算法时，通常包含如下几步：</p><ul><li><strong>构建数据集</strong>：新建一个类，并继承<code>Dataset</code>类，重写<code>__getitem__()</code>方法实现数据和标签的加载和遍历功能，并以pipeline的方式定义数据预处理流程</li><li><strong>构建数据加载器</strong>：传入相应的参数实例化DataLoader</li><li><strong>构建模型</strong>：新建一个类，并继承<code>Module</code>类，重写<code>forward()</code>函数定义模型的前向过程</li><li><strong>定义损失函数和优化器</strong>：根据算法选择合适和损失函数和优化器</li><li><strong>训练和验证</strong>：循环从DataLoader中获取数据和标签，送入网络模型，计算loss，根据反传的梯度使用优化器进行迭代优化</li><li><strong>其他操作</strong>：在主调函数里可以任意穿插训练Tricks、日志打印、检查点保存等操作</li></ul><h3 id="mmdetection"><a class="markdownIt-Anchor" href="#mmdetection"></a> MMDetection</h3><p>使用Pytorch构建一个新算法时，通常包含如下几步：</p><ul><li><strong>注册数据集</strong>：<code>CustomDataset</code>是MMDetection在原始的<code>Dataset</code>基础上的再次封装，其<code>__getitem__()</code>方法会根据训练和测试模式分别重定向到<code>prepare_train_img()</code>和<code>prepare_test_img()</code>函数。用户以继承<code>CustomDataset</code>类的方式构建自己的数据集时，需要重写<code>load_annotations()</code>和<code>get_ann_info()</code>函数，定义数据和标签的加载及遍历方式。完成数据集类的定义后，还需要使用<code>DATASETS.register_module()</code>进行模块注册</li><li><strong>注册模型</strong>：模型构建的方式和Pytorch类似，都是新建一个<code>Module</code>的子类然后重写<code>forward()</code>函数。唯一的区别在于MMDetection中需要继承<code>BaseModule</code>而不是<code>Module</code>，<code>BaseModule</code>是<code>Module</code>的子类，MMLab中的任何模型都必须继承此类。另外，MMDetection将一个完整的模型拆分为backbone、neck和head三部分进行管理，所以用户需要按照这种方式，将算法模型拆解成3个类，分别使用<code>BACKBONES.register_module()</code>、<code>NECKS.register_module()</code>和<code>HEADS.register_module()</code>完成模块注册</li><li><strong>构建配置文件</strong>：配置文件用于配置算法各个组件的运行参数，大体上可以包含四个部分：datasets、models、schedules和runtime。完成相应模块的定义和注册后，在配置文件中配置好相应的运行参数，然后MMDetection就会通过<code>Registry</code>类读取并解析配置文件，完成模块的实例化。另外，配置文件可以通过<code>_base_</code>字段实现继承功能，以提高代码复用率</li><li><strong>训练和验证</strong>：在完成各模块的代码实现、模块的注册、配置文件的编写后，就可以使用<code>./tools/train.py</code>和<code>./tools/test.py</code>对模型进行训练和验证，不需要用户编写额外的代码</li></ul><h3 id="23-流程对比"><a class="markdownIt-Anchor" href="#23-流程对比"></a> 2.3 流程对比</h3><p>虽然从步骤上看MMDetection相比Pytorch的算法实现步骤存在挺大差异，但底层的逻辑实现和Pytorch本质上还是一样的，可以参考下图对照着进行理解，其中蓝色部分表示Pytorch流程，橙色部分表示MMDetection流程，绿色部分表示和算法框架无关的通用流程。</p><p><img src="https://img-blog.csdnimg.cn/a13afdb1195f46148843a818cc8f5bbf.png" alt="img"></p><p></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实用网站</title>
    <link href="/2024/03/28/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/"/>
    <url>/2024/03/28/%E5%AE%9E%E7%94%A8%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="科研实用网站"><a class="markdownIt-Anchor" href="#科研实用网站"></a> 科研实用网站</h1><h2 id="资源类"><a class="markdownIt-Anchor" href="#资源类"></a> 资源类：</h2><ul><li><p><a href="https://universe.roboflow.com/">Roboflow Universe: Open Source Computer Vision Community</a> - 它是</p><p>一个致力于简化从数据标注到模型训练的整个流程的网站。它是目前最大的 cv 方向数据集和网络的合集网站，以下是它其中的一些实用网站：</p><ul><li><a href="https://universe.roboflow.com/search?q=class%3Atoy">Top Toy Datasets and Models | Roboflow Universe</a> - toy 的数据集和模型，做小型实验的时候很有用</li><li>同理可以在这个网站作分类出各种任务的网络</li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/03/28/%E7%A7%91%E7%A0%94%E6%B2%89%E6%80%9D%E5%BD%95-1/"/>
    <url>/2024/03/28/%E7%A7%91%E7%A0%94%E6%B2%89%E6%80%9D%E5%BD%95-1/</url>
    
    <content type="html"><![CDATA[<h1 id="simple-is-better-than-complex"><a class="markdownIt-Anchor" href="#simple-is-better-than-complex"></a> Simple is better than complex.</h1><p>​Python 之禅告诉了我们优雅的代码应该如何编写：</p><blockquote><p>Beautiful is better than ugly.<br>Explicit is better than implicit.<br>Simple is better than complex.<br>Complex is better than complicated.<br>Flat is better than nested.<br>Sparse is better than dense.<br>Readability counts.<br>Special cases aren’t special enough to break the rules.<br>Although practicality beats purity.<br>Errors should never pass silently.<br>Unless explicitly silenced.<br>In the face of ambiguity, refuse the temptation to guess.<br>There should be one-- and preferably only one --obvious way to do it.<br>Although that way may not be obvious at first unless you’re Dutch.<br>Now is better than never.<br>Although never is often better than <em>right</em> now.<br>If the implementation is hard to explain, it’s a bad idea.<br>If the implementation is easy to explain, it may be a good idea.<br>Namespaces are one honking great idea – let’s do more of those!</p></blockquote><p>​最近读到了一篇名为 FeatUp 的论文，受这篇论文震惊之余，更理解了 Python 之禅的精神，FeatUp 论文提出了一个有效的采样算子，在投第一版的时候因为其本身的性能不够好，因而被拒稿了，在第二版的时候在第一版上的基础上加入了各种技巧，把性能硬生生拉到了 SOTA 的效果。但是在我眼里，它反而因为引入了过多的奇技淫巧牺牲了整片论文的 elegance。相比于之前的 dysample 和 SAPA 等论文，它们可能没有过多的技巧，但是通过最简单的方式改善性能。再加上最近因为审稿而读的 Beyond CARAFE 论文（这篇论文纯属灌水），我把论文分为三类：</p><ul><li>可有可无的论文：所有灌水的论文都属于这一类（Beyond CARAFE），论文所作的贡献可有可无。如果拒稿理所当然，如果接受该论文就会迅速被人遗忘</li><li>很好地 work 的论文：FeatUp 就是属于这一类的论文，它通过一些暴力的方法（技巧）把性能硬生生拉成 SOTA，它可以给许多人提供 idea，但它绝不是属于最好的论文</li><li>不失性能而且优雅的论文：UNet，Transformer 等经典论文都是属于这一类，用最简单朴素的 idea 达到最好的性能。我相信大道至简，大巧若拙</li></ul><h2 id="再读python之禅"><a class="markdownIt-Anchor" href="#再读python之禅"></a> 再读Python之禅</h2><ol><li><strong>优美胜于丑陋</strong>（Beautiful is better than ugly）——科研工作不只是寻找答案，更是追求一种内在逻辑之美，简洁而富有力量的理论往往比繁复混乱的解释更能体现科学的价值。优美的实验设计、清晰的数据呈现和优雅的结论推理，都是科研人员应当追求的目标</li><li><strong>明了胜于晦涩</strong>（Explicit is better than implicit）——在科研交流与报告中，直截了当、明确清晰的表述优于隐晦难懂的语言。这意味着研究成果应当清楚地阐述假设、方法、数据和结论，避免读者产生误解，确保可重复性和可验证性</li><li><strong>简单胜于复杂</strong>（Simple is better than complex）——解决问题时，寻求简单的解决方案常常更为有效。科研过程中应尽量简化模型、优化实验步骤，减少不必要的变量干扰，以便更准确地把握事物的本质。</li><li><strong>复杂胜过过度复杂</strong>（Complex is better than complicated）——虽然科学研究不可避免地涉及复杂性，但应避免不必要的复杂化。在复杂系统中找到秩序和规律，构建起结构化的理论框架，才是科研智慧的体现</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>FeatUp(1)</title>
    <link href="/2024/03/27/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FeatUp/"/>
    <url>/2024/03/27/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FeatUp/</url>
    
    <content type="html"><![CDATA[<h1 id="featup"><a class="markdownIt-Anchor" href="#featup"></a> FeatUp</h1><p>​本文章通过借助图像重建的思路提出了一种新型上采样算子，这篇论文的idea可以用以下几点概括：</p><ul><li>借助3D图像重建网络NeRF的想法：多个视角下的地分辨率信号可以指导采样高分辨率的特征图的“重建“过程，这里的“多个视角”指对原低分辨率特征图进行各种微调（jittered）之后的特征图，通过这些低分辨率的特征图可以有效地帮助重建高分辨率信号</li><li>以Joint Bilateral Upsampling (JBU)采样算子为基础，在此基础上进行一般化推广为这篇文章中的结果</li></ul><h2 id="网络结构"><a class="markdownIt-Anchor" href="#网络结构"></a> 网络结构：</h2><p>​这篇文章的核心就是借助NeRF中从不同的视角观察3D场景，以此去“强迫2D图片的连续性”</p><p>​网络结构如下图所示，网络先使用backbone网络去引导学习下采样算子，再通过</p><p><img src="/2024/03/27/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FeatUp/1.png" alt="网络示意图"></p><p>​用符号语言表示如下：设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 是一种transform（比如旋转，裁剪，镜像扩张等），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 组成的集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span> 为指导训练下采样核的backbone，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mo>↓</mo></msub></mrow><annotation encoding="application/x-tex">\sigma_\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mrel mtight">↓</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 为待训练的下采样算子，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mo>↑</mo></msub></mrow><annotation encoding="application/x-tex">\sigma_\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mrel mtight">↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 为学习出的上采样算子，则可以得到预测出来的高分辨率图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo>=</mo><msub><mi>σ</mi><mo lspace="0em" rspace="0em">↑</mo></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{hr}=\sigma_{\uparrow}(f(x),x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">↑</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ，注意：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mo>↑</mo></msub></mrow><annotation encoding="application/x-tex">\sigma_\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mrel mtight">↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 同时依赖于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>（称为guided），不是 unguided upsampler（仅依赖于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> ），不是一个 implicit network（仅依赖于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>），更不是一个 learned buffer（与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>）均无关</p><p>​则我们得到的多视角重建损失函数如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">L</mi><mrow><mi>r</mi><mi>e</mi><mi>c</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><munder><mo>∑</mo><mrow><mi>t</mi><mo>∈</mo><mi>T</mi></mrow></munder><mo stretchy="false">∥</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo><msub><mi>σ</mi><mo lspace="0em" rspace="0em">↓</mo></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mo stretchy="false">∥</mo><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathscr{L}_{rec} = \frac{1}{T} \sum_{t \in T} \lVert f(t(x)) - \sigma_{\downarrow} (t(F_{hr})) \rVert_2^2 + log(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathscr" style="margin-right:0.19189em;">L</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6431459999999998em;vertical-align:-1.321706em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.321706em;"><span></span></span></span></span></span><span class="mopen">∥</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.150216em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">↓</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s=\mathcal{N}(f(t(x)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> 是 spatially-varying adaptive 不确定度通过一个 Linear 层 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">N</mi></mrow><annotation encoding="application/x-tex">\mathcal{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14736em;">N</span></span></span></span></span> 转化为一个标量值，这一项将 MSE loss 变为能够恰当处理不确定性的合理似然性 loss（proper likelihood capable of handling uncertainty），<strong>这种额外的灵活性使得网络能够在某些异常特征根本无法上采样的情况下进行学习</strong></p><h2 id="选择下采样核"><a class="markdownIt-Anchor" href="#选择下采样核"></a> 选择下采样核：</h2><p>​本文中选取了两种下采样核：一个是轻量级的可学习的 blur kernel，另一个是更加灵活的基于 attention 的采样核，它们都是通过简单地使用邻域信息插值像素点（没多高级）</p><ul><li>第一种下采样核选取为简单地卷积核，卷积核每个值被保证为正且和为1（保证强度的连续性）</li><li>第二种下采样核改进了第一种下采样核几种缺点：不能动态地改变感受野大小，不能动态地感受 object salience 和不支持非线性映射。第二种下采样核规则如下：先对预测高分辨图使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积核生成一个重要性特征图（saliency map），再通过与一个 spatially-invariant weight and bias kernel 进行掩码计算得到下采样图：</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mo lspace="0em" rspace="0em">↓</mo></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><msub><mo stretchy="false">)</mo><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>w</mi><mtext> </mtext><mo>⊙</mo><mtext> </mtext><mi>C</mi><mi>o</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo stretchy="false">[</mo><msub><mi>Ω</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo stretchy="false">[</mo><msub><mi>Ω</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\sigma_{\downarrow}(F_{hr})_{ij} = softmax(w\  \odot \ Conv(F_{hr}[\varOmega_{ij}]) + b)\  \cdot \ F_{hr}[\varOmega_{ij}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">↓</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathit">Ω</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathit">Ω</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mo lspace="0em" rspace="0em">↓</mo></msub><mo stretchy="false">(</mo><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><msub><mo stretchy="false">)</mo><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{\downarrow}(F_{hr})_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">↓</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是下采样后在坐标为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的像素点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo stretchy="false">[</mo><msub><mi>Ω</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">F_{hr}[\varOmega_{ij}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord"><span class="mord mathit">Ω</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span> 是对应下采样坐标为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i,j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 像素点的原图像的 patch，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 是学习得到的 weight 和 bias（对所有 patch 共用）</p><h2 id="选择上采样核"><a class="markdownIt-Anchor" href="#选择上采样核"></a> 选择上采样核：</h2><p>​选择上采样核是一个关键的步骤，本文选择了两个上采样核：</p><ul><li>Joint Bilateral Upsamplers（JBU）</li><li>“Implicit” FeatUp，它使用</li></ul><h3 id="joint-bilateral-upsampler"><a class="markdownIt-Anchor" href="#joint-bilateral-upsampler"></a> Joint Bilateral Upsampler：</h3><p>​上采样算子定义为一串参数化的 JBU 复合算子：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">(</mo><mi>J</mi><mi>B</mi><mi>U</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>∘</mo><mtext> </mtext><mi>B</mi><mi>J</mi><mi>U</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>∘</mo><mtext> </mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{hr} = \left( JBU(\cdot, x)  \  \circ\  BJU(\cdot, x) \  \circ \  ...\right)(f(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∘</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 是低分辨率图，本文推广了 BJU 的计算过程（generalizes the original JBU (Kopf et al., 2007) implementation to high-dimensional signals and makes this operation learnable）让它变得可学习，使用了一个高分辨率的信号 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span> 指导对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{lr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的采样过程，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span></span></span></span> 中的像素点邻域，本文使用了以目标点为中心的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 的邻域，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo separator="true">,</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(\cdot, \cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span> 为相似度函数，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 为正则化因子（保证值为1），则推广的 BJU 算子如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>F</mi><mo>^</mo></mover><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mfrac><mn>1</mn><mi>Z</mi></mfrac><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="normal">Ω</mi></mrow></munder><mrow><mo fence="true">(</mo><msub><mi>F</mi><mrow><mi>l</mi><mi>r</mi></mrow></msub><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo>×</mo><msub><mi>k</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext> </mtext><mi>G</mi><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>×</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\hat F_{hr}[i, j] = \frac{1}{Z} \sum_{(a, b) \in \Omega}\left( F_{lr}[a, b] \times k_{range}(G[i, j],\  G[a, b]) \times k_{spatial}([i, j],\ [a, b])  \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.8374449999999998em;vertical-align:-1.516005em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight">Ω</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">k_{spatial}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是一个可学习的 Gaussian Kernel（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{spatial}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 可学习），为了协调高分辨率和低分辨率坐标范围不一样的问题，本文将将距离都正则化到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> 的范围：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>k</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mo>−</mo><mo stretchy="false">∥</mo><mi>x</mi><mo>−</mo><mi>y</mi><msubsup><mo stretchy="false">∥</mo><mn>2</mn><mn>2</mn></msubsup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mrow><mi>s</mi><mi>p</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>a</mi><mi>l</mi></mrow><mn>2</mn></msubsup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">k_{spatial}(x, y) = exp \left( \frac{-\lVert x-y \rVert_2^2}{2 \sigma_{spatial}^2}   \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.795908em;"><span style="top:-2.3986920000000005em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374159999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mopen">∥</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">∥</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.123416em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p><p>而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">k_{range}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是 temperature-weighted softmax，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{range}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 是 temperature 因子：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>K</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><msub><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="normal">Ω</mi></mrow></msub><mrow><mo fence="true">(</mo><mfrac><mn>1</mn><msubsup><mi>σ</mi><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mrow><mn>2</mn></msubsup></mfrac><mi>M</mi><mi>L</mi><mi>P</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">[</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo>⋅</mo><mi>M</mi><mi>L</mi><mi>P</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">K_{range}(x, y) = softmax_{(a,b) \in \Omega} \left(\frac{1}{\sigma^2_{range}} MLP(G[i, j]) \cdot MLP(G[a, b]) \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.519108em;vertical-align:-1.069108em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight">Ω</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7401079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span></span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.069108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>在本文中 MLP 设置了一个30维的隐藏层和两个 GeLU 激活函数</p><p>​评估低分辨率特征图 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>l</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">F_{lr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中的位置坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a, b]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span></span></span></span> 时，遵循原始的联合双边上采样（Joint Bilateral Upsampling, JBU）公式进行处理。（评估位置坐标(evaluate)就是如果指导像素（guidance pixel）与低分辨率特征图中的某个像素点并未完全重合时，用双线性插值的方式来获取特征值，<strong>这是行话</strong>）</p><h3 id="implicit"><a class="markdownIt-Anchor" href="#implicit"></a> Implicit：</h3><p>​第二种上采样器架构与 NeRF 直接类比，通过使用一个隐式函数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><mi>P</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{hr}=MLP(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span> 来参数化单幅图像的高分辨率特征。已有若干现有的上采样解决方案采用了类似的推理时刻训练方法，包括DIP和LIIF。我们使用了一个小型多层感知机（MLP），用于将图像坐标和强度映射至给定位置的高维特征。<strong>利用傅立叶特征改进了隐式表示的空间分辨率。除了标准的傅立叶位置特征外，我们还展示了添加傅立叶颜色特征能使网络利用原始图像中的高频颜色信息。这一做法极大地加快了收敛速度，并能够在不依赖条件随机场（CRFs）等技术的情况下，优雅地利用高分辨率图像信息</strong></p><p>​令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>z</mi><mo separator="true">,</mo><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(z,\hat w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 代表逐内容（conponent-wise）的像素特征通过一个频率向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>w</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span> 经过离散傅里叶变换得到的特征，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>e</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">e_i,e_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 为二维像素坐标字段（像素坐标场（pixel coordinate fields）），是以浮点数表示的二维数组，其中每个元素对应图像中的一个像素点的横或纵坐标，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>:</mo></mrow><annotation encoding="application/x-tex">:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span></span></span></span> 代表 concatnate，用公式描述如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mrow><mi>h</mi><mi>r</mi></mrow></msub><mo>=</mo><mi>M</mi><mi>L</mi><mi>P</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><msub><mi>e</mi><mi>i</mi></msub><mo>:</mo><msub><mi>e</mi><mi>j</mi></msub><mo>:</mo><mi>x</mi><mo separator="true">,</mo><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_{hr} = MLP((h(e_i:e_j:x, \hat w)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>其中 MLP 设置为三层的 ReLU 网络，带有 0.1 的 dropout 和 layer normalization（可以学一下像这样调参），这种方式比第一种方式少了非常多的参数量和内存消耗</p><h2 id="论文中可以学习的技巧"><a class="markdownIt-Anchor" href="#论文中可以学习的技巧"></a> 论文中可以学习的技巧：</h2><ul><li>GeLU函数激活函数可能比传统的ReLU更加高效</li><li>要学会使用 dropout 层</li><li>比传统 softmax 更加灵活的 temperature-weighted softmax，温度参数T起到了调节输出概率分布陡峭程度的作用：<ul><li>当温度T &gt; 1时，softmax函数的输出更加平滑，每个类别的概率差异减小，模型变得更为保守，不倾向于过于确定某个类别</li><li>当T接近于0时，softmax函数趋于硬最大化，输出的概率分布更加尖锐，模型倾向于高度集中在具有最高logit值的类别上</li></ul></li><li>减少内存占用并进一步加速FeatUp隐式网络的训练过程，我们首先将空间变化的特征压缩为其前128个主成分。这一操作近乎无损，因为在一个图像的所有特征中，前128个主成分大约能解释96%的方差（这种方法使ResNet-50的训练时间提升了60倍）</li><li>图像中使用傅里叶特征，从空间域转换到频率域，允许对图像进行频率成分分析，可能比直接特征分析更加有效</li><li>为了避免在高分辨率特征中出现虚假噪声，论文在隐式特征幅度上添加了一个小的总变差平滑先验（Total Variation Prior），相较于对完整特征进行正则化，这种方法更加快速，并且避免了过度规定单个组件应该如何组织排列（在JBU上采样器中，由于它本身不容易过拟合，所以没有在这部分使用）</li></ul><p>问题：</p><p>at test time, we can query the pixel coordinate field to yield features Fhr at any resolution.</p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python实用用法</title>
    <link href="/2024/03/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Python%E5%AE%9E%E7%94%A8%E7%94%A8%E6%B3%95/"/>
    <url>/2024/03/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Python%E5%AE%9E%E7%94%A8%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="python实用用法"><a class="markdownIt-Anchor" href="#python实用用法"></a> Python实用用法</h1><h2 id="路径操作"><a class="markdownIt-Anchor" href="#路径操作"></a> 路径操作：</h2><p>​Python中常用路径操作库包括<code>os.path</code> 和 <code>pathlib.Path</code>，都是 Python 中用于处理文件和目录路径的模块，但它们的设计哲学和使用方式存在显著区别：</p><ol><li><code>os.path</code>：<ul><li>是一个基于字符串的操作库，提供了许多函数来处理路径名，如连接路径、拆分路径、判断是否为绝对路径、获取目录/文件名等</li><li>以过程式风格编写，所有操作返回的是字符串类型结果，需要手动拼接和管理路径对象，不支持跨平台的路径操作</li></ul></li><li><code>pathlib.Path</code>：<ul><li>是 Python 3.4 起引入的一个面向对象的库，提供了 <code>Path</code> 类，你可以创建 Path 对象表示文件或目录路径，通过类的方法进行各种路径操作</li><li><code>Path</code> 对象可以方便地进行链式调用，比如 <code>Path(&quot;/root&quot;).joinpath(&quot;dir&quot;, &quot;file.txt&quot;)</code>，这在代码可读性和简洁性上优于 <code>os.path</code></li><li>内置了对不同操作系统的支持，可以自动处理路径分隔符（Windows 上的反斜杠 <code>\</code> 或 Unix-like 系统上的正斜杠 <code>/</code>）</li></ul></li></ol><p>总之<code>pathlib.Path</code>的风格更加偏向 Pythonic，是更加推荐的一种方法</p><p><code>Pathlib</code>的常用用法：</p><ul><li><p><code>Path(path_string)</code>：这是最常用的，用于初始化一个Path对象</p></li><li><p><code>.joinpath(*other)</code> 或 <code>/</code> 运算符：连接路径组件形成新的路径</p></li><li><p><code>.absolute()</code>：获取绝对路径版本</p></li><li><p><code>.parent</code>、<code>.name</code>、<code>.stem</code> 和 <code>.suffix</code>：用于获取路径的组成部分</p></li><li><p><code>.exists()</code>：判断路径指向的文件或目录是否存在</p></li><li><p><code>.is_file()</code> 和 <code>.is_dir()</code>：分别判断是否为文件或目录</p></li><li><p><code>.read_text(encoding=None, errors=None)</code>：以文本模式读取文件内容</p></li><li><p><code>.write_text(text, encoding=None, errors=None)</code>：将文本内容写入文件</p></li><li><p><code>.mkdir()</code>：创建目录</p></li><li><p><code>.iterdir()</code>：遍历当前目录中的所有子目录和文件</p></li></ul><h2 id="关于对象的常用操作"><a class="markdownIt-Anchor" href="#关于对象的常用操作"></a> 关于对象的常用操作：</h2><ul><li><p><code>dir()</code>：返回一个包含对象所有属性名（包括方法）的列表。这对于查看一个对象的所有可用属性非常有用</p></li><li><p><code>setattr(obj, name, value)</code>：设置对象obj中名为name的属性为value</p></li><li><p><code>delattr(obj, name)</code>：删除对象obj中名为name的属性</p></li><li><p><code>hasattr()</code>：检查对象是否具有指定名称的属性</p></li><li><p><code>id()</code>：返回对象的唯一标识符（内存地址），通常用来比较两个对象是否是同一个实例</p></li><li><p><code>vars()</code> 返回对象的属性和属性值的字典表示。 当传入一个对象作为参数时，<code>vars(obj)</code> 会返回该对象的 <code>__dict__</code> 属性，如果不提供参数调用则返回当前作用域局部变量和全局变量组成的字典</p></li><li><p><code>type()</code> ：返回对象的类型（即类）</p></li></ul><h2 id="python-动态导入对象"><a class="markdownIt-Anchor" href="#python-动态导入对象"></a> Python 动态导入对象</h2><p>​<code>importlib.import_module()</code> 是 Python 标准库 <code>importlib</code> 模块中提供的一个函数，它用于在运行时动态地导入模块。这个函数允许你根据字符串参数来加载模块，而无需在程序开始时就静态地使用 <code>import</code> 语句导入。</p><p><strong>函数签名如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">importlib.import_module(name, package=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><ul><li><code>name</code>：必填参数，是一个字符串，指定了要导入的模块的名称。它可以是绝对模块名（例如 <code>'os'</code>）或相对模块名（例如 <code>'package.submodule'</code>），如果提供了 <code>package</code> 参数，则可以是相对于该包的模块名</li><li><code>package</code>：可选参数，默认为 <code>None</code>，如果提供了该参数，那么 <code>name</code> 将被解释为相对于 <code>package</code> 指定包的相对模块名</li></ul><p>​<strong>当需要在运行时根据条件或用户输入动态决定导入哪个模块时，<code>importlib.import_module()</code> 非常有用</strong>。函数返回的是所导入模块的实际对象，这样就可以直接访问和调用模块中的属性和函数了</p><p><strong>注：导入的搜索域是由 <code>sys.path</code> 表示</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入 importlib 模块</span><br><span class="hljs-keyword">import</span> importlib<br><br><span class="hljs-comment"># 假设我们有一个模块名为 &#x27;my_package.my_submodule&#x27;，并且该模块中定义了一个函数 `greeting`</span><br><span class="hljs-comment"># my_package/my_submodule.py 文件内容如下：</span><br><span class="hljs-comment"># def greeting(name):</span><br><span class="hljs-comment">#     return f&quot;Hello, &#123;name&#125;!&quot;</span><br><br><span class="hljs-comment"># 动态导入 &#x27;my_package.my_submodule&#x27; 模块</span><br>module_name = <span class="hljs-string">&quot;my_package.my_submodule&quot;</span><br>module = importlib.import_module(module_name)<br><br><span class="hljs-comment"># 现在我们可以调用模块中的函数</span><br>result = module.greeting(<span class="hljs-string">&quot;World&quot;</span>)<br><span class="hljs-built_in">print</span>(result)  <span class="hljs-comment"># 输出: Hello, World!</span><br><br><span class="hljs-comment"># 注意：通常情况下，如果 &#x27;my_package&#x27; 是一个包含子模块的包，那么在导入 &#x27;my_package&#x27; 包时它应该具有 __init__.py 文件。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Wandb教程(2)</title>
    <link href="/2024/03/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-2/"/>
    <url>/2024/03/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-2/</url>
    
    <content type="html"><![CDATA[<h1 id="wandb教程2"><a class="markdownIt-Anchor" href="#wandb教程2"></a> Wandb教程(2)</h1><h2 id="wand的推荐用法"><a class="markdownIt-Anchor" href="#wand的推荐用法"></a> Wand的推荐用法</h2><h3 id="config"><a class="markdownIt-Anchor" href="#config"></a> Config：</h3><h4 id="config的配置方法"><a class="markdownIt-Anchor" href="#config的配置方法"></a> config的配置方法：</h4><h5 id="直接赋值"><a class="markdownIt-Anchor" href="#直接赋值"></a> <strong>直接赋值</strong></h5><p>​在初始化 <code>wandb</code> 之前或之后，可以创建一个字典或使用 <code>wandb.config</code> 的属性赋值方式来设置配置项。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 方法一：直接创建一个字典并赋值给 wandb.config</span><br>config = &#123;<br>    <span class="hljs-string">&quot;learning_rate&quot;</span>: <span class="hljs-number">0.001</span>,<br>    <span class="hljs-string">&quot;batch_size&quot;</span>: <span class="hljs-number">64</span>,<br>    <span class="hljs-string">&quot;num_epochs&quot;</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-string">&quot;model_architecture&quot;</span>: <span class="hljs-string">&quot;ResNet18&quot;</span>,<br>    <span class="hljs-string">&quot;dataset_version&quot;</span>: <span class="hljs-string">&quot;v2.1&quot;</span><br>&#125;<br>wandb.config.update(config)<br><br><span class="hljs-comment"># 方法二：直接使用 wandb.config 属性赋值</span><br>wandb.config.learning_rate = <span class="hljs-number">0.001</span><br>wandb.config.batch_size = <span class="hljs-number">64</span><br>wandb.config.num_epochs = <span class="hljs-number">100</span><br>wandb.config.model_architecture = <span class="hljs-string">&quot;ResNet18&quot;</span><br>wandb.config.dataset_version = <span class="hljs-string">&quot;v2.1&quot;</span><br></code></pre></td></tr></table></figure><h5 id="使用-wandbinit-参数"><a class="markdownIt-Anchor" href="#使用-wandbinit-参数"></a> 使用 <code>wandb.init()</code> 参数</h5><p>​在调用 <code>wandb.init()</code> 时，可以直接传入一个字典作为 <code>config</code> 参数，将配置信息一次性设定好：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">config = &#123;<br>    <span class="hljs-string">&quot;learning_rate&quot;</span>: <span class="hljs-number">0.001</span>,<br>    <span class="hljs-string">&quot;batch_size&quot;</span>: <span class="hljs-number">64</span>,<br>    <span class="hljs-string">&quot;num_epochs&quot;</span>: <span class="hljs-number">100</span>,<br>    <span class="hljs-string">&quot;model_architecture&quot;</span>: <span class="hljs-string">&quot;ResNet18&quot;</span>,<br>    <span class="hljs-string">&quot;dataset_version&quot;</span>: <span class="hljs-string">&quot;v2.1&quot;</span><br>&#125;<br><br>wandb.init(project=<span class="hljs-string">&quot;my_project&quot;</span>, config=config)<br></code></pre></td></tr></table></figure><h5 id="使用-wandbconfigupdate"><a class="markdownIt-Anchor" href="#使用-wandbconfigupdate"></a> 使用 <code>wandb.config.update()</code></h5><p>在训练过程中，如果需要动态调整或添加配置项，可以使用 <code>wandb.config.update()</code> 方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">initial_config = &#123;<span class="hljs-string">&quot;learning_rate&quot;</span>: <span class="hljs-number">0.001</span>, <span class="hljs-string">&quot;batch_size&quot;</span>: &#125;<br>wandb.config.update(initial_config)<br><span class="hljs-comment"># 训练过程中动态调整或添加配置</span><br>midway_updates = &#123;<span class="hljs-string">&quot;learning_rate&quot;</span>: <span class="hljs-number">0.0005</span>, <span class="hljs-string">&quot;dropout_rate&quot;</span>: <span class="hljs-number">0.3</span>&#125;<br>wandb.config.update(midway_updates)<br></code></pre></td></tr></table></figure><h4 id="config的使用"><a class="markdownIt-Anchor" href="#config的使用"></a> config的使用</h4><p>​<strong>Wandb推荐将模型配置等参数传入train函数，用config去配置模型</strong>，例如模型的优化器可以如下配置：</p><h5 id="方法一显得有些繁琐"><a class="markdownIt-Anchor" href="#方法一显得有些繁琐"></a> 方法一（显得有些繁琐）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"> wandb.config = &#123;<br>     <span class="hljs-string">&quot;project_name&quot;</span>: <span class="hljs-string">&quot;your_project_name&quot;</span>,<br>     <span class="hljs-string">&quot;optim_type&quot;</span>: <span class="hljs-string">&quot;Adam&quot;</span>,<br>     <span class="hljs-string">&quot;learning_rate&quot;</span>: <span class="hljs-number">0.001</span>,<br>     <span class="hljs-string">&quot;momentum&quot;</span>: <span class="hljs-number">0.9</span>  <span class="hljs-comment"># 仅对 SGD 有效</span><br> &#125;<br><br>model = YourModelClass()  <span class="hljs-comment"># 替换为您的实际模型类</span><br><span class="hljs-comment"># 根据 wandb.config 创建优化器</span><br><span class="hljs-keyword">if</span> wandb.config.optim_type == <span class="hljs-string">&quot;Adam&quot;</span>:<br>    optimizer = torch.optim.Adam(model.parameters(), lr=wandb.config.learning_rate)<br><span class="hljs-keyword">elif</span> wandb.config.optim_type == <span class="hljs-string">&quot;SGD&quot;</span>:<br>    optimizer = torch.optim.SGD(model.parameters(), lr=wandb.config.learning_rate, momentum=wandb.config.momentum)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;Unsupported optimizer type: <span class="hljs-subst">&#123;wandb.config.optim_type&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h5 id="方法二可能不是那么优美"><a class="markdownIt-Anchor" href="#方法二可能不是那么优美"></a> 方法二（可能不是那么优美）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">optimizer = torch.optim.__dict__[config.optim_type](params=model.parameters(), lr=config.lr)<br></code></pre></td></tr></table></figure><p>​同时在train函数里面进行<code>wandb.init</code>，这样在同一次运行时多次记录训练信息时就很方便，例如将选取的算子信息写入config，再通过config传入train函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">train</span>(<span class="hljs-params">config</span>):<br>model = model(cofig.downsampler, cofig.upsampler)<br>    wandb.init(<br>        project=<span class="hljs-string">&#x27;project1&#x27;</span>,<br>        name=cofig.downsampler + cofig.upsampler,<br>        save_code=<span class="hljs-literal">True</span><br>    )<br>    <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span> config.epoch:<br>        ...<br>        wand.log(...)<br>wandb.finish()<br><br>    <br><span class="hljs-keyword">for</span> downsapmler <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;max-pooling&#x27;</span>, <span class="hljs-string">&#x27;NN&#x27;</span>, <span class="hljs-string">&#x27;convolution&#x27;</span>]:<br>    <span class="hljs-keyword">for</span> upsampler <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;max-unpooling&#x27;</span>, <span class="hljs-string">&#x27;bilinear&#x27;</span>]:<br>        config.downsampler = downsampler<br>        config.upsampler = upamppler<br>        train(config)<br></code></pre></td></tr></table></figure><h3 id="name的命名"><a class="markdownIt-Anchor" href="#name的命名"></a> name的命名：</h3><p>​这里的name指的是<code>wandb.init(name=‘’)</code>的name，推荐有两种命名方式：</p><h4 id="使用时间命名"><a class="markdownIt-Anchor" href="#使用时间命名"></a> 使用时间命名：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">nowtime = datetime.datetime.now().strftime(<span class="hljs-string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)<br>wandb.init(project=config.project_name, config=config.__dict__, name=nowtime, save_code=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h4 id="使用config的配置命名"><a class="markdownIt-Anchor" href="#使用config的配置命名"></a> 使用config的配置命名：</h4><p>​这种情况适用于比如网格搜索模型参数的时候比较参数的好坏：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.init(project=config.project_name, config=config.__dict__, name=config.<span class="hljs-built_in">str</span>, save_code=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><h2 id="版本管理"><a class="markdownIt-Anchor" href="#版本管理"></a> 版本管理</h2><p>​除了可以记录实验日志传递到 wandb 网站的云端服务器并进行可视化分析，wandb还能够将实验关联的数据集，代码和模型保存到 wandb 服务器非常便于对实验结果进行复现我们可以通过 <code>wandb.log_artifact</code>的方法来保存任务的关联的重要成果,例如dataset, code和 model，并进行版本管理</p><p><strong>注：artifact翻译为&quot;工件&quot;，是指软件开发中产出的最终成果.</strong></p><h2 id="case分析"><a class="markdownIt-Anchor" href="#case分析"></a> Case分析</h2><p>​利用 wandb.Table 我们可以在 wandb的 dashboard 进行交互式可视化的 case分析</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Wandb教程(1)</title>
    <link href="/2024/03/17/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-1/"/>
    <url>/2024/03/17/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-1/</url>
    
    <content type="html"><![CDATA[<h1 id="wandb教程1"><a class="markdownIt-Anchor" href="#wandb教程1"></a> Wandb教程(1)</h1><p>​Wandb（Weights &amp; Biases）是一个用于机器学习实验跟踪、可视化和管理的平台。它提供了一个强大的工具集，帮助研究人员和开发人员跟踪他们的模型训练过程、超参数、指标以及模型的版本。他就是Tensorboard的白富美版本：颜值高，气质好，可视化交互性强，支持所有深度学习框架。<strong>它内嵌在计算机中，不需要你写可视化代码</strong>（我之前每次可视化都要写一次把张量的batch维度抽出来，再转换通道维的索引…）</p><p>​<strong>Wandb的网站是高度可交互的，这个功能非常的强大，可以自行探索</strong>（比如添加panel，缩放图像展示格，交互式地进行数据分析等）</p><h2 id="wandb的使用"><a class="markdownIt-Anchor" href="#wandb的使用"></a> Wandb的使用：</h2><p>​<code>Wandb</code>用法与<code>matplotlib.plt</code>十分类似，既支持面向对象编程也支持面向过程编程，即既可以实例化一个对象使用，又可以纯函数式使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">###### 既可以这样使用 ######</span><br><span class="hljs-comment"># 第一步进行初始化</span><br>wandb.init(project=<span class="hljs-string">&quot;your_project_name&quot;</span>)<br><span class="hljs-comment"># 再写入配置信息</span><br>wandb.config.learning_rate = <span class="hljs-number">0.001</span><br>wandb.config.epochs = <span class="hljs-number">10</span><br><span class="hljs-comment"># 写入要记录的信息</span><br>wandb.log(&#123;<span class="hljs-string">&quot;loss&quot;</span>: loss.item()&#125;)<br><span class="hljs-comment"># 结束Wandb运行</span><br>wandb.finish()<br><br><span class="hljs-comment">###### 又可以如下使用 #######</span><br>run = wandb.init(project=<span class="hljs-string">&quot;my_first_project&quot;</span>)<br>config = run.config<br>config.learning_rate = <span class="hljs-number">0.01</span><br>run.log(&#123;<span class="hljs-string">&quot;loss&quot;</span>: loss.item()&#125;)<br>run.finish()<br></code></pre></td></tr></table></figure><p>下面我们介绍各种函数的使用（仅介绍常用用法，更多用法查阅<a href="https://docs.wandb.ai/ref/python/">官方文档</a>）：</p><h2 id="wandbinit的使用"><a class="markdownIt-Anchor" href="#wandbinit的使用"></a> <code>wandb.init</code>的使用：</h2><p>​它的参数多得太夸张了，进阶参数查阅官方文档，这里只列举几个常用参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.init(<br>    project: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>,<br>    config: <span class="hljs-type">Union</span>[<span class="hljs-type">Dict</span>, <span class="hljs-built_in">str</span>, <span class="hljs-literal">None</span>] = <span class="hljs-literal">None</span>,<br>    name: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>,<br>    resume: <span class="hljs-type">Optional</span>[<span class="hljs-type">Union</span>[<span class="hljs-built_in">bool</span>, <span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>,<br>    anonymous: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span><br>) -&gt; <span class="hljs-type">Union</span>[Run, RunDisabled, <span class="hljs-literal">None</span>]<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>project (str)</code>: 运行所属项目的名称。用于将运行组织到特定的项目下</li><li><code>name (str, optional)</code>: 运行项的显示名称。这个名称在Wandb的界面中显示，并且可以编辑，但不需要是唯一的</li><li><code>config (dict-like, optional)</code>: 一个字典类对象，用于设置实验的配置，如超参数。这些配置会被跟踪，并且可以在Wandb的界面中查看**（这个参数如果太长了，可以在函数外面专门写配置的一句话）**</li><li><code>dir(str or pathlib.Path, optional)</code>：一个绝对路径，用于保存训练过程中的元数据(metadata)</li><li><code>resume: Optional[Union[bool, str]]</code>：这个参数用于控制是否恢复之前中断的实验运行（run）。如果你在训练过程中中断了实验，并且想要在之后的某个时间点恢复它，你可以使用 <code>resume=True</code></li><li><code>job_type</code>：记录任务的类型，例如 ‘training’, ‘evaluation’, ‘inference’ 等。默认值为 ‘training’</li><li><code>anonymous</code> ：用于控制是否启用匿名记录。当你不希望将实验运行与你的账户关联，或者你不希望你的实验运行在公共Wandb项目中可见时，可以使用这个参数：<ul><li><code>&quot;allow&quot;</code> 表示允许匿名记录，但不会强制</li><li><code>&quot;never&quot;</code> 表示不允许任何匿名记录，所有记录都必须与账户关联</li><li><code>&quot;must&quot;</code> 表示强制匿名记录，这意味着运行将不会与任何账户关联</li></ul></li></ul><h2 id="wandblog的使用"><a class="markdownIt-Anchor" href="#wandblog的使用"></a> <code>wandb.log</code>的使用：</h2><p>​用于记录在训练过程中需要可视化的信息，函数声明如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.log(<br>    data: <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>],<br>    step: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">int</span>] = <span class="hljs-literal">None</span><br>) -&gt; <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><ul><li><code>data(dic, optional)</code>：一个可序列化的Python对象的字典，即字符串（str）、整数（ints）、浮点数（floats）、张量（Tensors）、字典（dicts）等</li><li><code>step(int, optional)</code>：处理中的全局步骤，表示训练过程中的指标随step的变化情况</li></ul><h2 id="wandbimage-的使用"><a class="markdownIt-Anchor" href="#wandbimage-的使用"></a> <code>wandb.Image</code> 的使用：</h2><p>​用于创建一个 <code>wandb.Image</code> 对象，该对象可以被记录到 Wandb 的运行中。以下是 <code>wandb.Image</code> 类的一些常用参数和它们的用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">wand.Image(<br>    mode: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>,<br>    caption: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>,<br>    grouping: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">int</span>] = <span class="hljs-literal">None</span>,<br>) -&gt; wand.Image<br></code></pre></td></tr></table></figure><h4 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数：</h4><ul><li><p><code>data_or_path</code> (PIL Image 或 NumPy 数组或者图像数据路径)：必须提供的参数，表示要记录的图像数据。它可以是一个 PIL图像对象，或者是一个 NumPy 数组，如果是路径wandb会推断数据类型并且读入数据</p></li><li><p><code>caption(str, optional)</code> : 图像的标题或描述</p></li><li><p><code>mode(str, optional)</code>：图像数据的结构，可以为 “L(灰度图)”, “RGB”, “RGBA(带透明度)”. 等</p></li></ul><h4 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> 返回值：</h4><p><code>wandb.Image</code> 类的构造函数返回一个 <code>wandb.Image</code> 对象。这个对象可以被传递给 <code>wandb.log</code> 函数，用于记录和可视化图像数据</p><h4 id="使用范例"><a class="markdownIt-Anchor" href="#使用范例"></a> 使用范例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> wandb.init() <span class="hljs-keyword">as</span> run:<br>    examples = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>        pixels = np.random.randint(low=<span class="hljs-number">0</span>, high=<span class="hljs-number">256</span>, size=(<span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">3</span>), dtype=np.uint8)<br>        pil_image = PILImage.fromarray(pixels, mode=<span class="hljs-string">&quot;RGB&quot;</span>)<br>        image = wandb.Image(pil_image, caption=<span class="hljs-string">f&quot;random field <span class="hljs-subst">&#123;i&#125;</span>&quot;</span>)<br>        examples.append(image)<br>    run.log(&#123;<span class="hljs-string">&quot;examples&quot;</span>: examples&#125;)<br></code></pre></td></tr></table></figure><h2 id="wandbartifact的使用"><a class="markdownIt-Anchor" href="#wandbartifact的使用"></a> <code>wandb.Artifact</code>的使用：</h2><p>​<code>wandb.Artifact</code> 用于封装、管理和共享项目资源（如数据集、模型、代码、日志文件等）的重要类。它允许将这些资源版本化、关联到特定的 <code>wandb</code> 运行，并在 <code>wandb</code> 平台上进行可视化、下载和复用：</p><h3 id="构造函数"><a class="markdownIt-Anchor" href="#构造函数"></a> 构造函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.Artifact(name: <span class="hljs-built_in">str</span>, <span class="hljs-built_in">type</span>: <span class="hljs-built_in">str</span>, description: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>, metadata: <span class="hljs-type">Optional</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]] = <span class="hljs-literal">None</span>, version: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>, \**kwargs: <span class="hljs-type">Any</span>) -&gt; Artifact<br></code></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li><strong><code>name: str</code></strong>: <code>Artifact</code> 的唯一名称。在项目中应保持唯一，以避免覆盖已有资源</li><li><strong><code>type: str</code></strong>: <code>Artifact</code> 的类型，用于标识资源的类别。常见的类型有 <code>'dataset'</code>、<code>'model'</code>、<code>'code'</code> 等，也可以自定义。</li><li><strong><code>description: Optional[str] = None</code></strong>: 可选的描述文字，用于提供 <code>Artifact</code> 的简要说明。</li><li><strong><code>metadata: Optional[Dict[str, Any]] = None</code></strong>: 可选的元数据字典，用于存储关于 <code>Artifact</code> 的附加信息，如数据集统计信息、模型架构摘要等</li><li><strong><code>version: Optional[str] = None</code></strong>: 可选的版本号。如果不指定，<code>wandb</code> 会自动为 <code>Artifact</code> 分配一个版本</li></ul><p><strong>返回值</strong>:</p><ul><li>返回一个 <code>wandb.Artifact</code> 对象，代表创建的资源包。</li></ul><h3 id="主要方法"><a class="markdownIt-Anchor" href="#主要方法"></a> 主要方法：</h3><ul><li><code>add_file</code>：用于将指定路径下的单个文件添加到 <code>Artifact</code> 中。这使得该文件成为 <code>Artifact</code> 的一部分，将在 <code>Artifact</code> 上传至 <code>wandb</code> 服务器时一同保存</li><li><code>add_dir</code>：将指定路径下的整个目录及其内容（包括子目录和文件）添加到 <code>Artifact</code> 中</li><li><code>log_artifact</code>将 <code>Artifact</code> 记录到指定的 <code>wandb</code> 运行中，并将其上传到 <code>wandb</code> 服务器。这样，该 <code>Artifact</code> 就与特定的 <code>wandb</code> 运行关联起来，可以在 <code>wandb</code> 界面上查看、下载、分享和复用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">add_file(path: <span class="hljs-type">Union</span>[<span class="hljs-built_in">str</span>, Path], name: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>, metadata: <span class="hljs-type">Optional</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]] = <span class="hljs-literal">None</span>) -&gt; <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><p>`<strong>参数</strong>:</p><ul><li><strong><code>path: Union[str, Path]</code></strong>: 要添加到 <code>Artifact</code> 中的本地文件或目录的路径</li><li><strong><code>name: Optional[str] = None</code></strong>: 可选的在 <code>Artifact</code> 内部使用的文件名。如果不指定，将使用原始文件名</li><li><strong><code>metadata: Optional[Dict[str, Any]] = None</code></strong>: 可选的文件元数据字典，用于存储关于文件的附加信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">add_dir(path: <span class="hljs-type">Union</span>[<span class="hljs-built_in">str</span>, Path], name: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>] = <span class="hljs-literal">None</span>, recursive: <span class="hljs-built_in">bool</span> = <span class="hljs-literal">True</span>, metadata: <span class="hljs-type">Optional</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]] = <span class="hljs-literal">None</span>) -&gt; <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li><strong><code>path: Union[str, Path]</code></strong>: 要添加到 <code>Artifact</code> 中的本地目录的路径</li><li><strong><code>name: Optional[str] = None</code></strong>: 可选的在 <code>Artifact</code> 内部使用的目录名。如果不指定，将使用原始目录名</li><li><strong><code>recursive: bool = True</code></strong>: 是否递归地添加目录下所有文件和子目录。默认为 <code>True</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">log_artifact(run: <span class="hljs-type">Optional</span>[<span class="hljs-type">Union</span>[<span class="hljs-built_in">str</span>, wandb.apis.public.Run]] = <span class="hljs-literal">None</span>, aliases: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>, step: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">int</span>] = <span class="hljs-literal">None</span>, commit: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">bool</span>] = <span class="hljs-literal">True</span>) -&gt; <span class="hljs-literal">None</span><br></code></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li><strong><code>run: Optional[Union[str, wandb.apis.public.Run]] = None</code></strong>: 可选的 <code>wandb</code> 运行对象或运行ID。如果不指定，将使用当前 <code>wandb</code> 运行</li><li><strong><code>commit: Optional[bool] = True</code></strong>: 是否立即提交并上传</li></ul><h2 id="wandtable使用"><a class="markdownIt-Anchor" href="#wandtable使用"></a> <code>Wand.Table</code>使用：</h2><p>​<code>wandb.Table</code> 是用于展示和记录表格数据的一种数据结构。它允许用户将结构化的数据（如 Pandas DataFrame、NumPy 数组或其他表格数据）以表格形式可视化，并将其与 <code>wandb</code> 运行关联起来，便于在 <code>wandb</code> 界面上进行数据分析、探索和比较</p><h3 id="创建-wandbtable"><a class="markdownIt-Anchor" href="#创建-wandbtable"></a> <strong>创建 <code>wandb.Table</code></strong></h3><p><strong>构造函数</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.Table(data: <span class="hljs-type">Union</span>[pandas.DataFrame, <span class="hljs-type">List</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]], <span class="hljs-type">List</span>[<span class="hljs-type">List</span>[<span class="hljs-type">Any</span>]], <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">List</span>[<span class="hljs-type">Any</span>]], <span class="hljs-type">List</span>[<span class="hljs-type">Tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]], <span class="hljs-type">Tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]], columns: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li><strong><code>data</code></strong>: 表格数据，可以是以下类型之一：<ul><li>Pandas DataFrame</li><li>列表嵌套字典（每一项代表一行数据，键为列名，值为数据）</li><li>列表嵌套列表（每一项代表一行数据，按列顺序排列）</li><li>字典嵌套列表（键为列名，值为该列数据组成的列表）</li><li>列表嵌套元组（每一项为 <code>(column_name, value)</code> 的二元组）</li><li>元组（只有一行数据时，形式为 <code>(column_name, value)</code>）</li></ul></li><li><strong><code>columns</code></strong>: 可选的列名列表，用于指定列名。对于不提供列名的输入类型（如列表嵌套列表），此参数是必需的</li></ul><h3 id="常用方法"><a class="markdownIt-Anchor" href="#常用方法"></a> 常用方法：</h3><h4 id="add_data-方法"><a class="markdownIt-Anchor" href="#add_data-方法"></a> <code>add_data</code> 方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.Table.add_data(row_data: <span class="hljs-type">Union</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>], <span class="hljs-type">List</span>[<span class="hljs-type">Any</span>], <span class="hljs-type">Tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]], column_names: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>作用</strong>: 向现有 <code>wandb.Table</code> 对象中添加新的行数据</li><li><strong>参数</strong>:<ul><li><strong><code>row_data</code></strong>: 要添加的新行数据，可以是以下类型之一：<ul><li>字典（键为列名，值为数据）</li><li>列表（按列顺序排列的数据）</li><li>元组（只有一行数据时，形式为 <code>(column_name, value)</code>）</li></ul></li><li><strong><code>column_names</code></strong>: 可选的列名列表，用于指定列名。对于不提供列名的输入类型（如列表），此参数是必需的</li></ul></li></ul><h4 id="add_rows-方法"><a class="markdownIt-Anchor" href="#add_rows-方法"></a> <code>add_rows</code> 方法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.Table.add_rows(rows: <span class="hljs-type">List</span>[<span class="hljs-type">Union</span>[<span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>], <span class="hljs-type">List</span>[<span class="hljs-type">Any</span>], <span class="hljs-type">Tuple</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]]], column_names: <span class="hljs-type">Optional</span>[<span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>]] = <span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>作用</strong>: 向现有 <code>wandb.Table</code> 对象中批量添加多行数据</li><li><strong>参数</strong>:<ul><li><strong><code>rows</code></strong>: 要添加的新行数据列表，每一项可以是以下类型之一：<ul><li>字典（键为列名，值为数据）</li><li>列表（按列顺序排列的数据）</li><li>元组（只有一行数据时，形式为 <code>(column_name, value)</code>）</li></ul></li><li><strong><code>column_names</code></strong>: 可选的列名列表，用于指定列名。对于不提供列名的输入类型（如列表），此参数是必需的</li></ul></li></ul><h3 id="wandtable作用"><a class="markdownIt-Anchor" href="#wandtable作用"></a> <code>Wand.Table</code>作用：</h3><ol><li><strong>数据可视化</strong>: <code>wandb.Table</code> 使得结构化的数据能够在 <code>wandb</code> 界面上以表格形式展示，便于直观地查看、分析和比较数据</li><li><strong>数据记录</strong>: 将 <code>wandb.Table</code> 记录到 <code>wandb</code> 运行中，可以将实验数据（如中间结果、评估指标、样本数据等）与模型训练过程关联起来，形成完整的实验记录，便于后续回顾、分析和复现</li><li><strong>数据版本控制</strong>: 由于 <code>wandb.Table</code> 是 <code>wandb</code> 运行的一部分，它会随运行一起版本化。用户可以轻松地对比不同运行之间的表格数据，观察数据的变化趋势或差异</li></ol><h2 id="wandbwatch-的使用"><a class="markdownIt-Anchor" href="#wandbwatch-的使用"></a> <code>wandb.watch</code> 的使用</h2><p>​<code>wandb.watch</code> 用于在模型训练过程中自动记录和可视化神经网络模型的权重、激活、损失等关键信息</p><ul><li><code>wandb.watch()</code> 侧重于模型内部状态的自动跟踪和可视化，如权重、激活、计算图和梯度</li><li><code>wandb.log()</code> 专注于用户自定义的、实验相关的各种数据和指标的记录，包括但不限于模型性能、超参数、中间结果、日志信息等</li></ul><h3 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">wandb.watch(model: <span class="hljs-type">Union</span>[torch.nn.Module], log_freq: <span class="hljs-type">Optional</span>[<span class="hljs-built_in">int</span>] = <span class="hljs-literal">None</span>, log_graph: <span class="hljs-built_in">bool</span> = <span class="hljs-literal">False</span>, watch: <span class="hljs-type">Optional</span>[<span class="hljs-type">Union</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">List</span>[<span class="hljs-built_in">str</span>], <span class="hljs-type">Dict</span>[<span class="hljs-built_in">str</span>, <span class="hljs-type">Any</span>]]] = <span class="hljs-literal">None</span>, gradients: <span class="hljs-built_in">bool</span> = <span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>参数</strong>:<ul><li><strong><code>model</code></strong>: 待监控的神经网络模型对象，可以是 PyTorch 的 <code>torch.nn.Module</code>、TensorFlow Keras 的 <code>tensorflow.keras.Model</code> 或 <code>tf.keras.Model</code>，以及其他支持的框架模型。</li><li><strong><code>log_freq</code></strong>: 可选的整数，指定记录指标的频率（以批次为单位）。默认情况下，仅在每个训练周期结束时记录一次。若设置为 <code>n</code>，则每 <code>n</code> 个批次记录一次。</li><li><strong><code>log_graph</code></strong>: 可选的布尔值，指示是否记录和可视化模型的计算图。默认为 <code>False</code>。如果设置为 <code>True</code>，将为模型绘制计算图并上传到 <code>wandb</code></li><li><strong><code>watch</code></strong>: 可选的参数，用于指定要监视的模型层或参数。可以是层名、层列表或字典。默认情况下，监视所有可训练参数</li><li><strong><code>gradients</code></strong>: 可选的布尔值，指示是否记录模型参数的梯度。默认为 <code>False</code>。如果设置为 <code>True</code>，将记录并可视化梯度</li></ul></li></ul><h4 id="使用范例-2"><a class="markdownIt-Anchor" href="#使用范例-2"></a> 使用范例：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python">good_cases = wandb.Table(columns = [<span class="hljs-string">&#x27;Image&#x27;</span>,<span class="hljs-string">&#x27;GroundTruth&#x27;</span>,<span class="hljs-string">&#x27;Prediction&#x27;</span>])<br>bad_cases = wandb.Table(columns = [<span class="hljs-string">&#x27;Image&#x27;</span>,<span class="hljs-string">&#x27;GroundTruth&#x27;</span>,<span class="hljs-string">&#x27;Prediction&#x27;</span>])<br><br><span class="hljs-comment"># 找到50个good cases 和 50 个bad cases</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>)):<br>    features,label = ds_val[i]<br>    tensor = features.to(device)<br>    y_pred = torch.argmax(model(<span class="hljs-built_in">input</span>)) <br>    <br>    <span class="hljs-comment"># log badcase</span><br>    <span class="hljs-keyword">if</span> y_pred!=label:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(bad_cases.data)&lt;<span class="hljs-number">50</span>:<br>            data = features.permute(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>).numpy()<br>            input_img = wandb.Image(fig2img(data2fig(data)))<br>            bad_cases.add_data(input_img,label,y_pred)<br>            <br>    <span class="hljs-comment"># log goodcase</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(good_cases.data)&lt;<span class="hljs-number">50</span>:<br>            data = features.permute(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>).numpy()<br>            input_img = wandb.Image(fig2img(data2fig(data)))<br>            good_cases.add_data(input_img,label,y_pred)<br><br>wandb.log(&#123;<span class="hljs-string">&#x27;good_cases&#x27;</span>:good_cases,<span class="hljs-string">&#x27;bad_cases&#x27;</span>:bad_cases&#125;)<br></code></pre></td></tr></table></figure><h2 id="使用示例使用wandb可视化vgg网络的特征图"><a class="markdownIt-Anchor" href="#使用示例使用wandb可视化vgg网络的特征图"></a> 使用示例：使用wandb可视化vgg网络的特征图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">from</span> torchvision.transforms <span class="hljs-keyword">import</span> transforms<br><span class="hljs-keyword">import</span> wandb<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><br>vgg16_pretrained = models.vgg16(pretrained=<span class="hljs-literal">True</span>)<br>run = wandb.init(project=<span class="hljs-string">&#x27;visualize_featuremap&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MyModel, self).__init__()<br>        self.encoder1 = vgg16_pretrained.features[:<span class="hljs-number">5</span>]<br>        self.encoder2 = vgg16_pretrained.features[<span class="hljs-number">5</span>:<span class="hljs-number">10</span>]<br>        self.encoder3 = vgg16_pretrained.features[<span class="hljs-number">10</span>:<span class="hljs-number">17</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.encoder1(x)<br>        x = self.encoder2(x)<br>        x = self.encoder3(x)<br>        <span class="hljs-keyword">return</span> x<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">visualize</span>(<span class="hljs-params">output, name</span>):<br>    Images = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(output.shape[<span class="hljs-number">1</span>]):<br>        <span class="hljs-comment"># 灰度图的像素值要乘255，不然对比度太低会显示出一团黑</span><br>        numpy_Image = (output[:, i, :, :].squeeze(<span class="hljs-number">0</span>).detach().cpu() * <span class="hljs-number">255</span>).numpy().astype(np.uint8)<br>        cmap = plt.get_cmap(<span class="hljs-string">&#x27;rainbow&#x27;</span>, lut=<span class="hljs-number">256</span>)<br>        numpy_Image = cmap(numpy_Image)<br>        <span class="hljs-comment"># 可以选择转化为PIL图像，其实Numpy图像本身就够了</span><br>        <span class="hljs-comment"># pil_image = Image.fromarray(numpy_Image.astype(&#x27;uint8&#x27;), mode=&#x27;L&#x27;)  # 使用 &#x27;L&#x27; 模式表示灰度图像</span><br>        Images.append(wandb.Image(numpy_Image, caption=<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;name&#125;</span> feature map <span class="hljs-subst">&#123;i&#125;</span>&quot;</span>))<br><br>    run.log(&#123;name: Images&#125;)<br><br>mymodel = MyModel()<br>mymodel.encoder1.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(output, name=<span class="hljs-string">&#x27;encoder1&#x27;</span>))<br>mymodel.encoder2.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(output, name=<span class="hljs-string">&#x27;encoder2&#x27;</span>))<br>mymodel.encoder3.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(output, name=<span class="hljs-string">&#x27;encoder3&#x27;</span>))<br><br>input_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./Lena.jpg&quot;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>transforms = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Normalize([<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>], [<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>])<br>])<br><br>input_image = transforms(input_image).unsqueeze(<span class="hljs-number">0</span>)<br>_ = mymodel(input_image)<br><br>run.finish()<br></code></pre></td></tr></table></figure><h3 id="结果可视化图"><a class="markdownIt-Anchor" href="#结果可视化图"></a> 结果可视化图：</h3><p><img src="/2024/03/17/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Wandb-1/1.png" alt="visualize"></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>TensorBoardX教程(2)</title>
    <link href="/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-2/"/>
    <url>/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-2/</url>
    
    <content type="html"><![CDATA[<h1 id="tensorboard的示例应用"><a class="markdownIt-Anchor" href="#tensorboard的示例应用"></a> Tensorboard的示例应用</h1><h2 id="tensorboard进行中间特征图可视化"><a class="markdownIt-Anchor" href="#tensorboard进行中间特征图可视化"></a> Tensorboard进行中间特征图可视化：</h2><p>​采用了注册钩子函数，再钩子函数中记录特征图，并将其可视化下来的方案，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">from</span> torchvision.transforms <span class="hljs-keyword">import</span> transforms<br><span class="hljs-keyword">import</span> torchvision.utils <span class="hljs-keyword">as</span> vutils<br><span class="hljs-keyword">from</span> tensorboardX <span class="hljs-keyword">import</span> SummaryWriter<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br><br>vgg16_pretrained = models.vgg16(pretrained=<span class="hljs-literal">True</span>)<br>writer = SummaryWriter(<span class="hljs-string">&quot;./Visualize_featuremap&quot;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MyModel, self).__init__()<br>        self.encoder1 = vgg16_pretrained.features[:<span class="hljs-number">5</span>]<br>        self.encoder2 = vgg16_pretrained.features[<span class="hljs-number">5</span>:<span class="hljs-number">10</span>]<br>        self.encoder3 = vgg16_pretrained.features[<span class="hljs-number">10</span>:<span class="hljs-number">17</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.encoder1(x)<br>        x = self.encoder2(x)<br>        x = self.encoder3(x)<br>        <span class="hljs-keyword">return</span> x<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">visualize</span>(<span class="hljs-params">module, <span class="hljs-built_in">input</span>, output</span>):<br>    output = output.squeeze(<span class="hljs-number">0</span>).unsqueeze(<span class="hljs-number">1</span>)<br>    output_image = vutils.make_grid(output, nrow=<span class="hljs-number">8</span>, padding=<span class="hljs-number">2</span>, normalize=<span class="hljs-literal">True</span>)<br>    writer.add_image(<span class="hljs-string">&#x27;output:&#x27;</span>, img_tensor=output_image)<br><br>mymodel = MyModel()<br>mymodel.encoder1.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(module, <span class="hljs-built_in">input</span>, output))<br>mymodel.encoder2.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(module, <span class="hljs-built_in">input</span>, output))<br>mymodel.encoder3.register_forward_hook(<span class="hljs-keyword">lambda</span> module, <span class="hljs-built_in">input</span>, output: visualize(module, <span class="hljs-built_in">input</span>, output))<br><br>input_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./Lena.jpg&quot;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>transforms = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Normalize([<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>], [<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>])<br>])<br><span class="hljs-comment"># writer.add_image(&#x27;original_image&#x27;, img_tensor=torch.Tensor(input_image).permute(2, 0, 1))</span><br>input_image = transforms(input_image).unsqueeze(<span class="hljs-number">0</span>)<br><br>writer.add_image(<span class="hljs-string">&#x27;original_image&#x27;</span>, img_tensor=input_image.squeeze(<span class="hljs-number">0</span>))<br>_ = mymodel(input_image)<br>writer.close()<br></code></pre></td></tr></table></figure><h3 id="需要注意的小细节"><a class="markdownIt-Anchor" href="#需要注意的小细节"></a> 需要注意的小细节：</h3><ul><li><code>torchvision.utils.make_grid</code><strong>函数本质上是将batch沿着长与宽展开，他并不会改变通道数，如果需要将多通道数的特征图可视化，需要将通道数积累到batch维度上面去，并且保留通道维度（把他当成灰度图像可视化）</strong></li><li><code>TensorBoard</code>本身是不能调整图像配色的，如果需要更加好看的图像配色，可以使用matplotlib将灰度像素映射到color bar中，再传入<code>Tensorboard</code></li></ul><p>效果如下图所示：</p><p><img src="/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-2/image-20240314163347425.png" alt="Lena图提取特征后的feature map"></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>TensorBoardX教程(1)</title>
    <link href="/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-1/"/>
    <url>/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-1/</url>
    
    <content type="html"><![CDATA[<h1 id="tensorboardx教程1"><a class="markdownIt-Anchor" href="#tensorboardx教程1"></a> TensorBoardX教程(1)</h1><p>TensorBoard 是一组用于数据可视化的工具。它包含在流行的开源机器学习库 Tensorflow 中。TensorBoard 的主要功能包括：</p><ul><li>可视化模型的网络架构</li><li>跟踪模型指标，如损失和准确性等</li><li>检查机器学习工作流程中权重、偏差和其他组件的直方图</li><li>显示非表格数据，包括图像、文本和音频</li><li>将高维嵌入投影到低维空间</li></ul><h2 id="tensorboardx的使用"><a class="markdownIt-Anchor" href="#tensorboardx的使用"></a> TensorBoardX的使用：</h2><p>​<code>Tensorboard</code>的使用类似于<code>matplotlib</code>，先创立一个事件文件对象，再将各种文件写入<code>Tensorboard</code>中进行后续显示</p><p>​<code>SummaryWriter</code> 是 TensorFlow 的一个类，用于将事件（如张量摘要、图像、音频、视频等）写入到一个事件文件中，以便后续使用 TensorBoard 进行可视化</p><p>创建 <code>SummaryWriter</code> 实例时，你需要指定一个日志目录，TensorBoard 将在这个目录中创建事件文件。以下是创建和使用 <code>SummaryWriter</code> 的基本步骤：</p><h3 id="创建-summarywriter-实例"><a class="markdownIt-Anchor" href="#创建-summarywriter-实例"></a> <strong>创建 <code>SummaryWriter</code> 实例</strong>：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> tensorboardX <span class="hljs-keyword">import</span> SummaryWriter<br>writer = SummaryWriter(<span class="hljs-string">&#x27;logs/&#x27;</span>)  <span class="hljs-comment"># 指定日志目录</span><br></code></pre></td></tr></table></figure><h3 id="使用-summarywriter-方法记录数据"><a class="markdownIt-Anchor" href="#使用-summarywriter-方法记录数据"></a> <strong>使用 <code>SummaryWriter</code> 方法记录数据</strong>：</h3><ul><li><code>add_scalar</code>：添加标量数据点</li><li><code>add_histogram</code>：添加直方图数据</li><li><code>add_image</code>：添加图像数据</li><li><code>add_audio</code>：添加音频数据</li><li><code>add_video</code>：添加视频数据</li><li><code>add_graph</code>：添加模型的图结构</li><li><code>add_meta_graph</code>：添加带有元数据的图结构</li><li><code>add_session_log</code>：添加会话日志信息</li></ul><h3 id="关闭-summarywriter"><a class="markdownIt-Anchor" href="#关闭-summarywriter"></a> <strong>关闭 <code>SummaryWriter</code></strong>：</h3><p>​在记录完所有数据后，应该关闭 <code>SummaryWriter</code> 实例以确保所有数据都被刷新到磁盘：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">writer.close()<br></code></pre></td></tr></table></figure><h3 id="启动tensorboard"><a class="markdownIt-Anchor" href="#启动tensorboard"></a> 启动TensorBoard：</h3><p>​在命令行内输入<code>tensorboard --logdir runs</code>，命令解析：</p><ul><li><code>tensorboard</code>：这是启动 TensorBoard 的命令。</li><li><code>--logdir</code>：这是一个参数，用于指定 TensorBoard 应该从哪个目录读取日志文件。TensorBoard 需要日志文件来展示训练过程中的各种指标，如损失、准确度等。</li><li><code>runs</code>：这是 <code>--logdir</code> 参数的值，表示 TensorBoard 将会在当前目录下的 <code>runs</code> 文件夹中查找日志文件。通常，这个文件夹包含了不同训练会话的日志，每个会话可能有自己的子文件夹。</li></ul><p><strong>现在有更方便的启动<code>TensorBoard</code>用法：vscode和Pycharm里面的插件，直接点就行了</strong></p><h2 id="函数用法解析"><a class="markdownIt-Anchor" href="#函数用法解析"></a> 函数用法解析：</h2><h3 id="add_scalar解析"><a class="markdownIt-Anchor" href="#add_scalar解析"></a> <code>.add_scalar</code>解析：</h3><p>​<strong>用于将单个标量值添加到 TensorBoard 日志的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SummaryWriter.add_scalar(tag, scalar_value, global_step=<span class="hljs-literal">None</span>, walltime=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>tag</code>：一个字符串，用于标识数据点的名称。通常，<code>tag</code> 应该包含一个描述性的名称，如 <code>'Loss/train'</code> 或 <code>'Accuracy/train'</code></li><li><code>value</code>：要记录的标量值。可以是整数、浮点数或其他可转换为浮点数的类型</li><li><code>global_step</code>（可选）：一个整数，表示当前的训练步骤。如果提供了 <code>global_step</code>，TensorBoard 会将数据点按照步骤顺序显示。如果未提供，可以使用 <code>walltime</code> 参数</li><li><code>walltime</code>（可选）：一个浮点数，表示当前时间的时间戳（以秒为单位）。如果同时提供了 <code>global_step</code> 和 <code>walltime</code>，TensorBoard 会使用这两个参数来确定数据点的位置</li></ul><h3 id="add_scalars解析"><a class="markdownIt-Anchor" href="#add_scalars解析"></a> <code>.add_scalars</code>解析：</h3><p>​<strong>用于将多个标量值添加到 TensorBoard 日志的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SummaryWriter.add_scalars(tag, scalar_dict, global_step=<span class="hljs-literal">None</span>, walltime=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>scalar_dict</code>：一个字典，**其键是每个标量的名称，值是相应的标量值。**这些名称将作为 <code>tag</code> 的子前缀</li><li>其它的参数说明同前面</li></ul><h3 id="add_histogram解析"><a class="markdownIt-Anchor" href="#add_histogram解析"></a> <code>.add_histogram</code>解析：</h3><p>​<strong>用于将直方图数据添加到 TensorBoard 日志的方法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SummaryWriter.add_histogram(tag, values, global_step=<span class="hljs-literal">None</span>, walltime=<span class="hljs-literal">None</span>, max_bins=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>values</code>：一个的 <code>torch.Tensor</code> 或 <code>numpy</code> 数组，表示要记录的直方图数据</li><li><code>max_bins</code>（可选）：一个整数，指定直方图中的最大桶（bin）数。默认情况下，TensorBoard 会根据数据范围自动选择桶数</li></ul><p><img src="/2024/03/13/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/TensorBoard-1/1.png" alt="histogram示意图"></p><p>​这张图就是对模型某一个卷积核数据分布状况的直方图可视化，不同的层代表着不同的epoch下卷积核的不同分布（叠在一起了）</p><h3 id="add_image解析"><a class="markdownIt-Anchor" href="#add_image解析"></a> <code>.add_image</code>解析：</h3><p>​<strong>用于将图像数据添加到 TensorBoard 日志的方法。这个方法允许你记录和可视化图像数据，例如模型输入、特征图、分割掩码等</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SummaryWriter.add_image(tag, img_tensor, global_step=<span class="hljs-literal">None</span>, walltime=<span class="hljs-literal">None</span>, max_images=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>img_tensor</code>：一个四维的 <code>torch.Tensor</code>，表示要记录的图像数据。图像张量的形状应该是 <code>[batch_size, channels, height, width]</code>，其中 <code>channels</code> 是图像的通道数（例如，对于 RGB 图像，<code>channels</code> 应该是 3）。</li><li><code>max_images</code>（可选）：一个整数，指定在 TensorBoard 中显示的最大图像数量。默认为 1</li></ul><p><strong>注：该函数与<code>torchvision.utils.make_grid</code> 同时使用会十分方便</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torchvision.utils <span class="hljs-keyword">as</span> vutils<br><span class="hljs-keyword">import</span> torch<br><br><span class="hljs-comment"># 假设我们有一个批次的图像张量</span><br>images = torch.randn(<span class="hljs-number">16</span>, <span class="hljs-number">3</span>, <span class="hljs-number">64</span>, <span class="hljs-number">64</span>)  <span class="hljs-comment"># 16张 64x64 的 RGB 图像</span><br><span class="hljs-comment"># 使用 make_grid 函数创建一个网格图像</span><br>grid = vutils.make_grid(images, nrow=<span class="hljs-number">4</span>, padding=<span class="hljs-number">5</span>, normalize=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># 打印网格图像的形状</span><br><span class="hljs-built_in">print</span>(grid.shape)  <span class="hljs-comment"># 输出: torch.Size([256, 256, 3])</span><br><span class="hljs-comment"># 可以使用 tensorboard 的 add_image 方法来记录网格图像</span><br></code></pre></td></tr></table></figure><h3 id="add_graph解析"><a class="markdownIt-Anchor" href="#add_graph解析"></a> <code>.add_graph</code>解析：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SummaryWriter.add_graph(model, input_to_model=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>model</code>：模型实例</li><li><code>input_to_model</code>（可选）：模型的输入数据，可以生成一个随机数，只要shape符合要求即可</li></ul><p>其它的函数的用处就没那么广了，如果需要使用自行查阅官方文档</p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>多臂老虎机</title>
    <link href="/2024/03/12/%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0/%E5%A4%9A%E8%87%82%E8%80%81%E8%99%8E%E6%9C%BA/"/>
    <url>/2024/03/12/%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0/%E5%A4%9A%E8%87%82%E8%80%81%E8%99%8E%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="多臂老虎机问题"><a class="markdownIt-Anchor" href="#多臂老虎机问题"></a> 多臂老虎机问题</h1><h2 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述：</h2><p>​有一个拥有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 根拉杆的老虎机(multi-armed bandit)，拉动每一根拉杆都对应一个关于奖励的概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">R</mi></mrow><annotation encoding="application/x-tex">\mathcal{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">R</span></span></span></span></span>。我们每次拉动其中一根拉杆，就可以从该拉杆对应的奖励概率分布中获得一个奖励 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>。我们在各根拉杆的奖励概率分布未知的情况下，从头开始尝试，目标是在操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 次拉杆后获得尽可能高的累积奖励。由于奖励的概率分布是未知的， 因此我们需要在**“探索拉杆的获奖概率”和“根据经验选择获奖最多的拉杆”**中进行权衡。“采用怎样的操作策略才能使获得的累积奖励最高”便是多臂老虎机问题</p><p>多臂老虎机问题可以表示为一个元组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⟨</mo><mrow><mi mathvariant="script">A</mi><mo separator="true">,</mo><mi mathvariant="script">R</mi></mrow><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\langle \mathcal{A,R} \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathcal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal">R</span></span><span class="mclose">⟩</span></span></span></span> ，其中：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> 为动作集合，其中一个动作表示拉动一根拉杆，若多臂老虎机一共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 根拉杆，那 动作空间就是集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi><mrow><msub><mi mathvariant="bold-italic">a</mi><mn mathvariant="bold">1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">a</mi><mn mathvariant="bold">2</mn></msub><mo separator="true">,</mo><mi mathvariant="bold">.</mi><mi mathvariant="bold">.</mi><mi mathvariant="bold">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">a</mi><mi mathvariant="bold-italic">k</mi></msub></mrow></mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\boldsymbol {a_1, a_2, ..., a_k} \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathbf">.</span><span class="mord mathbf">.</span><span class="mord mathbf">.</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord boldsymbol mtight" style="margin-right:0.01852em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，我们用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">a</mi><mi>t</mi></msub><mo>∈</mo><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\boldsymbol a_t \in \mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">A</span></span></span></span></span> 表示任意一个动作</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">R</mi></mrow><annotation encoding="application/x-tex">\mathcal{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">R</span></span></span></span></span> 为奖励概率分布，拉动每一根拉杆的动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 都对应一个奖励概率分布 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">R</mi><mo stretchy="false">(</mo><mi>r</mi><mo>∣</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{R}(r \mid \boldsymbol a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">R</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord boldsymbol">a</span></span><span class="mclose">)</span></span></span></span> ，拉动不同拉杆的奖励分布通常是不同的</li></ul><p>​假设每个时间步只能拉动一根拉杆，多臂老虎机的目标为最大化一段时间步 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 内累积的奖励： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></msubsup><msub><mi>r</mi><mi>t</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>r</mi><mi>t</mi></msub><mo>∼</mo><mi mathvariant="script">R</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo>∣</mo><msub><mi mathvariant="bold-italic">a</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">max \sum_{t=1}^{T} r_t, \  r_t \sim \mathcal{R}(\cdot \mid \boldsymbol a_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal">R</span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。其中  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">a</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol a_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示在第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 时间步拉动某一拉杆的动作，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">r_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">a</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol a_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.59444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 获得的奖励</p><h2 id="累计懊悔与期望奖励"><a class="markdownIt-Anchor" href="#累计懊悔与期望奖励"></a> 累计懊悔与期望奖励：</h2><p>​对于每一个动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">a</mi></mrow><annotation encoding="application/x-tex">\boldsymbol a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord boldsymbol">a</span></span></span></span></span>，我们定义其期望奖励为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mrow><mi>r</mi><mo>∼</mo><mi mathvariant="script">R</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo>∣</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">[</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">Q(\boldsymbol a) = E_{r \sim \mathcal{R}(\cdot \mid \boldsymbol a)} [r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol">a</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">∼</span><span class="mord mtight"><span class="mord mathcal mtight">R</span></span><span class="mopen mtight">(</span><span class="mord mtight">⋅</span><span class="mrel mtight">∣</span><span class="mord mtight"><span class="mord boldsymbol mtight">a</span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>。于是，至少存在一根拉杆，它的期望奖励不小于拉动其他任意一根拉杆，我们将该最优期望奖励表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>Q</mi><mo>∗</mo></msup><mo>=</mo><mi>m</mi><mi>a</mi><msub><mi>x</mi><mrow><mi mathvariant="bold-italic">a</mi><mo>∈</mo><mi mathvariant="script">A</mi></mrow></msub><mi>Q</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Q^* = max_{\boldsymbol a \in \mathcal{A}} Q(\boldsymbol a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8831359999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">a</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight">A</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol">a</span></span><span class="mclose">)</span></span></span></span>。<strong>为了观察拉动一根拉杆的期望奖励离最优拉杆期望奖励的差距</strong>，我们引入愧悔（regret）概念。懊悔被定义为拉动当前拉杆的动作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">a</mi></mrow><annotation encoding="application/x-tex">\boldsymbol a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord boldsymbol">a</span></span></span></span></span> 与最优拉杆的期望奖励差，即 $ R(\boldsymbol a)=Q^*−Q(\boldsymbol a)$。累积懊悔（cumulative regret）即操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 次拉杆后累积的噢悔总量，对于一次完整的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span> 步决策 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi><mrow><msub><mi mathvariant="bold-italic">a</mi><mn mathvariant="bold">1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">a</mi><mn mathvariant="bold">2</mn></msub><mo separator="true">,</mo><mi mathvariant="bold">.</mi><mi mathvariant="bold">.</mi><mi mathvariant="bold">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">a</mi><mi mathvariant="bold-italic">T</mi></msub></mrow></mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\boldsymbol {a_1, a_2, ..., a_T} \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathbf mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathbf">.</span><span class="mord mathbf">.</span><span class="mord mathbf">.</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord boldsymbol">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33027699999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord boldsymbol mtight" style="margin-right:0.15972em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，累积懊悔为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>R</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mi>R</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">a</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_R = \sum_{t=1}^T R(\boldsymbol a_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。MAB 问题的目标为最大化累积奖励，等价于最小化累积懊悔</p><p>​为了知道拉动哪一根拉杆能获得更高的奖励，我们需要估计拉动这根拉杆的期望奖励。由于只拉动一次拉杆获得的奖励存在随机性，<strong>所以需要多次拉动一根拉杆，然后计算得到的多次奖励的期望</strong>，其算法流程如下所示</p><blockquote><p>对于 $ \forall \boldsymbol a \in \mathcal{A}$，初始化计数器 $N(\boldsymbol a)=0 $ 和期望奖励估值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>Q</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\hat{Q}(\boldsymbol a)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.19677em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol">a</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p><strong>for</strong> t = 1 to T <strong>do</strong><br>选取某根拉杆，该动作记为 $ a_t $<br>得到奖励 $ r_t $<br>更新计数器： $ N(a_t) = N(a_t) + 1 $<br>更新期望奖励估值： $ \hat Q(a_t) = \hat Q(a_t) + \frac{1}{N(a_t)}[r_t - \hat Q(\boldsymbol a_t)] $<br><strong>end for</strong></p></blockquote><p>由以下公式导出：</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: Got function &#039;\sum&#039; with no arguments as argument to &#039;\overset&#039; at position 47: …} {\overset {T}\̲s̲u̲m̲} r_i = \frac{1…">Q_k = \frac{1}{k} \underset{i=1} {\overset {T}\sum} r_i = \frac{1}{k}\left( r_k + \underset{i=1} {\overset {T-1}\sum} r_i = \frac{1}{k}\right) \\= Q_{k-1} + \frac{1}{k}[r_k -Q_{k-1}]</p><p>​以一个拉杆数为 10 的多臂老虎机为例。其中拉动每根拉杆的奖励服从<em>伯努利分布</em>（Bernoulli distribution），即每次拉下拉杆有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的概率获得的奖励为 1，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mtext>−</mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">1 − p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">−</span><span class="mord mathnormal">p</span></span></span></span> 的概率 获得的奖励为 0</p><p>​用一个 Solver 基础类来实现上述的多臂老虎机的求解方案。我们需要实现下列函数功能：根据策略选择动作、根据动作获取奖励、更新期望奖励估值、 更新累积懊悔和计数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">BernoulliBandit</span>:<br>    <span class="hljs-string">&quot;&quot;&quot; 伯努利多臂老虎机,输入K表示拉杆个数 &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, K</span>):<br>        self.probs = np.random.uniform(size=K)<br>        self.best_idx = np.argmax(self.probs)<br>        self.best_prob = self.probs[self.best_idx]<br>        self.K = K<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">step</span>(<span class="hljs-params">self, k</span>):<br>        <span class="hljs-keyword">if</span> np.random.rand() &lt; self.probs[k]:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solver</span>:<br>    <span class="hljs-string">&quot;&quot;&quot; 多臂老虎机算法基本框架 &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, bandit</span>):<br>        self.bandit = bandit<br>        self.counts = np.zeros(self.bandit.K)<br>        self.regret = <span class="hljs-number">0.</span><br>        self.actions = []<br>        self.regrets = []<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update_regret</span>(<span class="hljs-params">self, k</span>):<br>        self.regret += self.bandit.best_prob - self.bandit.probs[k]<br>        self.regrets.append(self.regret)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run_one_step</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># 返回当前动作选择哪一根拉杆,由每个具体的策略实现</span><br>        <span class="hljs-comment"># 具体策略全部继承于这个类</span><br>        <span class="hljs-keyword">raise</span> NotImplementedError<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self, num_steps</span>):<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(num_steps):<br>            k = self.run_one_step()<br>            self.counts[k] += <span class="hljs-number">1</span><br>            self.actions.append(k)<br>            self.update_regret(k)<br></code></pre></td></tr></table></figure><p>​代码来自<a href="https://github.com/boyu-ai/Hands-on-RL/blob/main/README.md">动手学强化学习</a>，这本书的代码风格还是很好的，代码结构很值得一学，<strong>我们要定义这么多的类的原因是为了高度的可扩展性，通过<code>Slover</code>这个类，我们可以随意地添加新的概率分布的老虎机，也可以随意添加新的策略算法实现</strong></p><h2 id="策略算法实现"><a class="markdownIt-Anchor" href="#策略算法实现"></a> 策略算法实现：</h2><p>​设计策略时就需要平衡探索和利用的次数，使得累积奖励最大 化。一个比较常用的思路是在开始时做比较多的探索，在对每根拉杆都有比较准确的估计后， 再进行利用</p><h3 id="贪婪算法"><a class="markdownIt-Anchor" href="#贪婪算法"></a> 贪婪算法：</h3><p>​完全贪婪算法即在每一时刻采取期望奖励估值最大的动作（拉动拉杆），<strong>这就是纯粹的利用， 而没有探索</strong>，所以我们通常需要对完全贪婪算法进行一些修改，其中比较经典的一种方法为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> -贪婪 （<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> -Greedy）算法。它在完全贪婪算法的基础上添加了噪声，每次以概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mtext>−</mtext><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">1−\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">−</span><span class="mord mathnormal">ϵ</span></span></span></span> 选择以往经验中期望奖励估值最大的那根拉杆（利用），以概率 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 随机选择一根拉杆（探索）</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">a</mi><mi>t</mi></msub><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>r</mi><mi>g</mi><mi><munder><mo><mi>max</mi><mo>⁡</mo></mo><mrow><mi mathvariant="bold-italic">a</mi><mo>∈</mo><mi mathvariant="script">A</mi></mrow></munder></mi><mover accent="true"><mi>Q</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi mathvariant="bold-italic">a</mi><mo stretchy="false">)</mo><mtext> 采样概率: </mtext><mn>1</mn><mo>−</mo><mi>ϵ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>从</mtext><mi mathvariant="script">A</mi><mtext>中随机选择，采样概率: </mtext><mi>ϵ</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\boldsymbol{a}_t \left\{\begin{array}{c}arg\underset{\boldsymbol{a}\in \mathcal{A}}{\max}\hat Q(\boldsymbol a) \ \text{采样概率:}\   1-\epsilon  \\\text{从} \mathcal{A} \text{中随机选择，采样概率:} \ \epsilon\\\end{array} \right.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7092355em;"><span style="top:-3.7624655000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999994em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">a</span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight">A</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">max</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.771701em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">Q</span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord boldsymbol">a</span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mord text"><span class="mord cjk_fallback">采样概率</span><span class="mord">:</span></span><span class="mspace"> </span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-2.1507644999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">从</span></span><span class="mord"><span class="mord mathcal">A</span></span><span class="mord text"><span class="mord cjk_fallback">中随机选择，采样概率</span><span class="mord">:</span></span><span class="mspace"> </span><span class="mord mathnormal">ϵ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2092355000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>​随着探索次数的不断增加，我们对各个动作的奖励估计得越来越准，此时就没必要继续花大力气进行探索。所以具体实现中，我们可以令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 随时间衰减。但是请注意，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span> 不会在有限的步数内衰减至 0，<strong>因为基于有限步数观测的完全贪婪算法仍然是一个局部信息的贪婪算法，永远距离最优解有一个固定的差距</strong></p><h3 id="上置信界算法"><a class="markdownIt-Anchor" href="#上置信界算法"></a> 上置信界算法</h3><p>​我们引入不确定性度量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U(a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span> ，它会随着一个动作被尝试次数的增加而减小。我们使用一种基于不确定性的策略来综合考虑现有的期望奖励估值和不确定性，其核心问题是如何估计不确定性。</p><p>​<em>上置信界</em>（upper confidence bound，UCB）算法是一种经典的基于不确定性的策略算法， 它用到了霍夫丁不等式（Hoeffding’s inequality）：</p><p>​令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">X_1, X_2, ..., X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个独立同分布的随机变量，取值范围为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，其经验期望为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>n</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>X</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\bar x_n = \frac{1}{n} \sum_{j=1}^n X_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.71778em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.280926em;vertical-align:-0.43581800000000004em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> ，则有：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mo>≥</mo><msub><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mi>t</mi></msub><mo>+</mo><mi>u</mi><mo stretchy="false">)</mo><mo>≤</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>2</mn><mi>n</mi><msup><mi>u</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">P(E[x] \geq \bar x_t + u) \leq e^{-2nu^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>强化学习入门</title>
    <link href="/2024/03/12/%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/"/>
    <url>/2024/03/12/%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是强化学习"><a class="markdownIt-Anchor" href="#什么是强化学习"></a> 什么是强化学习</h1><p>​强化学习是机器通过与环境交互来实现目标的一种计算方法。机器和环境的一 轮交互是指，机器在环境的一个状态下做一个动作决策，把这个动作作用到环境当中，这个环境发生相应的改变并且将相应的奖励反馈和下一轮状态传回机器（<strong>因此强化学习示意图很像RNN网络</strong>）。这种交互是迭代进行的，机器的目标是最大化在多轮交互过程中获得的累积奖励的期望。强化学习用智能体（agent）这个 概念来表示做决策的机器。相比于有监督学习中的“模型”，<strong>强化学习中的“智能体”强调机器 不但可以感知周围的环境信息，还可以通过做决策来直接改变这个环境，而不只是给出一些预测信号</strong></p><p><img src="/2024/03/12/%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%AD%A6%E4%B9%A0/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/image-20240312164945531.png" alt="智能体和环境之间的迭代式交互"></p><h2 id="强化学习的环境"><a class="markdownIt-Anchor" href="#强化学习的环境"></a> 强化学习的环境</h2><p>​环境这样一个自身演变的随机过程中加入一个外来的干扰因素，即智能体的动作， 那么环境的下一刻状态的概率分布将由当前状态和智能体的动作来共同决定，用最简单的数学公式（马尔可夫决策过程）表示则是：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>环境下一刻状态</mtext><mo>∼</mo><mi>P</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo>∣</mo><mtext>当前状态，智能体的动作</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{环境下一刻状态} \sim P( \cdot \mid \text{当前状态，智能体的动作})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">环境下一刻状态</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord cjk_fallback">当前状态，智能体的动作</span></span><span class="mclose">)</span></span></span></span></span></p><p>每一轮状态转移都伴随着两方面 的随机性：一是智能体决策的动作的随机性，二是环境基于当前状态和智能体动作来采样下一刻状态的随机性</p><h2 id="强化学习的数据"><a class="markdownIt-Anchor" href="#强化学习的数据"></a> 强化学习的数据：</h2><p>​有监督学习的任务建立在从给定的数据分布中采样得到的训练数据集上，通过优化在训练 数据集中设定的目标函数（如最小化预测误差）来找到模型的最优参数。这里，训练数据集背 后的数据分布是完全不变的。 <strong>在强化学习中，数据是在智能体与环境交互的过程中得到的。如果智能体不采取某个决策动作，那么该动作对应的数据就永远无法被观测到</strong>，所以当前智能体的训练数据来自之前智能体的决策结果。因此，<strong>智能体的策略不同，与环境交互所产生的数据分布（占用度量）就不同</strong></p><ul><li>强化学习的策略在训练中会不断更新，其对应的数据分布（即占用度量）也会相应地 改变。因此，强化学习的一大难点就在于，智能体看到的数据分布是随着智能体的学习而不断 发生改变的</li><li>由于奖励建立在状态动作对之上，一个策略对应的价值其实就是一个占用度量下对应 的奖励的期望，因此寻找最优策略对应着寻找最优占用度量</li></ul><h2 id="与其它学习的区别"><a class="markdownIt-Anchor" href="#与其它学习的区别"></a> 与其它学习的区别</h2><p>​对于一般的有监督学习任务，我们的目标是找到一个最优的模型函数，使其在训练数据集上最小化一个给定的损失函数。在训练数据独立同分布的假设下，这个优化目标表示最小化模型在整个数据分布上的泛化误差（generalization error），用简要的公式可以概括为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>最优模型</mtext><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mtext>模型</mtext></munder><msub><mi>E</mi><mtext>(特征，标签)数据分布</mtext></msub><mo stretchy="false">[</mo><mtext>损失函数(标签,模型)</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\text{最优模型} = \arg\min_{\text{模型}} E_{\text{(特征，标签)}\text{数据分布}}[\text{损失函数(标签,模型)}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">最优模型</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.4943309999999999em;vertical-align:-0.744331em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">模型</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.744331em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">(</span><span class="mord cjk_fallback mtight">特征，标签</span><span class="mord mtight">)</span></span><span class="mord text mtight"><span class="mord cjk_fallback mtight">数据分布</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord text"><span class="mord cjk_fallback">损失函数</span><span class="mord">(</span><span class="mord cjk_fallback">标签</span><span class="mord">,</span><span class="mord cjk_fallback">模型</span><span class="mord">)</span></span><span class="mclose">]</span></span></span></span></span></p><p>相比之下，强化学习任务的最终优化目标是最大化智能体策略在和动态环境交互过程中的价值。根据1.5节的分析，策略的价值可以等价转换成奖励函数在策略的占用度量上的期望，即：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>最优策略</mtext><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>max</mi><mo>⁡</mo></mo><mtext>策略</mtext></munder><msub><mi>E</mi><mrow><mtext>(状态，动作) </mtext><mo>∼</mo><mtext>策略的占用度量</mtext></mrow></msub><mo stretchy="false">[</mo><mtext>奖励函数(状态,动作)</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\text{最优策略} = \arg\max_{\text{策略}} E_{\text{(状态，动作) }\sim \text{策略的占用度量}}[\text{奖励函数(状态,动作)}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">最优策略</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.494331em;vertical-align:-0.7443310000000001em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43055999999999983em;"><span style="top:-2.355669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord cjk_fallback mtight">策略</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443310000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">(</span><span class="mord cjk_fallback mtight">状态，动作</span><span class="mord mtight">) </span></span><span class="mrel mtight">∼</span><span class="mord text mtight"><span class="mord cjk_fallback mtight">策略的占用度量</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord text"><span class="mord cjk_fallback">奖励函数</span><span class="mord">(</span><span class="mord cjk_fallback">状态</span><span class="mord">,</span><span class="mord cjk_fallback">动作</span><span class="mord">)</span></span><span class="mclose">]</span></span></span></span></span></p><p>（1）有监督学习和强化学习的优化目标相似，即都是在优化某个数据分布下的一个分数值的期望</p><p>（2）二者优化的途径是不同的，有监督学习直接通过优化模型对于数据特征的输出来优化目标，即修改目标函数而数据分布不变；强化学习则通过改变策略来调整智能体和环境交互数据的分布，进而优化目标，即修改数据分布而目标函数不变</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网络协议浅谈</title>
    <link href="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    <url>/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="osi参考模型"><a class="markdownIt-Anchor" href="#osi参考模型"></a> OSI参考模型:</h1><p>​<strong>OSI 七层模型</strong> 是国际标准化组织ISO提出一个网络分层模型，其大体结构以及每一层提供的功能如下图所示：</p><p><img src="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/1.png" alt="OSI七层模型"></p><p>​它的目的是进行<strong>异构网络系统</strong>（不同制造商生产的计算机、网络设备和系统组成的网络）的互连互通，是异构网络的国际标准。每一层都专注做一件事情，并且<strong>每一层都需要使用下一层提供的功能</strong>（下层协议对上层来说是透明的），比如传输层需要使用网络层提供的路由和寻址功能，这样传输层才知道把数据传输到哪里去。OSI 的七层体系结构概念清楚，理论也很完整，但是它比较复杂而且不实用，而且有些功能在多个层中重复出现</p><p><img src="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/2.png" alt="osi七层模型2"></p><p>​上层的四层为端到端的层，两个主机的通信过程如下图所示：</p><p><img src="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/3.png" alt="协议示意"></p><ul><li>物理层就是现实中的传输信息的线路，如光纤，电线等线路，他只负责传输0与1</li><li>数据链路层负责进行流量控制（防止淹没接受端），差错控制（检测丢失信息）和控制链路使用权</li><li>网络层控制数据的逻辑寻址，负责数据节点到节点的交付（由路由器最终分组）</li><li>传输层负责端到端（两个主机的进程）的信道数据传输（使用SAP寻址）</li><li>会话层管理应用程序间的会话，还负责同步的功能（在数据流中加入同步点，确保数据交换的顺序和时间上的一致性）</li><li>表示层负责数据加密，数据解码（数据压缩，数据解压）的过程</li><li>应用层支持用户通过代理使用网络服务，如<ul><li>文件传输（FTP File Transfer Protocol）</li><li>电子邮件（SMTP Simple Mail Transfer Protocol）</li><li>Web（HTTP HyperText Transfer Protoco）</li></ul></li></ul><h1 id="tcpip-四层模型"><a class="markdownIt-Anchor" href="#tcpip-四层模型"></a> TCP/IP 四层模型</h1><p><strong>TCP/IP 四层模型</strong> 是IETP组织制定的，目前被广泛采用的一种模型,我们可以将 TCP / IP 模型看作是 OSI 七层模型的精简版本，由以下 4 层组成：</p><ol><li>应用层</li><li>传输层</li><li>网络层</li><li>网络接口层</li></ol><p>需要注意的是，我们并不能将 TCP/IP 四层模型 和 OSI 七层模型完全精确地匹配起来，不过可以简单将两者对应起来，如下图所示：</p><p><img src="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/4.png" alt="TCP/IP四层模型"></p><ol><li><strong>链路层（Link Layer）</strong>：<ul><li>链路层通常包括 OSI 模型的物理层和数据链路层。它负责在物理媒介（如电缆、光纤）上传输原始比特流。链路层的主要任务包括封装网络层传下来的数据包（称为帧），处理物理地址（如 MAC 地址），以及确保数据在相邻节点间的可靠传输</li></ul></li><li><strong>网络层（Internet Layer）</strong>：<ul><li>网络层负责在多个网络之间传输数据包。它使用 IP 协议（Internet Protocol）来为数据包提供寻址和路由功能。网络层的主要任务包括将数据包（IP 数据报）从源主机路由到目的主机，无论它们之间有多少个网络</li></ul></li><li><strong>传输层（Transport Layer）</strong>：<ul><li>传输层负责在网络中的两个端点之间提供可靠的、<strong>面向连接的数据传输服务</strong>。TCP（Transmission Control Protocol）和 UDP（User Datagram Protocol）是这一层的两个主要协议</li></ul></li><li><strong>应用层（Application Layer）</strong>：<ul><li>应用层是 TCP/IP 模型的最高层，它直接为用户的应用程序提供服务。这一层包含了各种协议，用于支持特定的应用程序，如 HTTP（用于网页浏览）、SMTP（用于电子邮件传输）、FTP（用于文件传输）等。应用层协议定义了<strong>客户端和服务器之间交换数据的格式和规则</strong>，使得应用程序能够通过网络进行通信</li></ul></li></ol><p><img src="/2024/03/06/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/5.png" alt="TCP/IP各层协议"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mmcv组件6</title>
    <link href="/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B66/"/>
    <url>/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B66/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件hook"><a class="markdownIt-Anchor" href="#mmcv核心组件hook"></a> MMCV核心组件Hook</h1><p>​MM的整个算法过程就像一个黑盒子：给定输入后（配置文件），黑盒子就会吐出算法结果。整个过程封装度非常高，几乎不需要手写什么代码，Hook机制的作用就是在算法执行过程中加入自定义操作呢</p><p>Hook就是一种一种触发器，可以在程序预定义的位置执行预定义的函数。MMCV根据算法的生命周期预定义了6个可以插入自定义函数的位点，用户可以在每个位点自由地插入任意数量的函数操作，如下图所示：</p><p><img src="/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B66/8c2a699f7d084388bb2add311ecff379.png" alt="img"></p><p>​这6个位置基本涵盖了自定义操作可能出现的位置，MMCV已经实现了部分常用Hook，其中默认Hook不需要用户自行注册，通过配置文件配置对应的参数即可；定制Hook则需要用户在配置文件中手动配置<code>custom_hooks</code>字段进行注册</p><p><img src="/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B66/c659b14d05c143549545648c24885f56.png" alt="img"></p><h2 id="hook的注册"><a class="markdownIt-Anchor" href="#hook的注册"></a> Hook的注册：</h2><p>​Hook 划分为默认 Hook 和定制 Hook，之所以划分为默认 Hook 和定制 Hook，原因是默认 Hook不需要用户自行注册，用户通过 <code>hook 名_config</code> 配置对应参数即可</p><p>对于默认 Hook，在 MMDetection 框架训练过程中，其注册代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">runner.register_training_hooks(cfg.lr_config, optimizer_config,<br>                               cfg.checkpoint_config, cfg.log_config,<br>                               cfg.get(<span class="hljs-string">&#x27;momentum_config&#x27;</span>, <span class="hljs-literal">None</span>))<br></code></pre></td></tr></table></figure><p><code>register_training_hooks</code> 函数的接收参数其实是字典参数，Runner 内部会根据配置自动生成对应的 Hook 实例，典型的 <code>lr_config</code> 为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">lr_config = <span class="hljs-built_in">dict</span>(<br>    policy=<span class="hljs-string">&#x27;step&#x27;</span>,<br>    warmup=<span class="hljs-string">&#x27;linear&#x27;</span>,<br>    warmup_iters=<span class="hljs-number">500</span>,<br>    warmup_ratio=<span class="hljs-number">0.001</span>,<br>    step=[<span class="hljs-number">16</span>, <span class="hljs-number">22</span>])<br></code></pre></td></tr></table></figure><p>由于 <code>lr_config</code> 没有显示的调用 Hook 类，故对于用户而言其实不知道是采用 Hook 机制实现的。</p><p>​但是对于定制类 Hook，其注册源码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># user-defined hooks</span><br><span class="hljs-keyword">if</span> cfg.get(<span class="hljs-string">&#x27;custom_hooks&#x27;</span>, <span class="hljs-literal">None</span>):<br>    custom_hooks = cfg.custom_hooks<br>    <span class="hljs-keyword">for</span> hook_cfg <span class="hljs-keyword">in</span> cfg.custom_hooks:<br>        hook_cfg = hook_cfg.copy()<br>        priority = hook_cfg.pop(<span class="hljs-string">&#x27;priority&#x27;</span>, <span class="hljs-string">&#x27;NORMAL&#x27;</span>)<br>        <span class="hljs-comment"># 通过配置实例化定制 hook</span><br>        hook = build_from_cfg(hook_cfg, HOOKS)<br>        <span class="hljs-comment"># 注册</span><br>        runner.register_hook(hook, priority=priority)<br></code></pre></td></tr></table></figure><p>​和其他模块不同，当我们定义好一个Hook(并注册到<code>HOOKS</code>注册器中)之后，还需要注册到Runner中才能使用，<strong>前后一共进行两次注册</strong>。第一次注册到<code>HOOKS</code>是为了程序能够根据Hook名称找到对应的模块，第二次注册到Runner中是为了程序执行到预定义位置时能够调用对应的函数</p><h2 id="hook注册原理"><a class="markdownIt-Anchor" href="#hook注册原理"></a> Hook注册原理：</h2><p>​类似前面的核心组件，Hook同样使用了面向接口编程的思想，<code>Hook</code>类本身只提供预定义位置的接口函数，任何自定义的Hook都需要继承<code>Hook</code>类，然后根据需要重写对应的接口函数。比如检查点保存操作通常发生在每次迭代或epoch后，所以我们需要重写<code>after_train_iter</code>和<code>after_train_epoch</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Hook</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">before_run</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">after_run</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">before_epoch</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">after_epoch</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">before_iter</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">after_iter</span>(<span class="hljs-params">self, runner</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-meta">@HOOKS.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CheckpointHook</span>(<span class="hljs-title class_ inherited__">Hook</span>):<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,</span><br><span class="hljs-params">                 interval=-<span class="hljs-number">1</span>,</span><br><span class="hljs-params">                 by_epoch=<span class="hljs-literal">True</span>,</span><br><span class="hljs-params">                 save_optimizer=<span class="hljs-literal">True</span>,</span><br><span class="hljs-params">                 out_dir=<span class="hljs-literal">None</span>,</span><br><span class="hljs-params">                 max_keep_ckpts=-<span class="hljs-number">1</span>,</span><br><span class="hljs-params">                 **kwargs</span>):<br>        ...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">after_train_iter</span>(<span class="hljs-params">self, runner</span>):<br>...<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">after_train_epoch</span>(<span class="hljs-params">self, runner</span>):<br>...<br></code></pre></td></tr></table></figure><p>​和其他模块不同，当我们定义好一个Hook(并注册到<code>HOOKS</code>注册器中)之后，还需要注册到Runner中才能使用，<strong>前后一共进行两次注册</strong>。第一次注册到<code>HOOKS</code>是为了程序能够根据Hook名称找到对应的模块，第二次注册到Runner中是为了程序执行到预定义位置时能够调用对应的函数</p><p>Runner是MMCV用来管理训练过程的一个类，它内部会维护一个list类型变量<code>self._hooks</code>，我们需要把训练过程会调用的Hook<strong>实例对象</strong>按照优先级顺序全部添加到<code>self._hooks</code>中，这个过程通过<code>Runner.register_hook()</code>函数实现。MMCV预定义了几种优先级, 数字越小表示优先级越高, 如果觉得默认的分级方式颗粒度过大, 也<strong>可以直接传入0~100的整数</strong>进行精细划分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">register_hook</span>(<span class="hljs-params">self, hook, priority=<span class="hljs-string">&#x27;NORMAL&#x27;</span></span>):<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">预定义优先级</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | Level        | Value      |</span><br><span class="hljs-string">    +==============+============+</span><br><span class="hljs-string">    | HIGHEST      | 0          |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | VERY_HIGH    | 10         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | HIGH         | 30         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | ABOVE_NORMAL | 40         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | NORMAL       | 50         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | BELOW_NORMAL | 60         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | LOW          | 70         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | VERY_LOW     | 90         |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    | LOWEST       | 100        |</span><br><span class="hljs-string">    +--------------+------------+</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    hook.priority = priority<br>    <span class="hljs-comment"># 插入法排序将Hooks按照priority大小升序排列</span><br>    inserted = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(self._hooks) - <span class="hljs-number">1</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">if</span> priority &gt;= self._hooks[i].priority:<br>            self._hooks.insert(i + <span class="hljs-number">1</span>, hook)<br>            inserted = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> inserted:<br>        self._hooks.insert(<span class="hljs-number">0</span>, hook)<br></code></pre></td></tr></table></figure><p>将Hook实例加入到<code>self._hooks</code>中之后，然后就可以在预定义位置调用<code>call_hook()</code>来调用各个Hook实例中的对应方法。<code>call_hook()</code>称为回调函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 开始运行时调用</span><br>self.call_hook(<span class="hljs-string">&#x27;after_train_epoch&#x27;</span>)<br><br><span class="hljs-keyword">while</span> self.epoch &lt; self._max_epochs:<br><br>    <span class="hljs-comment"># 开始 epoch 迭代前调用</span><br>    self.call_hook(<span class="hljs-string">&#x27;before_train_epoch&#x27;</span>)<br><br>    <span class="hljs-keyword">for</span> i, data_batch <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(self.data_loader):<br>        <span class="hljs-comment"># 开始 iter 迭代前调用</span><br>        self.call_hook(<span class="hljs-string">&#x27;before_train_iter&#x27;</span>)<br><br>        self.model.train_step()<br><br>        <span class="hljs-comment"># 经过一次迭代后调用</span><br>        self.call_hook(<span class="hljs-string">&#x27;after_train_iter&#x27;</span>)<br><br>    <span class="hljs-comment"># 经过一个 epoch 迭代后调用</span><br>    self.call_hook(<span class="hljs-string">&#x27;after_train_epoch&#x27;</span>)<br><br><span class="hljs-comment"># 运行完成前调用</span><br>self.call_hook(<span class="hljs-string">&#x27;after_train_epoch&#x27;</span>)<br><br></code></pre></td></tr></table></figure><p>调用<code>call_hook()</code>时会遍历<code>self._hooks</code>中所有Hook实例，并根据<code>fn_name</code>调用Hook实例的指定成员函数。比如<code>fn_name='before_train_epoch'</code>时，<code>call_hook()</code>会挨个调用所有Hook的<code>before_train_epoch()</code>函数。而且由于<code>self._hooks</code>已经按照优先级进行过排序，<code>call_hook()</code>会先调用优先级高的Hook方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">call_hook</span>(<span class="hljs-params">self, fn_name</span>):<br>    <span class="hljs-keyword">for</span> hook <span class="hljs-keyword">in</span> self._hooks:<br>        <span class="hljs-built_in">getattr</span>(hook, fn_name)(self)<br></code></pre></td></tr></table></figure><h2 id="hook机制小结"><a class="markdownIt-Anchor" href="#hook机制小结"></a> Hook机制小结</h2><p>Hook是一种设置在程序固定位置的触发器，当程序执行到预设位点时则会触发断点，执行Hook函数的流程，结束后再回到断点位置继续执行主流程的代码。实现一个Hook包含5个步骤：</p><ol><li>定义一个类，继承Hook基类</li><li>根据自定义Hook的功能有选择地重写Hook基类中对应的函数</li><li>注册自定义Hook模块到HOOKS查询表中（<code>register_module</code>）</li><li>实例化Hook模块并注册到Runner中（<code>register_hook</code>）</li><li>使用回调函数调用重写的Hook函数（<code>call_hook</code>）</li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>mmcv组件5</title>
    <link href="/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B65/"/>
    <url>/2024/03/05/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B65/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件runner"><a class="markdownIt-Anchor" href="#mmcv核心组件runner"></a> MMCV核心组件Runner</h1><p>​在2.0.0版本以后，Runnner从mmcv中移至mmengine，大体用法不发生改变，调用方式发生如下改变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmcv.runner <span class="hljs-keyword">import</span> Runner <span class="hljs-comment"># &lt; 2.0.0</span><br><span class="hljs-keyword">from</span> mmengine.runner <span class="hljs-keyword">import</span> Runner <span class="hljs-comment"># &gt;= 2.0.0</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>官方文档提示：</strong></p><p><strong>我们希望你在教程中更多地关注整体结构，而非具体模块的实现。这种“自顶向下”的思考方式是我们所倡导的。别担心，之后你将有充足的机会和指引，聚焦于自己想要改进的模块</strong></p></blockquote><p>​Runner 是 OpenMMLab 系列框架中训练部分的引擎，其核心功能和特性如下：</p><ul><li>负责 OpenMMLab 中所有框架的训练过程调度，是一个基础但功能丰富的类</li><li>支持定制工作流以满足训练过程中各状态自由切换，目前支持训练和验证两个工作流</li><li>提供了 Epoch 和 Iter 为基础的迭代模式以满足不同场景，例如 MMDetection 默认采用 Epoch (配置文件中相关参数都是以 Epoch 为单位)，而 MMSegmentation 默认采用 Iter (配置文件中相关参数都是以 Iter 为单位)</li><li>配合各类 Hook，对外提供了灵活的扩展能力，注入不同类型的 Hook，就可以在训练过程中以一种优雅的方式实现扩展功能</li></ul><h2 id="runner-分析"><a class="markdownIt-Anchor" href="#runner-分析"></a> Runner 分析</h2><h3 id="runner-初始化"><a class="markdownIt-Anchor" href="#runner-初始化"></a> Runner 初始化</h3><p>考虑到 Epoch 和 Iter 模式有很多共有逻辑，为了复用，抽象出一个 BaseRunner。BaseRunner 初始化是一个常规初始化过程，其参数如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,</span><br><span class="hljs-params">             model,</span><br><span class="hljs-params">             optimizer=<span class="hljs-literal">None</span>,</span><br><span class="hljs-params">             work_dir=<span class="hljs-literal">None</span>,</span><br><span class="hljs-params">             logger=<span class="hljs-literal">None</span>,</span><br><span class="hljs-params">             meta=<span class="hljs-literal">None</span>, <span class="hljs-comment"># 提供了该参数，则会保存到 ckpt 中</span></span><br><span class="hljs-params">             max_iters=<span class="hljs-literal">None</span>, <span class="hljs-comment"># 这两个参数非常关键，如果没有给定，则内部自己计算</span></span><br><span class="hljs-params">             max_epochs=<span class="hljs-literal">None</span></span>):<br></code></pre></td></tr></table></figure><p>​当然这只是主要的参数，看源码我们可以看到构造函数有三十几个参数，<code>Runner</code>初始化沿袭了mmcv的使用Config初始化的习惯，示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> DataLoader, default_collate<br><span class="hljs-keyword">from</span> torch.optim <span class="hljs-keyword">import</span> Adam<br><span class="hljs-keyword">from</span> mmengine.runner <span class="hljs-keyword">import</span> Runner<br><br><span class="hljs-meta">@MODELS.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyAwesomeModel</span>(<span class="hljs-title class_ inherited__">BaseModel</span>):<br>...<br><span class="hljs-meta">@DATASETS.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyDataset</span>(<span class="hljs-title class_ inherited__">Dataset</span>):<br>...<br><span class="hljs-meta">@METRICS.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Accuracy</span>(<span class="hljs-title class_ inherited__">BaseMetric</span>):<br>...<br><br>runner = Runner(<br>    <span class="hljs-comment"># 你的模型</span><br>    model=MyAwesomeModel(<br>        ...),<br>    <span class="hljs-comment"># 模型检查点、日志等都将存储在工作路径中</span><br>    work_dir=<span class="hljs-string">&#x27;exp/my_awesome_model&#x27;</span>,<br><br>    <span class="hljs-comment"># 训练所用数据</span><br>    train_dataloader=DataLoader(<br>        dataset=MyDataset(<br>            ...),<br>    <span class="hljs-comment"># 训练相关配置</span><br>    train_cfg=<span class="hljs-built_in">dict</span>(<br>        by_epoch=<span class="hljs-literal">True</span>,   <span class="hljs-comment"># 根据 epoch 计数而非 iteration</span><br>        max_epochs=<span class="hljs-number">10</span>,<br>        val_begin=<span class="hljs-number">2</span>,     <span class="hljs-comment"># 从第 2 个 epoch 开始验证</span><br>        val_interval=<span class="hljs-number">1</span>), <span class="hljs-comment"># 每隔 1 个 epoch 进行一次验证</span><br><br>    <span class="hljs-comment"># 优化器封装，MMEngine 中的新概念，提供更丰富的优化选择。</span><br>    <span class="hljs-comment"># 通常使用默认即可，可缺省。有特殊需求可查阅文档更换，如</span><br>    <span class="hljs-comment"># &#x27;AmpOptimWrapper&#x27; 开启混合精度训练</span><br>    optim_wrapper=<span class="hljs-built_in">dict</span>(<br>        optimizer=<span class="hljs-built_in">dict</span>(<br>            <span class="hljs-built_in">type</span>=Adam,<br>            lr=<span class="hljs-number">0.001</span>)),<br>    <span class="hljs-comment"># 参数调度器，用于在训练中调整学习率/动量等参数</span><br>    param_scheduler=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MultiStepLR&#x27;</span>,<br>        by_epoch=<span class="hljs-literal">True</span>,<br>        milestones=[<span class="hljs-number">4</span>, <span class="hljs-number">8</span>],<br>        gamma=<span class="hljs-number">0.1</span>),<br><br>    <span class="hljs-comment"># 验证所用数据</span><br>    val_dataloader=DataLoader(<br>        dataset=MyDataset(<br>            is_train=<span class="hljs-literal">False</span>,<br>            size=<span class="hljs-number">1000</span>),<br>        shuffle=<span class="hljs-literal">False</span>,<br>        collate_fn=default_collate,<br>        batch_size=<span class="hljs-number">1000</span>,<br>        pin_memory=<span class="hljs-literal">True</span>,<br>        num_workers=<span class="hljs-number">2</span>),<br>    <span class="hljs-comment"># 验证相关配置，通常为空即可</span><br>    val_cfg=<span class="hljs-built_in">dict</span>(),<br>    <span class="hljs-comment"># 验证指标与验证器封装，可自由实现与配置</span><br>    val_evaluator=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=Accuracy),<br><br>    <span class="hljs-comment"># 以下为其他进阶配置，无特殊需要时尽量缺省</span><br>    <span class="hljs-comment"># 钩子属于进阶用法，如无特殊需要，尽量缺省</span><br>    default_hooks=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-comment"># 最常用的默认钩子，可修改保存 checkpoint 的间隔</span><br>        checkpoint=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;CheckpointHook&#x27;</span>, interval=<span class="hljs-number">1</span>)),<br><br>    <span class="hljs-comment"># `luancher` 与 `env_cfg` 共同构成分布式训练环境配置</span><br>    launcher=<span class="hljs-string">&#x27;none&#x27;</span>,<br>    env_cfg=<span class="hljs-built_in">dict</span>(<br>        cudnn_benchmark=<span class="hljs-literal">False</span>,   <span class="hljs-comment"># 是否使用 cudnn_benchmark</span><br>        backend=<span class="hljs-string">&#x27;nccl&#x27;</span>,   <span class="hljs-comment"># 分布式通信后端</span><br>        mp_cfg=<span class="hljs-built_in">dict</span>(mp_start_method=<span class="hljs-string">&#x27;fork&#x27;</span>)),  <span class="hljs-comment"># 多进程设置</span><br>    log_level=<span class="hljs-string">&#x27;INFO&#x27;</span>,<br><br>    <span class="hljs-comment"># 加载权重的路径 (None 表示不加载)</span><br>    load_from=<span class="hljs-literal">None</span>,<br>    <span class="hljs-comment"># 从加载的权重文件中恢复训练</span><br>    resume=<span class="hljs-literal">False</span><br>)<br><br><span class="hljs-comment"># 开始训练你的模型吧</span><br>runner.train()<br></code></pre></td></tr></table></figure><p>​即使不了解实现细节，你也一定大体理解了这个训练流程，并感叹于执行器代码的紧凑与可读性（也许）。这也是 MMEngine 所期望的：结构化、模块化、标准化的训练流程，使得复现更加可靠、对比更加清晰</p><h3 id="配置参数项太多了不知道怎么配置怎么办"><a class="markdownIt-Anchor" href="#配置参数项太多了不知道怎么配置怎么办"></a> <strong>配置参数项太多了，不知道怎么配置怎么办？</strong></h3><p><strong>把执行器作为备忘录</strong>。需要使用的时候查<a href="https://mmengine.readthedocs.io/zh-cn/latest/api/runner.html">api官方文档</a></p><h3 id="对比手动构建和注册机制构建"><a class="markdownIt-Anchor" href="#对比手动构建和注册机制构建"></a> 对比手动构建和注册机制构建：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine.model <span class="hljs-keyword">import</span> BaseModel<br><span class="hljs-keyword">from</span> mmengine.runner <span class="hljs-keyword">import</span> Runner<br><span class="hljs-keyword">from</span> mmengine.registry <span class="hljs-keyword">import</span> MODELS <span class="hljs-comment"># 模型根注册器，你的自定义模型需要注册到这个根注册器中</span><br><br><span class="hljs-meta">@MODELS.register_module() </span><span class="hljs-comment"># 用于注册的装饰器</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyAwesomeModel</span>(<span class="hljs-title class_ inherited__">BaseModel</span>): <span class="hljs-comment"># 你的自定义模型</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, layers=<span class="hljs-number">18</span>, activation=<span class="hljs-string">&#x27;silu&#x27;</span></span>):<br>        ...<br><br><span class="hljs-comment"># 基于注册机制的例子</span><br>runner = Runner(<br>    model=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MyAwesomeModel&#x27;</span>,<br>        layers=<span class="hljs-number">50</span>,<br>        activation=<span class="hljs-string">&#x27;relu&#x27;</span>),<br>    ...<br>)<br><br><span class="hljs-comment"># 基于手动构建的例子</span><br>model = MyAwesomeModel(layers=<span class="hljs-number">18</span>, activation=<span class="hljs-string">&#x27;relu&#x27;</span>)<br>runner = Runner(<br>    model=model,<br>    ...<br>)<br></code></pre></td></tr></table></figure><h3 id="摘自官方文档"><a class="markdownIt-Anchor" href="#摘自官方文档"></a> 摘自官方文档：</h3><p>​为什么我要传入字典让 Runner 来构建实例，这样又有什么好处？如果你有产生这样的疑问，那我们就会很自豪的回答：“当然！（没有好处）”。事实上，基于注册机制的构建方式只有在结合配置文件时才会发挥它的最大优势。这里直接传入字典的写法也并非使用执行器的最佳实践。在这里，我们希望你能够通过这个例子读懂并习惯这种写法，方便理解我们马上将要讲到的执行器最佳实践——配置文件。敬请期待！</p><p>​如果你作为初学者无法立刻理解，使用<em>手动构建的方式</em>依然不失为一种好选择，甚至在小规模使用、试错和调试时是一种更加推荐的方式，因为对于 IDE 更加友好</p><p><strong>锐评：配置文件格式小括号叠小括号写得真恶心，而且官方也不想着优化配置文件格式</strong></p><h2 id="执行器最佳实践配置文件"><a class="markdownIt-Anchor" href="#执行器最佳实践配置文件"></a> 执行器最佳实践——配置文件</h2><p>​MMEngine 提供了一套支持 <code>Python</code> 语法的、功能强大的配置文件系统。你可以从之前的示例代码中<strong>近乎</strong>（我们将在下面说明）无缝地转换到配置文件。下面给出一段示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 以下代码存放在 example_config.py 文件中</span><br><span class="hljs-comment"># 基本拷贝自上面的示例，并将每项结尾的逗号删去</span><br>model = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MyAwesomeModel&#x27;</span>,<br>    layers=<span class="hljs-number">2</span>,<br>    activation=<span class="hljs-string">&#x27;relu&#x27;</span>)<br>work_dir = <span class="hljs-string">&#x27;exp/my_awesome_model&#x27;</span><br><br>train_dataloader = <span class="hljs-built_in">dict</span>(<br>    dataset=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MyDataset&#x27;</span>,<br>                 ...),<br>    sampler=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;DefaultSampler&#x27;</span>,<br>        ...)<br>train_cfg = <span class="hljs-built_in">dict</span>(<br>    by_epoch=<span class="hljs-literal">True</span>,<br>    ...)<br>optim_wrapper = <span class="hljs-built_in">dict</span>(<br>    optimizer=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;Adam&#x27;</span>,<br>        lr=<span class="hljs-number">0.001</span>))<br>param_scheduler = <span class="hljs-built_in">dict</span>(<br>    <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MultiStepLR&#x27;</span>,<br>    by_epoch=<span class="hljs-literal">True</span>,<br>    milestones=[<span class="hljs-number">4</span>, <span class="hljs-number">8</span>],<br>    gamma=<span class="hljs-number">0.1</span>)<br><br>val_dataloader = <span class="hljs-built_in">dict</span>(<br>    dataset=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;MyDataset&#x27;</span>, ...),<br>    sampler=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;DefaultSampler&#x27;</span>, ...),<br>    collate_fn=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;default_collate&#x27;</span>),<br>    batch_size=<span class="hljs-number">1000</span>,<br>    ...)<br>val_cfg = <span class="hljs-built_in">dict</span>()<br>val_evaluator = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;Accuracy&#x27;</span>)<br><br>default_hooks = <span class="hljs-built_in">dict</span>(<br>    checkpoint=<span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;CheckpointHook&#x27;</span>, interval=<span class="hljs-number">1</span>))<br>launcher = <span class="hljs-string">&#x27;none&#x27;</span><br>env_cfg = <span class="hljs-built_in">dict</span>(<br>    cudnn_benchmark=<span class="hljs-literal">False</span>,<br>    ...)<br>log_level = <span class="hljs-string">&#x27;INFO&#x27;</span><br>load_from = <span class="hljs-literal">None</span><br>resume = <span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p>此时，我们只需要在训练代码中加载配置，然后运行即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine.config <span class="hljs-keyword">import</span> Config<br><span class="hljs-keyword">from</span> mmengine.runner <span class="hljs-keyword">import</span> Runner<br>config = Config.fromfile(<span class="hljs-string">&#x27;example_config.py&#x27;</span>)<br>runner = Runner.from_cfg(config)<br>runner.train()<br></code></pre></td></tr></table></figure><h2 id="runner-的使用"><a class="markdownIt-Anchor" href="#runner-的使用"></a> Runner 的使用：</h2><p>Runner 的使用过程可以分成 4 个步骤：</p><ol><li>Runner 对象初始化</li><li>注册各类 Hook 到 Runner 中</li><li>调用 Runner 的 resume 或者 load_checkpoint 方法对权重进行加载</li><li>运行给定的工作流，此时才真正开启了工作流</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine.runner <span class="hljs-keyword">import</span> Runner<br><span class="hljs-comment"># 假设你有一个配置文件 &#x27;config.yaml&#x27;</span><br>runner = Runner.from_cfg(<span class="hljs-string">&#x27;config.yaml&#x27;</span>)<br><br>runner.train()<br>runner.test()<br><br><span class="hljs-comment"># 检查点</span><br>runner.save_checkpoint(<span class="hljs-string">&#x27;checkpoint.pth&#x27;</span>)<br>runner.load_checkpoint(<span class="hljs-string">&#x27;checkpoint.pth&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMCV组件4</title>
    <link href="/2024/03/04/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B64/"/>
    <url>/2024/03/04/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B64/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件config"><a class="markdownIt-Anchor" href="#mmcv核心组件config"></a> MMCV核心组件Config</h1><h2 id="配置文件读取"><a class="markdownIt-Anchor" href="#配置文件读取"></a> 配置文件读取</h2><p>配置类提供了统一的接口 <code>Config.fromfile()</code>，来读取和解析配置文件。</p><p>合法的配置文件应该定义一系列键值对，这里举几个不同格式配置文件的例子。</p><p>Python 格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">test_int = <span class="hljs-number">1</span><br>test_list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>test_dict = <span class="hljs-built_in">dict</span>(key1=<span class="hljs-string">&#x27;value1&#x27;</span>, key2=<span class="hljs-number">0.1</span>)<br></code></pre></td></tr></table></figure><p>Json 格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<br>  <span class="hljs-string">&quot;test_int&quot;</span>: <span class="hljs-number">1</span>,<br>  <span class="hljs-string">&quot;test_list&quot;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],<br>  <span class="hljs-string">&quot;test_dict&quot;</span>: &#123;<span class="hljs-string">&quot;key1&quot;</span>: <span class="hljs-string">&quot;value1&quot;</span>, <span class="hljs-string">&quot;key2&quot;</span>: <span class="hljs-number">0.1</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>YAML 格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">test_int: <span class="hljs-number">1</span><br>test_list: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>test_dict:<br>  key1: <span class="hljs-string">&quot;value1&quot;</span><br>  key2: <span class="hljs-number">0.1</span><br></code></pre></td></tr></table></figure><p>对于以上三种格式的文件，假设文件名分别为 <code>config.py</code>，<code>config.json</code>，<code>config.yml</code>，调用 <code>Config.fromfile('config.xxx')</code> 接口加载这三个文件都会得到相同的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine.config <span class="hljs-keyword">import</span> Config<br><br>cfg = Config.fromfile(<span class="hljs-string">&#x27;learn_read_config.py&#x27;</span>)<br><span class="hljs-built_in">print</span>(cfg)<br>&gt;&gt;&gt;<br>Config (path: learn_read_config.py): &#123;<span class="hljs-string">&#x27;test_int&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;test_list&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], <span class="hljs-string">&#x27;test_dict&#x27;</span>: &#123;<span class="hljs-string">&#x27;key1&#x27;</span>: <span class="hljs-string">&#x27;value1&#x27;</span>, <span class="hljs-string">&#x27;key2&#x27;</span>: <span class="hljs-number">0.1</span>&#125;&#125;<br></code></pre></td></tr></table></figure><h2 id="配置文件的使用"><a class="markdownIt-Anchor" href="#配置文件的使用"></a> 配置文件的使用</h2><p>​通过读取配置文件来初始化配置对象后，就可以像使用普通字典或者 Python 类一样来使用这个变量了。<strong>这里提供了字典访问和属性访问两种接口</strong>， <code>cfg['key']</code> 或者 <code>cfg.key</code>。这两种接口都<strong>支持读写</strong></p><p>​关于为什么能用属性的方法进行成员的访问，进入源码之后我们可以看到原因是使用了第三方库<code>addict</code>实现，这里就不展开看源码了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(cfg.test_int)<br><span class="hljs-built_in">print</span>(cfg.test_list)<br><span class="hljs-built_in">print</span>(cfg.test_dict)<br>cfg.test_int = <span class="hljs-number">2</span><br><br><span class="hljs-built_in">print</span>(cfg[<span class="hljs-string">&#x27;test_int&#x27;</span>])<br><span class="hljs-built_in">print</span>(cfg[<span class="hljs-string">&#x27;test_list&#x27;</span>])<br><span class="hljs-built_in">print</span>(cfg[<span class="hljs-string">&#x27;test_dict&#x27;</span>])<br>cfg[<span class="hljs-string">&#x27;test_list&#x27;</span>][<span class="hljs-number">1</span>] = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(cfg[<span class="hljs-string">&#x27;test_list&#x27;</span>])<br>&gt;&gt;&gt;<br><span class="hljs-number">1</span><br>[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>&#123;<span class="hljs-string">&#x27;key1&#x27;</span>: <span class="hljs-string">&#x27;value1&#x27;</span>, <span class="hljs-string">&#x27;key2&#x27;</span>: <span class="hljs-number">0.1</span>&#125;<br><span class="hljs-number">2</span><br>[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>&#123;<span class="hljs-string">&#x27;key1&#x27;</span>: <span class="hljs-string">&#x27;value1&#x27;</span>, <span class="hljs-string">&#x27;key2&#x27;</span>: <span class="hljs-number">0.1</span>&#125;<br>[<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><p>​在算法库中，可以将配置与注册器结合起来使用，达到通过配置文件来控制模块构造的目的。例如我们已经定义了一个优化器的注册器 OPTIMIZERS，包括了各种优化器。那么首先写一个 <code>config_sgd.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">optimizer = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;SGD&#x27;</span>, lr=<span class="hljs-number">0.1</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">0.0001</span>)<br></code></pre></td></tr></table></figure><p>然后在算法库中可以通过如下代码构造优化器对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine <span class="hljs-keyword">import</span> Config, optim<br><span class="hljs-keyword">from</span> mmengine.registry <span class="hljs-keyword">import</span> OPTIMIZERS<br><br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><br>cfg = Config.fromfile(<span class="hljs-string">&#x27;config_sgd.py&#x27;</span>)<br><br>model = nn.Conv2d(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)<br>cfg.optimizer.params = model.parameters()<br>optimizer = OPTIMIZERS.build(cfg.optimizer)<br><span class="hljs-built_in">print</span>(optimizer)<br>&gt;&gt;&gt;<br>SGD (<br>Parameter Group <span class="hljs-number">0</span><br>    dampening: <span class="hljs-number">0</span><br>    foreach: <span class="hljs-literal">None</span><br>    lr: <span class="hljs-number">0.1</span><br>    maximize: <span class="hljs-literal">False</span><br>    momentum: <span class="hljs-number">0.9</span><br>    nesterov: <span class="hljs-literal">False</span><br>    weight_decay: <span class="hljs-number">0.0001</span><br>)<br></code></pre></td></tr></table></figure><h2 id="配置文件的继承"><a class="markdownIt-Anchor" href="#配置文件的继承"></a> 配置文件的继承</h2><p>​有时候两个不同的配置文件之间的差异很小，可能仅仅只改了一个字段，我们就需要将所有内容复制粘贴一次，而且在后续观察的时候，不容易定位到具体差异的字段</p><h3 id="继承机制概述"><a class="markdownIt-Anchor" href="#继承机制概述"></a> 继承机制概述</h3><p>这里我们举一个例子来说明继承机制。定义如下两个配置文件，</p><p><code>optimizer_cfg.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">optimizer = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;SGD&#x27;</span>, lr=<span class="hljs-number">0.02</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">0.0001</span>)<br></code></pre></td></tr></table></figure><p><code>resnet50.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<span class="hljs-string">&#x27;optimizer_cfg.py&#x27;</span>]<br>model = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;ResNet&#x27;</span>, depth=<span class="hljs-number">50</span>)<br></code></pre></td></tr></table></figure><p>虽然我们在 <code>resnet50.py</code> 中没有定义 optimizer 字段，但由于我们写了 <code>_base_ = ['optimizer_cfg.py']</code>，会使这个配置文件获得 <code>optimizer_cfg.py</code> 中的所有字段。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">cfg = Config.fromfile(<span class="hljs-string">&#x27;resnet50.py&#x27;</span>)<br><span class="hljs-built_in">print</span>(cfg.optimizer)<br>&gt;&gt;&gt;<br>&#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;SGD&#x27;</span>, <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.02</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0.0001</span>&#125;<br></code></pre></td></tr></table></figure><p><code>_base_</code> 是配置文件的保留字段，指定了该配置文件的继承来源。支持继承多个文件，将同时获得这多个文件中的所有字段</p><p><code>runtime_cfg.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">gpu_ids = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><p><code>resnet50_runtime.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<span class="hljs-string">&#x27;optimizer_cfg.py&#x27;</span>, <span class="hljs-string">&#x27;runtime_cfg.py&#x27;</span>]<br>model = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;ResNet&#x27;</span>, depth=<span class="hljs-number">50</span>)<br></code></pre></td></tr></table></figure><p>这时，读取配置文件 <code>resnet50_runtime.py</code> 会获得 3 个字段 <code>model</code>，<code>optimizer</code>，<code>gpu_ids</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">cfg = Config.fromfile(<span class="hljs-string">&#x27;resnet50_runtime.py&#x27;</span>)<br><span class="hljs-built_in">print</span>(cfg.optimizer)<br>&gt;&gt;&gt;<br>&#123;<span class="hljs-string">&#x27;optimizer&#x27;</span>: &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;SGD&#x27;</span>, <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.02</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0.0001</span>&#125;, <span class="hljs-string">&#x27;gpu_ids&#x27;</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], <span class="hljs-string">&#x27;model&#x27;</span>: &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;ResNet&#x27;</span>, <span class="hljs-string">&#x27;depth&#x27;</span>: <span class="hljs-number">50</span>&#125;&#125;<br></code></pre></td></tr></table></figure><h3 id="修改继承字段在引用配置文件的地方修改配置"><a class="markdownIt-Anchor" href="#修改继承字段在引用配置文件的地方修改配置"></a> 修改继承字段（在引用配置文件的地方修改配置）</h3><p>​有时候，我们继承一个配置文件之后，可能需要对其中个别字段进行修改，有两种修改方式，<strong>继承式修改和覆盖式修改</strong>：</p><p>继承式修改和覆盖式修改的区别在于<code>dict</code>函数第一个参数是否有<code>_delete_=True</code>，若没有则为继承式修改，只会修改指定的配置，反之则删光之前的所有配置，开始一个新的配置</p><p>​例如需要改变<code>_base_</code>文件中optimizer的配置：</p><p><code>resnet50_lr0.01.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<span class="hljs-string">&#x27;optimizer_cfg.py&#x27;</span>, <span class="hljs-string">&#x27;runtime_cfg.py&#x27;</span>]<br>model = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;ResNet&#x27;</span>, depth=<span class="hljs-number">50</span>)<br><span class="hljs-comment"># 继承式修改：</span><br>optimizer = <span class="hljs-built_in">dict</span>(lr=<span class="hljs-number">0.01</span>)<br><span class="hljs-comment"># 删除式修改：</span><br>optimizer = <span class="hljs-built_in">dict</span>(_delete_=<span class="hljs-literal">True</span>, <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;SGD&#x27;</span>, lr=<span class="hljs-number">0.01</span>)<br></code></pre></td></tr></table></figure><h3 id="引用被继承文件中的变量在配置文件内部修改配置"><a class="markdownIt-Anchor" href="#引用被继承文件中的变量在配置文件内部修改配置"></a> 引用被继承文件中的变量（在配置文件内部修改配置）</h3><p>​有时我们想重复利用 <code>_base_</code> 中定义的字段内容，就可以通过 <code>&#123;&#123;_base_.xxxx&#125;&#125;</code> 获取来获取对应变量的拷贝。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">refer_base_var.py<br>_base_ = [<span class="hljs-string">&#x27;resnet50.py&#x27;</span>]<br>a = &#123;&#123;_base_.model&#125;&#125;<br></code></pre></td></tr></table></figure><p>​解析后发现，<code>a</code> 的值变成了 <code>resnet50.py</code> 中定义的 <code>model</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">cfg = Config.fromfile(<span class="hljs-string">&#x27;refer_base_var.py&#x27;</span>)<br><span class="hljs-built_in">print</span>(cfg.a)<br>&gt;&gt;&gt;<br>&#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;ResNet&#x27;</span>, <span class="hljs-string">&#x27;depth&#x27;</span>: <span class="hljs-number">50</span>&#125;<br></code></pre></td></tr></table></figure><p>​我们可以在 <code>json</code>、<code>yaml</code>、<code>python</code> 三种类型的配置文件中，使用这种方式来获取 <code>_base_</code> 中定义的变量</p><p>​尽管这种获取 <code>_base_</code> 中定义变量的方式非常通用，但是在语法上存在一些限制，无法充分利用 <code>python</code> 类配置文件的动态特性。比如我们想在 <code>python</code> 类配置文件中，修改 <code>_base_</code> 中定义的变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<span class="hljs-string">&#x27;resnet50.py&#x27;</span>]<br>a = &#123;&#123;_base_.model&#125;&#125;<br>a[<span class="hljs-string">&#x27;type&#x27;</span>] = <span class="hljs-string">&#x27;MobileNet&#x27;</span><br></code></pre></td></tr></table></figure><p>​<strong>配置类是无法解析这样的配置文件的（解析时报错）</strong>。配置类提供了一种更 <code>pythonic</code> 的方式，让我们能够在 <code>python</code> 类配置文件中修改 <code>_base_</code> 中定义的变量（<code>python</code> 类配置文件专属特性，目前不支持在 <code>json</code>、<code>yaml</code> 配置文件中修改 <code>_base_</code> 中定义的变量）</p><p><code>modify_base_var.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<span class="hljs-string">&#x27;resnet50.py&#x27;</span>]<br>a = _base_.model<br>a.<span class="hljs-built_in">type</span> = <span class="hljs-string">&#x27;MobileNet&#x27;</span><br><span class="hljs-comment"># 这样即可修改成功</span><br></code></pre></td></tr></table></figure><h2 id="配置文件的导出"><a class="markdownIt-Anchor" href="#配置文件的导出"></a> 配置文件的导出</h2><p>在启动训练脚本时，用户可能通过传参的方式来修改配置文件的部分字段，为此我们提供了 <code>dump</code> 接口来导出更改后的配置文件。与读取配置文件类似，用户可以通过 <code>cfg.dump('config.xxx')</code> 来选择导出文件的格式。<code>dump</code> 同样可以导出有继承关系的配置文件，导出的文件可以被独立使用，不再依赖于 <code>_base_</code> 中定义的文件。</p><p>基于继承一节定义的 <code>resnet50.py</code>，我们将其加载后导出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">cfg = Config.fromfile(<span class="hljs-string">&#x27;resnet50.py&#x27;</span>)<br>cfg.dump(<span class="hljs-string">&#x27;resnet50_dump.py&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">resnet50_dump.py<br>optimizer = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;SGD&#x27;</span>, lr=<span class="hljs-number">0.02</span>, momentum=<span class="hljs-number">0.9</span>, weight_decay=<span class="hljs-number">0.0001</span>)<br>model = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;ResNet&#x27;</span>, depth=<span class="hljs-number">50</span>)<br></code></pre></td></tr></table></figure><p>类似的，我们可以导出 json、yaml 格式的配置文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">resnet50_dump.yaml<br>model:<br>  depth: <span class="hljs-number">50</span><br>  <span class="hljs-built_in">type</span>: ResNet<br>optimizer:<br>  lr: <span class="hljs-number">0.02</span><br>  momentum: <span class="hljs-number">0.9</span><br>  <span class="hljs-built_in">type</span>: SGD<br>  weight_decay: <span class="hljs-number">0.0001</span><br></code></pre></td></tr></table></figure><h2 id="高级用法以后再说"><a class="markdownIt-Anchor" href="#高级用法以后再说"></a> 高级用法：以后再说</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMCV组件3</title>
    <link href="/2024/03/04/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B63/"/>
    <url>/2024/03/04/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B63/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件registry"><a class="markdownIt-Anchor" href="#mmcv核心组件registry"></a> MMCV核心组件Registry</h1><p>​<strong>从2.0.0版本开始，<code>config</code> 和 <code>registry</code> 机制移动到了 mmengine 里面，本文是以<code>mmengine</code>模块中的registry讲解的，其实老版本的registry也差不多，调用的时候从<code>mmcv.utils</code>里面调用就行</strong></p><p>​OpenMMLab 的算法库支持了丰富的算法和数据集，因此实现了很多功能相近的模块。例如 ResNet 和 SE-ResNet 的算法实现分别基于 <code>ResNet</code> 和 <code>SEResNet</code> 类，这些类有相似的功能和接口，都属于算法库中的模型组件。为了管理这些功能相似的模块，MMEngine 实现了注册器。OpenMMLab 大多数算法库均使用注册器来管理它们的代码模块</p><h2 id="什么是注册器"><a class="markdownIt-Anchor" href="#什么是注册器"></a> 什么是注册器</h2><p>​MMEngine 实现的注册器可以看作一个映射表和模块构建方法的组合。映射表维护了一个字符串到<strong>类或者函数的映射</strong>，例如维护字符串 <code>&quot;ResNet&quot;</code> 到 <code>ResNet</code> 类或函数的映射，使得用户可以通过 <code>&quot;ResNet&quot;</code> 找到 <code>ResNet</code> 类；而<strong>模块构建方法则定义了如何根据字符串查找到对应的类或函数以及如何实例化这个类或者调用这个函数</strong>，例如，通过字符串 <code>&quot;bn&quot;</code> 找到 <code>nn.BatchNorm2d</code> 并实例化 <code>BatchNorm2d</code> 模块；又或者通过字符串 <code>&quot;build_batchnorm2d&quot;</code> 找到 <code>build_batchnorm2d</code> 函数并返回该函数的调用结果。MMEngine 中的注册器默认使用 <a href="https://mmengine.readthedocs.io/zh-cn/latest/api/generated/mmengine.registry.build_from_cfg.html#mmengine.registry.build_from_cfg">build_from_cfg</a> 函数来查找并实例化字符串对应的类或者函数</p><p>​一个注册器管理的类或函数通常有相似的接口和功能，因此该注册器可以被视作这些类或函数的抽象。例如注册器 <code>MODELS</code> 可以被视作所有模型的抽象，管理了 <code>ResNet</code>，<code>SEResNet</code> 和 <code>RegNetX</code> 等分类网络的类以及 <code>build_ResNet</code>, <code>build_SEResNet</code> 和 <code>build_RegNetX</code> 等分类网络的构建函数</p><h2 id="入门用法"><a class="markdownIt-Anchor" href="#入门用法"></a> 入门用法</h2><h3 id="函数声明"><a class="markdownIt-Anchor" href="#函数声明"></a> 函数声明</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine <span class="hljs-keyword">import</span> Registry<br>Registry(name,build_func=<span class="hljs-literal">None</span>,parent=<span class="hljs-literal">None</span>,scope=<span class="hljs-literal">None</span>,locations=[])<br></code></pre></td></tr></table></figure><ol><li><strong>name</strong> (str): 注册表的名称。这个名称用于标识一个特定的注册表实例，以便在代码中引用</li><li><strong>build_func</strong> (callable, optional): 用于根据提供的字符串名称创建对象。这个函数接受一个字符串参数，并返回一个对象实例。如果没有提供，那么默认的行为是直接使用字符串作为对象的名称来检索对象</li><li><strong>parent</strong> (Registry, optional): 父注册表。这允许创建一个继承自另一个注册表的注册表</li><li><strong>scope</strong> (str, optional): 作用域。这个参数定义了注册表的作用域，例如，它可以是 <code>'singleton'</code>，表示注册表中的每个条目都是单例的，或者 <code>'instance'</code>，表示每次请求都会创建一个新的实例。</li><li><strong>locations</strong> (list, optional): 一个可选的字符串列表，用于指定在创建对象时应该搜索的模块位置</li></ol><p>下面使用例子讲解</p><p>使用注册器管理代码库中的模块，需要以下三个步骤</p><ol><li>创建注册器</li><li>创建一个用于实例化类的构建方法（可选，在大多数情况下可以只使用默认方法）</li><li>将模块加入注册器中</li></ol><p>假设我们要实现一系列激活模块并且希望仅修改配置就能够使用不同的激活模块而无需修改代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 注册注册器</span><br><span class="hljs-keyword">from</span> mmengine <span class="hljs-keyword">import</span> Registry<br><span class="hljs-comment"># scope 表示注册器的作用域，如果不设置，默认为包名，例如在 mmdetection 中，它的 scope 为 mmdet</span><br><span class="hljs-comment"># locations 表示注册在此注册器的模块所存放的位置，注册器会根据预先定义的位置在构建模块时自动 import</span><br>ACTIVATION = Registry(<span class="hljs-string">&#x27;activation&#x27;</span>, scope=<span class="hljs-string">&#x27;mmengine&#x27;</span>, locations=[<span class="hljs-string">&#x27;mmengine.models.activations&#x27;</span>])<br></code></pre></td></tr></table></figure><p><code>locations</code> 指定的模块 <code>mmengine.models.activations</code> 对应了 <code>mmengine/models/activations.py</code> 文件。在使用注册器构建模块的时候，<strong>ACTIVATION 注册器会自动从该文件中导入实现的模块</strong>。因此，我们可以在 <code>mmengine/models/activations.py</code> 文件中实现不同的激活函数，例如 <code>Sigmoid</code>，<code>ReLU</code> 和 <code>Softmax</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-comment"># 使用注册器管理模块</span><br><span class="hljs-comment"># 1.不需要传入任何参数，此时默认实例化的配置字符串是 str (类名)</span><br><span class="hljs-meta">@ACTIVATION.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Sigmoid</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;call Sigmoid.forward&#x27;</span>)<br>        <span class="hljs-keyword">return</span> x<br><span class="hljs-comment"># 2.传入指定 str，实例化时候只需要传入对应相同 str 即可</span><br><span class="hljs-meta">@ACTIVATION.register_module(<span class="hljs-params">ReLu</span>)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ReLU</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, inplace=<span class="hljs-literal">False</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;call ReLU.forward&#x27;</span>)<br>        <span class="hljs-keyword">return</span> x<br><br><span class="hljs-meta">@ACTIVATION.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Softmax</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;call Softmax.forward&#x27;</span>)<br>        <span class="hljs-keyword">return</span> x<br></code></pre></td></tr></table></figure><p>使用注册器管理模块的关键步骤是，将实现的模块注册到注册表 <code>ACTIVATION</code> 中。通过 <code>@ACTIVATION.register_module()</code> 装饰所实现的模块，字符串和类或函数之间的映射就可以由 <code>ACTIVATION</code> 构建和维护通过注册，我们就可以通过 <code>ACTIVATION</code> 建立字符串与类或函数之间的映射</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(ACTIVATION.module_dict)<br><span class="hljs-comment"># &#123;</span><br><span class="hljs-comment">#     &#x27;Sigmoid&#x27;: __main__.Sigmoid,</span><br><span class="hljs-comment">#     &#x27;ReLU&#x27;: __main__.ReLU,</span><br><span class="hljs-comment">#     &#x27;Softmax&#x27;: __main__.Softmax</span><br><span class="hljs-comment"># &#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>只有模块所在的文件被导入时，注册机制才会被触发，用户可以通过三种方式将模块添加到注册器中：</p><ol><li>在 <code>locations</code> 指向的文件中实现模块。注册器将自动在预先定义的位置导入模块。这种方式是为了简化算法库的使用，以便用户可以直接使用 <code>REGISTRY.build(cfg)</code></li><li>手动导入文件。常用于用户在算法库之内或之外实现新的模块</li><li>在配置中使用 <code>custom_imports</code> 字段。 详情请参考<a href="https://mmengine.readthedocs.io/zh-cn/latest/advanced_tutorials/config.html#python">导入自定义Python模块</a></li></ol></blockquote><p>​模块成功注册后，我们可以通过配置文件使用这个激活模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><br><span class="hljs-built_in">input</span> = torch.randn(<span class="hljs-number">2</span>)<br><br>act_cfg = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;Sigmoid&#x27;</span>)<br>activation = ACTIVATION.build(act_cfg)<br>output = activation(<span class="hljs-built_in">input</span>)<br><span class="hljs-comment"># call Sigmoid.forward</span><br><span class="hljs-built_in">print</span>(output)<br></code></pre></td></tr></table></figure><p>​如果我们想使用 <code>ReLU</code>，仅需修改配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">act_cfg = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;ReLU&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br>activation = ACTIVATION.build(act_cfg)<br>output = activation(<span class="hljs-built_in">input</span>)<br><span class="hljs-comment"># call ReLU.forward</span><br><span class="hljs-built_in">print</span>(output)<br></code></pre></td></tr></table></figure><p>**如果希望在创建实例前检查输入参数的类型（或者任何其他操作）（类似于一个钩子函数）**，我们可以实现一个构建方法并将其传递给注册器从而实现自定义构建流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">build_activation</span>(<span class="hljs-params">cfg, registry, *args, **kwargs</span>):<br>    cfg_ = cfg.copy()<br>    act_type = cfg_.pop(<span class="hljs-string">&#x27;type&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;build activation: <span class="hljs-subst">&#123;act_type&#125;</span>&#x27;</span>)<br>    act_cls = registry.get(act_type)<br>    act = act_cls(*args, **kwargs, **cfg_)<br>    <span class="hljs-keyword">return</span> act<br></code></pre></td></tr></table></figure><p>并将 <code>build_activation</code> 传递给 <code>build_func</code> 参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">ACTIVATION = Registry(<span class="hljs-string">&#x27;activation&#x27;</span>, build_func=build_activation, scope=<span class="hljs-string">&#x27;mmengine&#x27;</span>, locations=[<span class="hljs-string">&#x27;mmengine.models.activations&#x27;</span>])<br><br><span class="hljs-meta">@ACTIVATION.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Tanh</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;call Tanh.forward&#x27;</span>)<br>        <span class="hljs-keyword">return</span> x<br><br>act_cfg = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;Tanh&#x27;</span>)<br>activation = ACTIVATION.build(act_cfg)<br>output = activation(<span class="hljs-built_in">input</span>)<br><span class="hljs-comment"># build activation: Tanh</span><br><span class="hljs-comment"># call Tanh.forward</span><br><span class="hljs-built_in">print</span>(output)<br></code></pre></td></tr></table></figure><p>​<strong>在大多数情况下，使用默认的方法就可以了</strong></p><h2 id="进阶用法以后再写"><a class="markdownIt-Anchor" href="#进阶用法以后再写"></a> 进阶用法(以后再写)</h2><p>MMEngine 的注册器支持层级注册，利用该功能可实现跨项目调用，即可以在一个项目中使用另一个项目的模块。虽然跨项目调用也有其他方法的可以实现，但 MMEngine 注册器提供了更为简便的方法。为了方便跨库调用，MMEngine 提供了 22 个根注册器（[查手册](<a href="https://mmengine.readthedocs.io/zh-cn/latest/advanced_tutorials/registry.html">注册器（Registry） — mmengine 0.10.3 文档</a>)）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMCV组件2</title>
    <link href="/2024/03/03/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B62/"/>
    <url>/2024/03/03/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B62/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件学习fileclient"><a class="markdownIt-Anchor" href="#mmcv核心组件学习fileclient"></a> MMCV核心组件学习FileClient</h1><h2 id="fileclient源码分析"><a class="markdownIt-Anchor" href="#fileclient源码分析"></a> FileClient源码分析：</h2><p>​图片的读取一般包括两个步骤：</p><ul><li>给定文件路径，读取文件内容（字节流）</li><li>对文件字节内容进行解码</li></ul><p>​第2步文件解码非常简单，通过 <code>mmcv.imfrombytes</code> 函数即可实现，该函数会对不同图片格式进行相应解码。<strong>用户各种各样需求基本上都出现在第一步</strong>，例如：</p><ul><li>给定图片名（或者图片路径），直接读取文件内容即可</li><li>利用 memcached 之类的缓存系统来加速读取</li><li>从分布式对象存储系统读取</li><li>由于涉及到数据版权，图片名仅仅是相对路径，实际上真正图片可能存储在云端，而不在本机</li></ul><p>​<strong>不同需求意味着给定图片名，处理逻辑不一样</strong>，而上述需求都是可以通过 <code>FileClient</code> 实现。如果上述两个步骤不进行解耦，那么代码会比较冗余</p><p>​<code>FileClient</code> 类和第一篇 <code>file_handler</code> 构建原则完全相同，也是采用简单工厂模式，即通过维护 <code>_backends</code> 字典，然后在类初始化时候通过参数选择不同的后端，同时也支持装饰器扩展开发</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">FileClient</span>:<br><br>    <span class="hljs-comment"># 已经实现的5种后端</span><br>    _backends = &#123;<br>        <span class="hljs-string">&#x27;disk&#x27;</span>: HardDiskBackend,<br>        <span class="hljs-string">&#x27;ceph&#x27;</span>: CephBackend,<br>        <span class="hljs-string">&#x27;memcached&#x27;</span>: MemcachedBackend,<br>        <span class="hljs-string">&#x27;lmdb&#x27;</span>: LmdbBackend,<br>        <span class="hljs-string">&#x27;petrel&#x27;</span>: PetrelBackend,<br>    &#125;<br>    <span class="hljs-comment"># 初始化时候用户自己选择后端</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, backend=<span class="hljs-string">&#x27;disk&#x27;</span>, **kwargs</span>):<br>        self.backend = backend<br>        self.client = self._backends[backend](**kwargs)<br><br>    <span class="hljs-comment"># 装饰器函数，用于注册自定义后端，后面有具体用法</span><br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">register_backend</span>(<span class="hljs-params">cls, name, backend=<span class="hljs-literal">None</span>, force=<span class="hljs-literal">False</span></span>):<br>        <span class="hljs-comment"># 如果你自己已经实例化了，那就直接注册</span><br>        <span class="hljs-keyword">if</span> backend <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>            cls._backends[name] = backend<br>            <span class="hljs-keyword">return</span><br>        <span class="hljs-comment"># 否则就采用标准的装饰器模式</span><br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">_register</span>(<span class="hljs-params">backend_cls</span>):<br>            cls._backends[name] = backend<br>            <span class="hljs-keyword">return</span> backend_cls<br>        <span class="hljs-keyword">return</span> _register<br><br>    <span class="hljs-comment"># 对外提供两个接口，所有后端必须实现</span><br>    <span class="hljs-comment"># 获取文件内容接口，训练中用这个</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, filepath</span>):<br>        <span class="hljs-keyword">return</span> self.client.get(filepath)<br><br>    <span class="hljs-comment"># 以 text 格式返回的文件内容接口，方便可视化数据</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_text</span>(<span class="hljs-params">self, filepath</span>):<br>        <span class="hljs-keyword">return</span> self.client.get_text(filepath)<br></code></pre></td></tr></table></figure><p>由于接口只有两个方法，base 基类实现非常简单：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseStorageBackend</span>(metaclass=ABCMeta):<br><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, filepath</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_text</span>(<span class="hljs-params">self, filepath</span>):<br>        <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h3 id="一种后端harddiskbackend解析"><a class="markdownIt-Anchor" href="#一种后端harddiskbackend解析"></a> 一种后端HardDiskBackend解析：</h3><p>这个用于完成需求：<strong>给定本地图片名(或者图片路径)，直接读取文件内容</strong>。这是默认选项，也就是图片在本地，dataset 返回的任何一张图片路径，经过 <code>HardDiskBackend</code> 直接读取文件字节内容，然后返回给文件解码函数即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">HardDiskBackend</span>(<span class="hljs-title class_ inherited__">BaseStorageBackend</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Raw hard disks storage backend.&quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, filepath</span>):<br>        <span class="hljs-comment"># 图片全路径</span><br>        filepath = <span class="hljs-built_in">str</span>(filepath)<br>        <span class="hljs-comment"># 直接打开即可</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filepath, <span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            value_buf = f.read()<br>        <span class="hljs-keyword">return</span> value_buf<br></code></pre></td></tr></table></figure><p>其它的暂时用不到，用的时候再查</p><h2 id="fileclient-用法"><a class="markdownIt-Anchor" href="#fileclient-用法"></a> FileClient 用法</h2><p>以 MMDetection 框架为例，其实际调用在 <code>mmdet/datasets/pipelines/loading.py/LoadImageFromFile</code> 类中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@PIPELINES.register_module()</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LoadImageFromFile</span>(<span class="hljs-title class_ inherited__">object</span>):  <span class="hljs-comment"># 加载图片到内存中</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,</span><br><span class="hljs-params">                 to_float32=<span class="hljs-literal">False</span>,</span><br><span class="hljs-params">                 color_type=<span class="hljs-string">&#x27;color&#x27;</span>,</span><br><span class="hljs-params">                 file_client_args=<span class="hljs-built_in">dict</span>(<span class="hljs-params">backend=<span class="hljs-string">&#x27;disk&#x27;</span></span>)</span>):<br>        self.to_float32 = to_float32<br>        self.color_type = color_type<br>        <span class="hljs-comment"># 默认是 disk 后端</span><br>        self.file_client_args = file_client_args.copy()<br>        self.file_client = <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, results</span>):<br>        <span class="hljs-keyword">if</span> self.file_client <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            self.file_client = mmcv.FileClient(**self.file_client_args)<br>        <span class="hljs-comment"># 读取图片字节内容</span><br>        img_bytes = self.file_client.get(filename)<br>        <span class="hljs-comment"># 对字节内容进行解码</span><br>        img = mmcv.imfrombytes(img_bytes, flag=self.color_type)<br>        ...<br>        <span class="hljs-keyword">return</span> results<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>编程方式对比</title>
    <link href="/2024/03/03/coding%E6%8A%80%E5%B7%A7/%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94/"/>
    <url>/2024/03/03/coding%E6%8A%80%E5%B7%A7/%E7%BC%96%E7%A8%8B%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94/</url>
    
    <content type="html"><![CDATA[<h1 id="编程方式对比与面向接口编程介绍"><a class="markdownIt-Anchor" href="#编程方式对比与面向接口编程介绍"></a> 编程方式对比与面向接口编程介绍</h1><h3 id="面向对象编程-oop"><a class="markdownIt-Anchor" href="#面向对象编程-oop"></a> 面向对象编程 (OOP)</h3><p>面向对象编程强调使用类和对象来封装数据和行为。在OOP中，对象是数据和操作这些数据的方法的集合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Car</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, brand, model</span>):<br>        self.brand = brand<br>        self.model = model<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">start_engine</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;self.brand&#125;</span> <span class="hljs-subst">&#123;self.model&#125;</span> engine started.&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">stop_engine</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;self.brand&#125;</span> <span class="hljs-subst">&#123;self.model&#125;</span> engine stopped.&quot;</span>)<br><br><span class="hljs-comment"># 使用</span><br>my_car = Car(<span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>)<br>my_car.start_engine()<br>my_car.stop_engine()<br></code></pre></td></tr></table></figure><h3 id="面向过程编程-pop"><a class="markdownIt-Anchor" href="#面向过程编程-pop"></a> 面向过程编程 (POP)</h3><p>面向过程编程关注于执行一系列操作，这些操作通常以函数的形式存在，不强调对象的概念</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">start_engine</span>(<span class="hljs-params">brand, model</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;brand&#125;</span> <span class="hljs-subst">&#123;model&#125;</span> engine started.&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stop_engine</span>(<span class="hljs-params">brand, model</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;brand&#125;</span> <span class="hljs-subst">&#123;model&#125;</span> engine stopped.&quot;</span>)<br><br><span class="hljs-comment"># 使用</span><br>start_engine(<span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>)<br>stop_engine(<span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="函数式编程-fp"><a class="markdownIt-Anchor" href="#函数式编程-fp"></a> 函数式编程 (FP)</h3><p>函数式编程强调使用纯函数和不可变数据，避免副作用，使得函数更容易测试和复用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">start_engine</span>(<span class="hljs-params">brand, model</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;brand&#125;</span> <span class="hljs-subst">&#123;model&#125;</span> engine started.&quot;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stop_engine</span>(<span class="hljs-params">brand, model</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;brand&#125;</span> <span class="hljs-subst">&#123;model&#125;</span> engine stopped.&quot;</span><br><br><span class="hljs-comment"># 使用</span><br><span class="hljs-built_in">print</span>(start_engine(<span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>))<br><span class="hljs-built_in">print</span>(stop_engine(<span class="hljs-string">&quot;Toyota&quot;</span>, <span class="hljs-string">&quot;Corolla&quot;</span>))<br></code></pre></td></tr></table></figure><h3 id="命令式编程-imperative"><a class="markdownIt-Anchor" href="#命令式编程-imperative"></a> 命令式编程 (Imperative)</h3><p>命令式编程通过命令来描述程序的执行过程，直接操作程序状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">car_state = &#123;<br>    <span class="hljs-string">&#x27;brand&#x27;</span>: <span class="hljs-string">&#x27;Toyota&#x27;</span>,<br>    <span class="hljs-string">&#x27;model&#x27;</span>: <span class="hljs-string">&#x27;Corolla&#x27;</span>,<br>    <span class="hljs-string">&#x27;engine_running&#x27;</span>: <span class="hljs-literal">False</span><br>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">start_engine</span>():<br>    car_state[<span class="hljs-string">&#x27;engine_running&#x27;</span>] = <span class="hljs-literal">True</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;car_state[<span class="hljs-string">&#x27;brand&#x27;</span>]&#125;</span> <span class="hljs-subst">&#123;car_state[<span class="hljs-string">&#x27;model&#x27;</span>]&#125;</span> engine started.&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">stop_engine</span>():<br>    car_state[<span class="hljs-string">&#x27;engine_running&#x27;</span>] = <span class="hljs-literal">False</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;car_state[<span class="hljs-string">&#x27;brand&#x27;</span>]&#125;</span> <span class="hljs-subst">&#123;car_state[<span class="hljs-string">&#x27;model&#x27;</span>]&#125;</span> engine stopped.&quot;</span>)<br><br><span class="hljs-comment"># 使用</span><br>start_engine()<br>stop_engine()<br></code></pre></td></tr></table></figure><ul><li>OOP通过类和对象提供了一种自然的方式来模拟现实世界中的实体和它们的行为</li><li>POP直接通过函数调用来执行操作，不涉及对象的概念</li><li>FP强调函数的纯度和数据的不可变性，使得代码更加简洁和易于测试</li><li>Imperative编程通过明确的命令序列来控制程序的流程，易于理解但可能导致复杂的状态管理</li></ul><h2 id="面向接口编程解析"><a class="markdownIt-Anchor" href="#面向接口编程解析"></a> 面向接口编程解析：</h2><p>​面向接口编程（Interface-Oriented Programming，简称IOP）是一种编程范式，它强调使用接口（Interface）作为定义系统组件之间交互的主要方式。在面向接口编程中，接口定义了一组方法规范，但不提供具体的实现。实现这些接口的具体类（或对象）则提供了这些方法的具体行为</p><p>​<strong>面向接口编程的核心思想是解耦</strong>。通过定义清晰的接口，开发者可以独立地设计和实现系统的各个部分，而不必担心其他部分的具体实现细节。</p><p>面向接口编程的特点包括：</p><ol><li><strong>解耦</strong>：系统的不同部分通过接口进行通信，而不是直接依赖于具体的实现类。这使得修改或替换某个部分的实现变得更加容易，而不会影响到其他部分</li><li><strong>模块化</strong>：接口提供了一种模块化的方式，允许开发者将系统划分为独立的模块，每个模块都可以通过接口与其他模块交互</li><li><strong>可扩展性</strong>：由于接口定义了一组操作的契约，新的实现类可以很容易地添加到系统中，而不需要修改现有的代码</li><li><strong>可替换性</strong>：实现了相同接口的不同类可以互换使用，这为系统提供了更高的灵活性</li></ol><p>面向接口编程在面向对象编程（OOP）中尤为重要。在实践中，面向接口编程通常与依赖注入（Dependency Injection）等设计模式结合使用，以进一步增强系统的灵活性和可测试性</p><h2 id="python中实现面向接口编程"><a class="markdownIt-Anchor" href="#python中实现面向接口编程"></a> Python中实现面向接口编程：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 导入abc模块中的抽象方法装饰器、元类和辅助类</span><br><span class="hljs-keyword">from</span> abc <span class="hljs-keyword">import</span> abstractmethod, ABCMeta, ABC<br><br><span class="hljs-comment"># 定义一个抽象基类Component，它不能被实例化</span><br><span class="hljs-comment"># metaclass=ABCMeta表示使用ABCMeta作为元类来创建Component类</span><br><span class="hljs-comment"># 也可以使用简化的语法class Component(ABC):来达到相同的效果</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Component</span>(metaclass=ABCMeta):<br>    <span class="hljs-comment"># 使用abstractmethod装饰器声明bind_data和render为抽象方法</span><br>    <span class="hljs-comment"># 这意味着继承Component的子类必须实现这两个方法</span><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">bind_data</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">render</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">pass</span><br><br><span class="hljs-comment"># 定义ProductListComponent类，它继承自Component抽象基类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductListComponent</span>(<span class="hljs-title class_ inherited__">Component</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">bind_data</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;Apple&#x27;</span>, <span class="hljs-string">&#x27;Orange&#x27;</span>, <span class="hljs-string">&#x27;Banana&#x27;</span>]<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">render</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> self.bind_data():<br>            <span class="hljs-built_in">print</span>(item)<br><br><span class="hljs-comment"># 定义CategoryListComponent类，它同样继承自Component抽象基类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CategoryListComponent</span>(<span class="hljs-title class_ inherited__">Component</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">bind_data</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> [<span class="hljs-string">&#x27;Electronics&#x27;</span>, <span class="hljs-string">&#x27;Furniture&#x27;</span>]<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">render</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> self.bind_data():<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;****<span class="hljs-subst">&#123;item&#125;</span>****&quot;</span>)<br><br>product_list_component = ProductListComponent()<br>product_list_component.render()<br><br>category_list_component = CategoryListComponent()<br>category_list_component.render()<br></code></pre></td></tr></table></figure><p>实际上如果我们在Python中实现了面向接口编程，我们可以使用Python动态语言的特点来调用<code>render</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">render_container</span>(<span class="hljs-params">Components: [Component]</span>) -&gt; <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">for</span> Component <span class="hljs-keyword">in</span> Components:<br>        Component.render()<br><br>components = [product_list_component, category_list_component]<br>render_container(components)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMCV组件1</title>
    <link href="/2024/03/03/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B61/"/>
    <url>/2024/03/03/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/mmcv%E7%BB%84%E4%BB%B61/</url>
    
    <content type="html"><![CDATA[<h1 id="mmcv核心组件filehandler"><a class="markdownIt-Anchor" href="#mmcv核心组件filehandler"></a> MMCV核心组件FileHandler</h1><p>​<strong>注意：在2.0.0版本以后，<code>FileHandler</code>和<code>FileClient</code>的功能已经转到mmengine中了(它们在<code>mmengine.fileio</code>模块中)，但是功能和用法大体不变，导入和使用方式如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 在2.0.0半本以后，mmcv.load 函数已经被移除。在新版本中，</span><br><span class="hljs-comment"># 此功能已经被重新设计和整合到了 mmcv.config 模块中</span><br><span class="hljs-keyword">from</span> mmengine <span class="hljs-keyword">import</span> Config<br>cfg = Config.fromfile(<span class="hljs-string">&quot;/path_to_your_file&quot;</span>)<br><br><span class="hljs-comment"># ，FileClient 类已经被迁移到了 MMEngine 项目中</span><br><span class="hljs-keyword">from</span> mmengine.fileio <span class="hljs-keyword">import</span> FileClient, FileHandler<br><br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;<br><span class="hljs-comment"># 在2.0.0版本以前，使用方式是：</span><br><span class="hljs-keyword">from</span> mmcv.fileio <span class="hljs-keyword">import</span> FileClient<br><span class="hljs-keyword">from</span> mmcv <span class="hljs-keyword">import</span> load<br></code></pre></td></tr></table></figure><h2 id="mmcv-整体概述"><a class="markdownIt-Anchor" href="#mmcv-整体概述"></a> MMCV 整体概述</h2><p>MMCV 从一开始的定位就是提供底层通用组件，故在设计之初就已经考虑到了灵活性和可扩展性，其主要特性是：</p><ul><li>统一可扩展的 io api</li><li>支持非常丰富的图像/视频处理算子</li><li>图片/视频的标注文件可视化</li><li>常用的工具类例如 timer 和 progress bar 等等</li><li>上层框架需要的 hook 机制以及可以直接使用的 runner</li><li>高度灵活的 config 模式和注册器机制</li><li>高效高质量的 cuda operator</li></ul><h2 id="mmcv-核心组件filehandler分析"><a class="markdownIt-Anchor" href="#mmcv-核心组件filehandler分析"></a> MMCV 核心组件FileHandler分析：</h2><p><code>fileio</code> 中有两个核心组件：涉及文件读写的 <code>FileHandler</code> 和文件获取后端 <code>FileClient</code></p><ul><li><code>FileHandler</code> 的作用是对外提供统一的文件读写 API，其根据待读写的文件后缀名自动选择对应的 handler 进行具体操作</li><li><code>FileClient</code> 的作用是对外提供统一的文件内容获取 API，主要用于训练过程中数据的读取，通过用户选择或者自定义不同的 <code>FileClient</code> 后端，可以轻松实现文件缓存、文件加速读取等功能</li></ul><p>以上两个核心组件都是支持可扩展的</p><h3 id="实现逻辑"><a class="markdownIt-Anchor" href="#实现逻辑"></a> 实现逻辑</h3><p>要实现这个功能，<strong>mmcv采用面向接口编程的思想</strong>，核心代码如下：</p><ul><li>在 base 类中定义接口</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> abc <span class="hljs-keyword">import</span> ABCMeta, abstractmethod<br><span class="hljs-comment"># 继承ABCMeta元类，使其无法直接实例化</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BaseFileHandler</span>(metaclass=ABCMeta):<br><br>    <span class="hljs-comment">#@abstractmethod表示子类必须要实现该方法，否则报错</span><br>    <span class="hljs-comment"># 文件读取</span><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">load_from_fileobj</span>(<span class="hljs-params">self, file, **kwargs</span>):<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-comment"># 文件存储，需要传入对象obj和file</span><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_fileobj</span>(<span class="hljs-params">self, obj, file, **kwargs</span>):<br>        <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-comment">#dump成字符串返回，当你不想保存时候使用</span><br><span class="hljs-meta">    @abstractmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_str</span>(<span class="hljs-params">self, obj, **kwargs</span>):<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-comment"># 对外实际上是采用下面两个api</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">load_from_path</span>(<span class="hljs-params">self, filepath, mode=<span class="hljs-string">&#x27;r&#x27;</span>, **kwargs</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filepath, mode) <span class="hljs-keyword">as</span> f:<br>            <span class="hljs-keyword">return</span> self.load_from_fileobj(f, **kwargs)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_path</span>(<span class="hljs-params">self, obj, filepath, mode=<span class="hljs-string">&#x27;w&#x27;</span>, **kwargs</span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filepath, mode) <span class="hljs-keyword">as</span> f:<br>            self.dump_to_fileobj(obj, f, **kwargs)<br></code></pre></td></tr></table></figure><p>上述核心就是先定义几个抽象方法，然后再定义几个对外调用 API 即可。考虑到不同的读写具体子类在进行读写操作时候可能参数不一样，故上述每个方法上面都加了 <code>**kwargs</code> 可变字典参数</p><ul><li>子类实现抽象方法</li></ul><p>以 json 读写为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">JsonHandler</span>(<span class="hljs-title class_ inherited__">BaseFileHandler</span>):<br>    <span class="hljs-comment"># 直接json.load即可</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">load_from_fileobj</span>(<span class="hljs-params">self, file</span>):<br>        <span class="hljs-keyword">return</span> json.load(file)<br>    <span class="hljs-comment"># 直接json.dump即可</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_fileobj</span>(<span class="hljs-params">self, obj, file, **kwargs</span>):<br>        <span class="hljs-comment">#setdefault 是字典的一个内置方法，用于设置字典中键的默认值。当尝试访问字典中不存在的键时</span><br>        <span class="hljs-comment">#如果使用 get 方法，它会返回 None。而 setdefault 方法在键不存在时，</span><br>        <span class="hljs-comment">#会返回默认值并在字典中创建一个新的键值对</span><br>        kwargs.setdefault(<span class="hljs-string">&#x27;default&#x27;</span>, set_default)<br>        <span class="hljs-comment">#json 模块中的 dump 函数用于将Python对象转换为JSON格式的字符串并写入到一个文件中</span><br>        json.dump(obj, file, **kwargs)<br><br>    <span class="hljs-comment"># 直接json.dumps返回格式化的json str</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_str</span>(<span class="hljs-params">self, obj, **kwargs</span>):<br>        kwargs.setdefault(<span class="hljs-string">&#x27;default&#x27;</span>, set_default)<br>        <span class="hljs-keyword">return</span> json.dumps(obj, **kwargs)<br></code></pre></td></tr></table></figure><ul><li>对外读写接口，屏蔽掉具体 handler 子类</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 目前已经提供的handler</span><br>file_handlers = &#123;<br>    <span class="hljs-string">&#x27;json&#x27;</span>: JsonHandler(),<br>    <span class="hljs-string">&#x27;yaml&#x27;</span>: YamlHandler(),<br>    <span class="hljs-string">&#x27;yml&#x27;</span>: YamlHandler(),<br>    <span class="hljs-string">&#x27;pickle&#x27;</span>: PickleHandler(),<br>    <span class="hljs-string">&#x27;pkl&#x27;</span>: PickleHandler()<br>&#125;<br><br><span class="hljs-comment"># 对外统一文件读取接口</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">load</span>(<span class="hljs-params">file, file_format=<span class="hljs-literal">None</span>, **kwargs</span>):<br>    <span class="hljs-comment"># 1 输入参数检查</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(file, Path):<br>        file = <span class="hljs-built_in">str</span>(file)<br>    <span class="hljs-keyword">if</span> file_format <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> is_str(file):<br>        file_format = file.split(<span class="hljs-string">&#x27;.&#x27;</span>)[-<span class="hljs-number">1</span>]<br>    <span class="hljs-keyword">if</span> file_format <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> file_handlers:<br>        <span class="hljs-keyword">raise</span> TypeError(<span class="hljs-string">f&#x27;Unsupported format: <span class="hljs-subst">&#123;file_format&#125;</span>&#x27;</span>)<br><br>    <span class="hljs-comment"># 2 基于文件格式，选择不同的handler</span><br>    handler = file_handlers[file_format]<br><br>    <span class="hljs-comment"># 3 读取文件内容</span><br>    <span class="hljs-keyword">if</span> is_str(file):<br>        obj = handler.load_from_path(file, **kwargs)<br>    <span class="hljs-keyword">elif</span> <span class="hljs-built_in">hasattr</span>(file, <span class="hljs-string">&#x27;read&#x27;</span>):<br>        obj = handler.load_from_fileobj(file, **kwargs)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">raise</span> TypeError(<span class="hljs-string">&#x27;&quot;file&quot; must be a filepath str or a file-object&#x27;</span>)<br>    <span class="hljs-keyword">return</span> obj<br><br><span class="hljs-comment"># 文件写流程也是一样的</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dump</span>(<span class="hljs-params">obj, file=<span class="hljs-literal">None</span>, file_format=<span class="hljs-literal">None</span>, **kwargs</span>):<br></code></pre></td></tr></table></figure><p>那么它的用法（对外接口）就十分简洁了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> mmcv<br><br><span class="hljs-comment"># load data from a file</span><br>data = mmcv.load(<span class="hljs-string">&#x27;test.json&#x27;</span>)<br>data = mmcv.load(<span class="hljs-string">&#x27;test.yaml&#x27;</span>)<br>data = mmcv.load(<span class="hljs-string">&#x27;test.pkl&#x27;</span>)<br><br>mmcv.dump(data, <span class="hljs-string">&#x27;out.pkl&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="自定义文件类型开发"><a class="markdownIt-Anchor" href="#自定义文件类型开发"></a> 自定义文件类型开发：</h2><p>如果你需要的文件格式不在上述列表，如何进行自定义扩展开发呢？这里以读写 .npy 文件为例进行简要代码构建。</p><ul><li>继承 BaseFileHandler，然后实现抽象方法，最后注册到 MMCV 中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">@register_handler(<span class="hljs-params"><span class="hljs-string">&#x27;npy&#x27;</span></span>)</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">NpyHandler</span>(<span class="hljs-title class_ inherited__">BaseFileHandler</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">load_from_fileobj</span>(<span class="hljs-params">self, file, **kwargs</span>):<br>        <span class="hljs-keyword">return</span> np.load(file)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_fileobj</span>(<span class="hljs-params">self, obj, file, **kwargs</span>):<br>        np.save(file, obj)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">dump_to_str</span>(<span class="hljs-params">self, obj, **kwargs</span>):<br>        <span class="hljs-comment"># 实际上这么写没有意义，这里只是举例</span><br>        <span class="hljs-keyword">return</span> obj.tobytes()<br></code></pre></td></tr></table></figure><p>需要特别说明的是 <code>@register_handler('npy')</code>，这是一个装饰器，目的是把我们刚才实现的 handler 注册到 MMCV 中，然后 MMCV 就可以直接找到该 handler 了，装饰器的核心代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">register_handler</span>(<span class="hljs-params">file_formats, **kwargs</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrap</span>(<span class="hljs-params">cls</span>):<br>        <span class="hljs-comment"># 这句话其实核心是：file_handlers[ext] = handler</span><br>        <span class="hljs-comment"># 把我们写的handler类设置到file_handlers的字典中</span><br>        _register_handler(cls(**kwargs), file_formats)<br>        <span class="hljs-keyword">return</span> cls<br><br>    <span class="hljs-keyword">return</span> wrap<br><br><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-comment">#file_handlers变成：</span><br>file_handlers = &#123;<br>    <span class="hljs-string">&#x27;json&#x27;</span>: JsonHandler(),<br>    <span class="hljs-string">&#x27;yaml&#x27;</span>: YamlHandler(),<br>    <span class="hljs-string">&#x27;yml&#x27;</span>: YamlHandler(),<br>    <span class="hljs-string">&#x27;pickle&#x27;</span>: PickleHandler(),<br>    <span class="hljs-string">&#x27;pkl&#x27;</span>: PickleHandler(),<br>    <span class="hljs-string">&#x27;npy&#x27;</span>: NpyHandler()<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MMseg1</title>
    <link href="/2024/02/28/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/MMseg1/"/>
    <url>/2024/02/28/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/MMseg1/</url>
    
    <content type="html"><![CDATA[<h1 id="mmseg教程1"><a class="markdownIt-Anchor" href="#mmseg教程1"></a> MMseg教程(1)</h1><h2 id="配置文件的结构"><a class="markdownIt-Anchor" href="#配置文件的结构"></a> 配置文件的结构：</h2><pre><code class="hljs">config:├─ _base_├    ├─datasets├    ├─models├    └─schedules├─ unet├─ upernet├─ vit├─ ...</code></pre><p>​<code>config</code>文件夹下有各种模型的配置文件夹，各个模型配置文件夹下装有该模型的不同网络，在不同的数据集下的配置，由于配置有很多的相似部分，因此这些配置都继承于在<code>_base_</code>文件夹下的基础配置文件</p><p>​在 <code>config/_base_ </code>文件夹下面有4种基本组件类型： 数据集(dataset)，模型(model)，训练策略(schedule)和运行时的默认设置(default runtime)。许多模型都可以容易地通过组合这些组件进行实现，比如 DeepLabV3，PSPNet。使用 <code>_base_</code> 下的组件构建的配置信息叫做原始配置 (primitive)</p><p>​对于同一个文件夹下的所有配置文件，建议<strong>只有一个</strong>对应的<strong>原始配置文件</strong>。所有其他的配置文件都应该继承自这个原始配置文件，从而保证每个配置文件的最大继承深度为 3</p><p>​就是建议从现有的方法继承。例如，如果在 DeepLabV3 基础上进行了一些修改，用户可以先通过指定 <code>_base_ = ../deeplabv3/deeplabv3_r50-d8_4xb2-40k_cityscapes-512x1024.py</code> 继承基本的 DeepLabV3 结构，然后在配置文件中修改必要的字段</p><h2 id="配置文件命名风格"><a class="markdownIt-Anchor" href="#配置文件命名风格"></a> 配置文件命名风格</h2><p>​遵循以下格式来命名配置文件</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">&#123;algorithm name&#125;<span class="hljs-literal">_</span>&#123;model component names [component1]<span class="hljs-literal">_</span>[component2]<span class="hljs-literal">_</span>[...]&#125;<span class="hljs-literal">_</span>&#123;training settings&#125;<span class="hljs-literal">_</span>&#123;training dataset information&#125;<span class="hljs-literal">_</span>&#123;testing dataset information&#125;<br></code></pre></td></tr></table></figure><p>配置文件的文件名分为五个部分，组成文件名每一个部分和组件之间都用<code>_</code>连接，每个部分或组件中的每个单词都要用<code>-</code>连接。</p><ul><li><code>&#123;algorithm name&#125;</code>: 算法的名称，如 <code>deeplabv3</code>, <code>pspnet</code> 等。</li><li><code>&#123;model component names&#125;</code>: 算法中使用的组件名称，如主干(backbone)、解码头(head)等。例如，<code>r50-d8 </code>表示使用ResNet50主干网络，并使用主干网络的8倍下采样输出作为下一级的输入。</li><li><code>&#123;training settings&#125;</code>: 训练时的参数设置，如 <code>batch size</code>、数据增强(augmentation)、损失函数(loss)、学习率调度器(learning rate scheduler)和训练轮数(epochs/iterations)。例如: <code>4xb4-ce-linearlr-40K</code> 意味着使用4个gpu，每个gpu4个图像，使用交叉熵损失函数(CrossEntropy)，线性学习率调度程序，训练40K iterations。 一些缩写:<ul><li><code>&#123;gpu x batch_per_gpu&#125;</code>: GPU数量和每个GPU的样本数。<code>bN </code>表示每个GPU的batch size为N，如 <code>8xb2</code> 为8个gpu x 每个gpu2张图像的缩写。如果未提及，则默认使用 <code>4xb4 </code>。</li><li><code>&#123;schedule&#125;</code>: 训练计划，选项有<code>20k</code>，<code>40k</code>等。<code>20k </code>和 <code>40k</code> 分别表示20000次迭代(iterations)和40000次迭代(iterations)。</li></ul></li><li><code>&#123;training dataset information&#125;</code>: 训练数据集名称，如 <code>cityscapes </code>， <code>ade20k </code>等，以及输入分辨率。例如: <code>cityscapes-768x768 </code>表示使用 <code>cityscapes</code> 数据集进行训练，输入分辨率为<code>768x768 </code>。</li><li><code>&#123;testing dataset information&#125;</code> (可选): 测试数据集名称。当您的模型在一个数据集上训练但在另一个数据集上测试时，请将测试数据集名称添加到此处。如果没有这一部分，则意味着模型是在同一个数据集上进行训练和测试的</li></ul><h2 id="pspnet-的一个例子"><a class="markdownIt-Anchor" href="#pspnet-的一个例子"></a> PSPNet 的一个例子</h2><p>​我们对使用ResNet50V1c作为主干网络的PSPNet的配置文件作简要说明。要了解更详细的用法和每个模块对应的替换方法，请参阅API文档。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">_base_ = [<br>    <span class="hljs-string">&#x27;../_base_/models/pspnet_r50-d8.py&#x27;</span>, <span class="hljs-string">&#x27;../_base_/datasets/cityscapes.py&#x27;</span>,<br>    <span class="hljs-string">&#x27;../_base_/default_runtime.py&#x27;</span>, <span class="hljs-string">&#x27;../_base_/schedules/schedule_40k.py&#x27;</span><br>] <span class="hljs-comment"># 我们可以在基本配置文件的基础上 构建新的配置文件</span><br>crop_size = (<span class="hljs-number">512</span>, <span class="hljs-number">1024</span>)<br>data_preprocessor = <span class="hljs-built_in">dict</span>(size=crop_size)<br>model = <span class="hljs-built_in">dict</span>(data_preprocessor=data_preprocessor)<br><span class="hljs-comment"># 至此，一个模型就已经配置好了</span><br></code></pre></td></tr></table></figure><p>​其中<code>_base_/models/pspnet_r50-d8.py</code>是使用ResNet50V1c作为主干网络的PSPNet的基本模型配置文件，详情配置去那个文件中详细查看</p><p>要加载和解析它们，我们可以使用<a href="https://github.com/open-mmlab/mmengine">MMEngine</a>实现的<a href="https://mmengine.readthedocs.io/en/latest/tutorials/config.html">Config</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmengine.config <span class="hljs-keyword">import</span> Config<br><br>cfg = Config.fromfile(<span class="hljs-string">&#x27;configs/pspnet/pspnet_r50-d8_4xb2-40k_cityscapes-512x1024.py&#x27;</span>)<br><span class="hljs-built_in">print</span>(cfg.train_dataloader)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;<span class="hljs-string">&#x27;batch_size&#x27;</span>: <span class="hljs-number">2</span>,<br> <span class="hljs-string">&#x27;num_workers&#x27;</span>: <span class="hljs-number">2</span>,<br> <span class="hljs-string">&#x27;persistent_workers&#x27;</span>: <span class="hljs-literal">True</span>,<br> <span class="hljs-string">&#x27;sampler&#x27;</span>: &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;InfiniteSampler&#x27;</span>, <span class="hljs-string">&#x27;shuffle&#x27;</span>: <span class="hljs-literal">True</span>&#125;,<br> <span class="hljs-string">&#x27;dataset&#x27;</span>: &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;CityscapesDataset&#x27;</span>,<br>  <span class="hljs-string">&#x27;data_root&#x27;</span>: <span class="hljs-string">&#x27;data/cityscapes/&#x27;</span>,<br>  <span class="hljs-string">&#x27;data_prefix&#x27;</span>: &#123;<span class="hljs-string">&#x27;img_path&#x27;</span>: <span class="hljs-string">&#x27;leftImg8bit/train&#x27;</span>,<br>   <span class="hljs-string">&#x27;seg_map_path&#x27;</span>: <span class="hljs-string">&#x27;gtFine/train&#x27;</span>&#125;,<br>  <span class="hljs-string">&#x27;pipeline&#x27;</span>: [&#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;LoadImageFromFile&#x27;</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;LoadAnnotations&#x27;</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;RandomResize&#x27;</span>,<br>    <span class="hljs-string">&#x27;scale&#x27;</span>: (<span class="hljs-number">2048</span>, <span class="hljs-number">1024</span>),<br>    <span class="hljs-string">&#x27;ratio_range&#x27;</span>: (<span class="hljs-number">0.5</span>, <span class="hljs-number">2.0</span>),<br>    <span class="hljs-string">&#x27;keep_ratio&#x27;</span>: <span class="hljs-literal">True</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;RandomCrop&#x27;</span>, <span class="hljs-string">&#x27;crop_size&#x27;</span>: (<span class="hljs-number">512</span>, <span class="hljs-number">1024</span>), <span class="hljs-string">&#x27;cat_max_ratio&#x27;</span>: <span class="hljs-number">0.75</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;RandomFlip&#x27;</span>, <span class="hljs-string">&#x27;prob&#x27;</span>: <span class="hljs-number">0.5</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;PhotoMetricDistortion&#x27;</span>&#125;,<br>   &#123;<span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;PackSegInputs&#x27;</span>&#125;]&#125;&#125;<br></code></pre></td></tr></table></figure><p>​<code>cfg </code>是<code>mmengine.config.Config </code>的一个实例。它的接口与dict对象相同，也允许将配置值作为属性访问。更多信息请参见<a href="https://github.com/open-mmlab/mmengine">MMEngine</a>中的<a href="https://mmengine.readthedocs.io/en/latest/tutorials/config.html">config tutorial</a>。</p><p><a href="https://mmsegmentation.readthedocs.io/zh-cn/latest/user_guides/1_config.html">教程1：了解配置文件 — MMSegmentation 1.2.2 文档</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Effective Python note(2)</title>
    <link href="/2024/02/24/coding%E6%8A%80%E5%B7%A7/Eff-py2/"/>
    <url>/2024/02/24/coding%E6%8A%80%E5%B7%A7/Eff-py2/</url>
    
    <content type="html"><![CDATA[<h1 id="effective-python-note2"><a class="markdownIt-Anchor" href="#effective-python-note2"></a> Effective Python note(2)</h1><h2 id="类与继承"><a class="markdownIt-Anchor" href="#类与继承"></a> 类与继承：</h2><h3 id="尽量用辅助类来维护程序的状态而不要用字典和元组"><a class="markdownIt-Anchor" href="#尽量用辅助类来维护程序的状态而不要用字典和元组"></a> 尽量用辅助类来维护程序的状态，而不要用字典和元组</h3><p>​在Python编程中，<strong>当需要在程序中维护状态时，应该优先考虑使用自定义的辅助类（辅助类是指那些主要用于封装数据和行为的类），而不是依赖于内置的字典（<code>dict</code>）或元组（<code>tuple</code>）类型</strong>。这是因为随着程序的复杂性增加，使用字典和元组可能会导致代码难以理解和维护</p><p><strong>主要考虑两点</strong>：</p><ul><li><strong>代码的可维护性</strong>：随着需求的变化，如果使用字典和元组来维护状态，可能需要对数据结构进行复杂的修改，这会导致代码难以理解和维护</li><li><strong>辅助类的优势</strong>：使用辅助类可以提供更明确的接口和更好的封装。当状态变得复杂时，将数据结构拆解为多个辅助类，可以创建一个抽象层，使得代码更加清晰和易于维护</li></ul><p>假设我们需要管理一个学生的成绩，包括学生的名字和他们的成绩：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">grades = &#123;&#125;<br>grades[<span class="hljs-string">&#x27;Alice&#x27;</span>] = <span class="hljs-number">95</span><br>grades[<span class="hljs-string">&#x27;Bob&#x27;</span>] = <span class="hljs-number">85</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">report_grade</span>(<span class="hljs-params">name, score</span>):<br>    grades[name] = score<br><br><span class="hljs-comment"># 计算平均成绩</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">average_grade</span>():<br>    total = <span class="hljs-built_in">sum</span>(grades.values())<br>    count = <span class="hljs-built_in">len</span>(grades)<br>    <span class="hljs-keyword">return</span> total / count <span class="hljs-keyword">if</span> count <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 使用辅助类的示例</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentGradebook</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.grades = &#123;&#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">add_student</span>(<span class="hljs-params">self, name, score</span>):<br>        self.grades[name] = score<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">report_grade</span>(<span class="hljs-params">self, name, score</span>):<br>        self.grades[name] = score<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">average_grade</span>(<span class="hljs-params">self</span>):<br>        total = <span class="hljs-built_in">sum</span>(self.grades.values())<br>        count = <span class="hljs-built_in">len</span>(self.grades)<br>        <span class="hljs-keyword">return</span> total / count <span class="hljs-keyword">if</span> count <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 使用辅助类来管理成绩</span><br>gradebook = StudentGradebook()<br>gradebook.add_student(<span class="hljs-string">&#x27;Alice&#x27;</span>, <span class="hljs-number">95</span>)<br>gradebook.add_student(<span class="hljs-string">&#x27;Bob&#x27;</span>, <span class="hljs-number">85</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Average grade:&quot;</span>, gradebook.average_grade())<br></code></pre></td></tr></table></figure><h3 id="以-classmethod-形式的多态去通用地构建对象"><a class="markdownIt-Anchor" href="#以-classmethod-形式的多态去通用地构建对象"></a> 以 <code>@classmethod</code> 形式的多态去通用地构建对象</h3><p>​建议提倡在Python中使用<code>@classmethod</code>来实现类方法的多态性。由于Python不像C++一样，同一个类可以有不同的构造函数，Python只有<code>__init__</code>构造，因此使用<code>@classmethod</code></p><p>​<strong>通用构造器（Generic Constructor）</strong>：使用<code>@classmethod</code>定义的类方法可以作为通用构造器，它允许你为类定义一个统一的创建接口，而不需要为每个子类单独定义构造器。<strong>这在创建具有不同配置或行为的实例时特别有用</strong></p><p>​假设我们有一个<code>Shape</code>类，它是一个抽象的图形基类。我们想要创建一个通用的构造器，它可以根据不同的参数创建不同类型的子类实例，比如<code>Circle</code>和<code>Rectangle</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Shape</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name</span>):<br>        self.name = name<br><br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_shape</span>(<span class="hljs-params">cls, shape_type, **kwargs</span>):<br>        <span class="hljs-keyword">if</span> shape_type == <span class="hljs-string">&#x27;circle&#x27;</span>:<br>            <span class="hljs-keyword">return</span> Circle(**kwargs)<br>        <span class="hljs-keyword">elif</span> shape_type == <span class="hljs-string">&#x27;rectangle&#x27;</span>:<br>            <span class="hljs-keyword">return</span> Rectangle(**kwargs)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;Unknown shape type: <span class="hljs-subst">&#123;shape_type&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Circle</span>(<span class="hljs-title class_ inherited__">Shape</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, radius</span>):<br>        <span class="hljs-built_in">super</span>().__init__(<span class="hljs-string">&#x27;Circle&#x27;</span>)<br>        self.radius = radius<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Rectangle</span>(<span class="hljs-title class_ inherited__">Shape</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, width, height</span>):<br>        <span class="hljs-built_in">super</span>().__init__(<span class="hljs-string">&#x27;Rectangle&#x27;</span>)<br>        self.width = width<br>        self.height = height<br><br><span class="hljs-comment"># 使用通用构造器创建实例</span><br>circle = Shape.create_shape(<span class="hljs-string">&#x27;circle&#x27;</span>, radius=<span class="hljs-number">5</span>)<br>rectangle = Shape.create_shape(<span class="hljs-string">&#x27;rectangle&#x27;</span>, width=<span class="hljs-number">4</span>, height=<span class="hljs-number">6</span>)<br><br><span class="hljs-built_in">print</span>(circle.name, circle.radius)  <span class="hljs-comment"># 输出: Circle 5</span><br><span class="hljs-built_in">print</span>(rectangle.name, rectangle.width, rectangle.height)  <span class="hljs-comment"># 输出: Rectangle 4 6</span><br></code></pre></td></tr></table></figure><h3 id="继承-collectionsabc以实现自定义的容器类型"><a class="markdownIt-Anchor" href="#继承-collectionsabc以实现自定义的容器类型"></a> 继承 <code>collections.abc</code>以实现自定义的容器类型</h3><p>​需要创建自定义的容器类型时，应该继承自<code>collections.abc</code>模块中的抽象基类（Abstract Base Classes，简称ABC）。这些ABC提供了各种容器类型（如<code>Sequence</code>、<code>Mapping</code>、<code>Set</code>等）的标准接口和行为。通过继承这些ABC，你的自定义类将自动获得这些标准行为，同时确保了与Python内置容器类型相似的接口一致性。</p><ul><li><strong>自定义容器的挑战</strong>：在Python中，创建自定义容器类型通常需要实现一系列特殊的方法（如<code>__len__</code>、<code>__getitem__</code>、<code>__setitem__</code>等），这些方法定义了容器的基本行为。手动实现这些方法可能会非常繁琐，并且容易出错。</li><li><strong>利用ABC的优势</strong>：通过继承<code>collections.abc</code>中的ABC，你可以确保你的自定义类遵循了正确的接口。如果遗漏了某个方法，Python解释器会在你尝试实例化该类时抛出错误，从而帮助你发现问题。此外，一旦你的类实现了ABC要求的所有方法，它就可以被视为一个合法的容器类型，并且可以使用Python内置的函数和方法，如<code>len()</code>、<code>in</code>操作符等。</li></ul><p>​为了创建一个自定义的二叉树数据结构，并且希望它能够像Python内置的序列类型（如列表）那样被处理，我们可以继承<code>collections.abc</code>中的<code>Sequence</code>抽象基类。这样，我们的二叉树就可以使用<code>len()</code>、<code>__getitem__()</code>等内置方法，同时保持二叉树的特性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> collections.abc <span class="hljs-keyword">import</span> <span class="hljs-type">Sequence</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TreeNode</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, value</span>):<br>        self.value = value<br>        self.left = <span class="hljs-literal">None</span><br>        self.right = <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BinaryTree</span>(<span class="hljs-title class_ inherited__">Sequence</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, root=<span class="hljs-literal">None</span></span>):<br>        self.root = root<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> + <span class="hljs-built_in">len</span>(self.root.left) + <span class="hljs-built_in">len</span>(self.root.right)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">raise</span> IndexError(<span class="hljs-string">&quot;Tree is empty&quot;</span>)<br>        <span class="hljs-keyword">return</span> self._get_element_at_index(index)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_element_at_index</span>(<span class="hljs-params">self, index</span>):<br>        <span class="hljs-keyword">if</span> index == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> self.root.value<br>        left_len = <span class="hljs-built_in">len</span>(self.root.left)<br>        <span class="hljs-keyword">if</span> index &lt; left_len:<br>            <span class="hljs-keyword">return</span> self.root.left._get_element_at_index(index)<br>        <span class="hljs-keyword">elif</span> index == left_len:<br>            <span class="hljs-keyword">return</span> self.root.value<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.root.right._get_element_at_index(index - left_len - <span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">insert</span>(<span class="hljs-params">self, value</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            self.root = TreeNode(value)<br>        <span class="hljs-keyword">else</span>:<br>            self._insert_into_tree(self.root, value)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_insert_into_tree</span>(<span class="hljs-params">self, node, value</span>):<br>        <span class="hljs-keyword">if</span> value &lt; node.value:<br>            <span class="hljs-keyword">if</span> node.left <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                node.left = TreeNode(value)<br>            <span class="hljs-keyword">else</span>:<br>                self._insert_into_tree(node.left, value)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> node.right <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                node.right = TreeNode(value)<br>            <span class="hljs-keyword">else</span>:<br>                self._insert_into_tree(node.right, value)<br><br><span class="hljs-comment"># 使用自定义的二叉树</span><br>tree = BinaryTree()<br>tree.insert(<span class="hljs-number">5</span>)<br>tree.insert(<span class="hljs-number">3</span>)<br>tree.insert(<span class="hljs-number">7</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(tree))  <span class="hljs-comment"># 输出: 3</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">0</span>])   <span class="hljs-comment"># 输出: 5</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">1</span>])   <span class="hljs-comment"># 输出: 3</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">2</span>])   <span class="hljs-comment"># 输出: 7</span><br></code></pre></td></tr></table></figure><p>​在这个例子中，<code>BinaryTree</code>类继承自<code>Sequence</code>，它提供了<code>__len__</code>和<code>__getitem__</code>方法，使得二叉树可以像序列一样被访问</p><h3 id="还有一些小建议"><a class="markdownIt-Anchor" href="#还有一些小建议"></a> 还有一些小建议：</h3><ul><li>只在使用 Mix-in 组件制作工具类时进行多重继承</li><li>多用 public 属性(<code>_name</code>)，少用 private 属性(<code>__name</code>)</li><li>用<code>super</code>去初始化父类</li></ul><h2 id="元类及属性"><a class="markdownIt-Anchor" href="#元类及属性"></a> 元类及属性：</h2><p>​又复杂又难看又用不着，以后有时间再更</p>]]></content>
    
    
    <categories>
      
      <category>booknotes</category>
      
      <category>Effective Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Effective Python note(1)</title>
    <link href="/2024/02/23/coding%E6%8A%80%E5%B7%A7/Eff-py1/"/>
    <url>/2024/02/23/coding%E6%8A%80%E5%B7%A7/Eff-py1/</url>
    
    <content type="html"><![CDATA[<h1 id="effective-python-note1"><a class="markdownIt-Anchor" href="#effective-python-note1"></a> Effective Python note(1)</h1><h2 id="pythonic"><a class="markdownIt-Anchor" href="#pythonic"></a> Pythonic：</h2><h3 id="pep8-的一些重要规范"><a class="markdownIt-Anchor" href="#pep8-的一些重要规范"></a> PEP8 的一些重要规范：</h3><ul><li>每行字符数不超过79</li><li>长表达式换行时，首行后每行额外缩进4个空格</li><li>文件中函数与类间用两个空行分隔</li><li>同一类内各方法间用一个空行隔开</li><li>函数、变量及属性命名使用小写字母并以下划线相连，如 <code>lowercase_underscore</code></li><li>受保护实例属性以单下划线开头，例如 <code>_leading_underscore</code></li><li>私有实例属性以双下划线开头，例如 <code>__double_leading_underscore</code></li><li>类与异常名采用每个单词首字母大写的格式，例如 <code>CapitalizedWord</code></li><li>模块级别常量全用大写字母拼写，单词间以下划线连接，如 <code>ALL_CAPS</code></li><li>类方法首个参数应命名为 <code>cls</code> 表示该类自身</li><li>如必须相对导入，则明确书写：<code>from . import foo</code></li><li>文件中的import语句按顺序分为三部分：标准库模块、第三方模块和自定义模块。各部分内部按照模块名称字母顺序排列import语句</li><li>检查<code>somelist</code>是否为非空值（如[1]或’hi’）时，遵循此原则；非空值在条件判断中默认视为True</li><li>用<code>zip</code>函数同时遍历两个迭代器</li></ul><p><a href="www.python.org/dev/peps/pep-0008">更多规范查询官方手册，最好全部都看一遍</a></p><h3 id="bytes-和-str区别与操作"><a class="markdownIt-Anchor" href="#bytes-和-str区别与操作"></a> bytes 和 str区别与操作</h3><ol><li><strong>类型本质</strong>：<ul><li><code>str</code>（字符串）：表示文本数据，存储的是Unicode编码的字符序列。Python 3中所有文本字符串默认都是Unicode编码的</li><li><code>bytes</code>（字节串）：表示二进制数据，存储的是一个8位字节的序列。它通常用于网络传输、磁盘文件读写等场景，可能包含图像、音频等原始非文本数据</li></ul></li><li><strong>内容形式</strong>：<ul><li><code>str</code> 类型的数据由一系列Unicode码点组成，每个码点对应一个字符</li><li><code>bytes</code> 类型的数据是由一连串的整数（0-255）组成的序列，这些整数代表了原始字节值</li></ul></li><li><strong>操作方式</strong>：<ul><li><code>str</code> 字符串可以进行各种文本操作，如连接、查找、替换等，并支持多语言字符</li><li><code>bytes</code> 字节串不能直接进行文本处理操作，但可以执行二进制操作，如按字节切片、比较等</li></ul></li><li><strong>转换关系</strong>：<ul><li>从文本到二进制：通过编码（encoding），将 <code>str</code> 转换为 <code>bytes</code>，例如使用 <code>my_str.encode('utf-8')</code> 将文本转换成UTF-8编码的字节串</li><li>从二进制到文本：通过解码（decoding），将 <code>bytes</code> 转换为 <code>str</code>，例如使用 <code>my_bytes.decode('utf-8')</code> 将UTF-8编码的字节串转换回文本</li></ul></li></ol><p>​<strong>Python 3 不允许隐式地混合 <code>str</code> 和 <code>bytes</code> 数据，比如你不能拼接字符串和字节流，也不能在字节串里搜索字符串，必须显式地进行类型转换后才能进行相应的操作。编写Python程序时，一定要先把编码和解码操作放在界面外围，程序的核心部分使用<code>str</code>数据类型，且不要对编码做任何假设</strong></p><p>例如我们需要编写接受<code>str</code>或<code>bytes</code>，并总是返回<code>str</code> 的 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">to_str</span>(<span class="hljs-params">Cbytes_or_str</span>):<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bytes_or_str，<span class="hljs-built_in">bytes</span>) :<br>Value = bytes_or_str.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>Value = bytes_or_str<br><span class="hljs-keyword">return</span> value<br></code></pre></td></tr></table></figure><h3 id="合理利用try-except-else-finally结构中的每个代码块"><a class="markdownIt-Anchor" href="#合理利用try-except-else-finally结构中的每个代码块"></a> 合理利用<code>try except else finally</code>结构中的每个代码块</h3><ul><li><p><strong>try</strong> 块用于测试一段代码是否存在错误</p></li><li><p><strong>except</strong> 块用于处理错误</p></li><li><p><strong>else</strong> 块用于在没有错误时执行代码</p></li><li><p><strong>finally</strong> 块用于无论 <strong>try</strong> 和 <strong>except</strong> 块的结果如何都要执行的代码</p></li></ul><p>​不论<code>try</code>块是否发生异常，均可通过<code>try/finally</code>复合语句中的<code>finally</code>块执行清理工作。若在成功执行<code>try</code>块后，希望在<code>finally</code>块的清理代码之前执行某些操作，则可将这些操作置于<code>else</code>块中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">divide_json</span>(<span class="hljs-params">Cpath</span>):<br>    handle = <span class="hljs-built_in">open</span>(Cpath, <span class="hljs-string">&quot;r+&quot;</span>)<br>    <span class="hljs-comment"># 可能引发 IOError</span><br>    <span class="hljs-keyword">try</span>:<br>        data = handle.read()        <span class="hljs-comment"># 可能引发 UnicodeDecodeError</span><br>        op = json.loads(data) <span class="hljs-comment"># 可能引发 ValueError</span><br>        value = op[<span class="hljs-string">&#x27;numerator&#x27;</span>] / op[<span class="hljs-string">&#x27;denominator&#x27;</span>] <span class="hljs-comment"># 可能引发 ZeroDivisionError</span><br>    <span class="hljs-keyword">except</span> ZeroDivisionError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> UNDEFINED<br>    <span class="hljs-keyword">else</span>:<br>        op[<span class="hljs-string">&#x27;result&#x27;</span>] = value<br>        result = json.dumps(op)<br>        handle.seek(<span class="hljs-number">0</span>)<br>        handle.write(result)  <span class="hljs-comment"># 可能引发 IOError</span><br>    <span class="hljs-keyword">finally</span>:<br>        handle.close()  <span class="hljs-comment"># 总会执行</span><br>    <span class="hljs-keyword">return</span> value<br></code></pre></td></tr></table></figure><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数：</h2><ul><li>尽量使用异常来表示特殊情况，而不是返回None</li><li>慎用<code>nonlocal</code>语句，因为它像<code>global</code>那样容易被滥用。建议仅在非常简单的函数中使用这种机制。<code>nonlocal</code>的副作用很难追踪</li><li>考虑使用生成器来改写直接返回列表的函数</li><li>使用只能以关键字形式指定的参数，以确保代码明晰</li></ul><h3 id="args与kargs参数使用"><a class="markdownIt-Anchor" href="#args与kargs参数使用"></a> <code>*args</code>与<code>**kargs</code>参数使用：</h3><ul><li>令函数接受可选的位置参数（由于这种参数习惯上写作<code>*args</code>，所以又被称为<code>star args</code>或星号参数），能够使代码更加清晰，并减少 visual noise</li><li>尽量只在函数参数个数少的情况下使用这两个可变长参数</li><li>在已经接受<code>*args</code>参数的函数上面继续添加位置参数，可能会产生难以排查的bug</li></ul><p>例如，要定义一个<code>log</code>函数以便打印一些调试信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">message, *values</span>):<br>    <span class="hljs-comment"># 如果没有values，直接打印message</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> values:<br>        <span class="hljs-built_in">print</span>(message)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 将values中的元素转换为字符串并用逗号连接</span><br>        values_str = <span class="hljs-string">&#x27;, &#x27;</span>.join(<span class="hljs-built_in">str</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> values)<br>        <span class="hljs-comment"># 打印message和values_str</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;message&#125;</span>: <span class="hljs-subst">&#123;values_str&#125;</span>&#x27;</span>)<br><br><span class="hljs-comment"># 使用示例</span><br>log(<span class="hljs-string">&#x27;My numbers are&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br>log(<span class="hljs-string">&#x27;Hi there&#x27;</span>)<br>&gt;&gt;&gt;<br>My numbers are: <span class="hljs-number">1</span>, <span class="hljs-number">2</span><br>Hi there<br></code></pre></td></tr></table></figure><p>在这个例子中，<code>log</code>函数通过<code>*values</code>参数可以接受任意数量的额外参数，这些参数在打印时会被格式化为一个列表。这种使用<code>*args</code>的方式使得函数调用更加灵活，同时也提高了代码的可读性</p><p>​但是这种参数会带来两个问题：</p><ul><li>变长参数在传给函数时，总是要先转化成元组（tuple）。这意味着，如果用带有 * 操作符的生成器作为参数来调用这种函数，那么 Python 就必须要先把该生成器完整地迭代一轮，并将生成器所生成的每一个值都存储起来。这可能会消耗大量内存，并导致程序崩溃</li><li>如果以后要给函数添加新的可选位置参数，那就必须修改原来调用该函数的那些旧代码。若是只给参数列表前方添加新的可选位置参数，而不更新现有的调用代码，那么可能会产生难以调试的错误</li></ul><p>​对于第二个问题，我们可以使用<code>**kargs</code>参数或者<code>*</code>符号解决：</p><p>​在Python3中，定义<strong>的参数之间加上<code>*</code>，它表示在该位置之前的所有参数必须是位置参数，而<code>*</code>之后的所有参数必须是关键字参数</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_function</span>(<span class="hljs-params">positional_arg1, positional_arg2, *, keyword_arg1, keyword_arg2</span>):<br>    <span class="hljs-built_in">print</span>(positional_arg1, positional_arg2, keyword_arg1, keyword_arg2)<br><br><span class="hljs-comment"># 调用函数时，positional_arg1 和 positional_arg2 是位置参数，</span><br><span class="hljs-comment"># keyword_arg1 和 keyword_arg2 是关键字参数。</span><br>my_function(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, keyword_arg1=<span class="hljs-string">&#x27;c&#x27;</span>, keyword_arg2=<span class="hljs-string">&#x27;d&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>booknotes</category>
      
      <category>Effective Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-glob</title>
    <link href="/2024/02/21/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Python-glob/"/>
    <url>/2024/02/21/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/Python-glob/</url>
    
    <content type="html"><![CDATA[<h1 id="python-标准库glob-模块"><a class="markdownIt-Anchor" href="#python-标准库glob-模块"></a> <code>Python</code> 标准库——<code>glob</code> 模块</h1><p><code>glob</code> 是 Python 标准库中的一个模块，它提供了一种简单的方式来查找符合特定模式的文件路径。这个模块特别适用于在文件系统中搜索文件，它支持多种通配符：</p><ul><li><code>*</code>：匹配任意数量（包括零个）的字符</li><li><code>?</code>：匹配任意单个字符</li><li><code>[]</code>：匹配指定范围内的字符，例如 <code>[a-z]</code> 匹配任意小写字母，<code>[0-9]</code> 匹配任意数字</li><li><code>[!...]</code>：匹配不在指定范围内的字符</li></ul><h2 id="glob-模块的具体使用"><a class="markdownIt-Anchor" href="#glob-模块的具体使用"></a> <code>glob</code> 模块的具体使用</h2><h3 id="glob模块方法属性"><a class="markdownIt-Anchor" href="#glob模块方法属性"></a> glob模块方法属性：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dir</span>(glob)<br>[<span class="hljs-string">&#x27;__all__&#x27;</span>, <span class="hljs-string">&#x27;__builtins__&#x27;</span>, <span class="hljs-string">&#x27;__cached__&#x27;</span>, <span class="hljs-string">&#x27;__doc__&#x27;</span>, <span class="hljs-string">&#x27;__file__&#x27;</span>, <span class="hljs-string">&#x27;__loader__&#x27;</span>,<br><span class="hljs-string">&#x27;__name__&#x27;</span>, <span class="hljs-string">&#x27;__package__&#x27;</span>, <span class="hljs-string">&#x27;__spec__&#x27;</span>, <span class="hljs-string">&#x27;_glob0&#x27;</span>, <span class="hljs-string">&#x27;_glob1&#x27;</span>, <span class="hljs-string">&#x27;_glob2&#x27;</span>, <span class="hljs-string">&#x27;_iglob&#x27;</span>,<br><span class="hljs-string">&#x27;_ishidden&#x27;</span>, <span class="hljs-string">&#x27;_isrecursive&#x27;</span>, <span class="hljs-string">&#x27;_iterdir&#x27;</span>, <span class="hljs-string">&#x27;_rlistdir&#x27;</span>, <span class="hljs-string">&#x27;escape&#x27;</span>, <span class="hljs-string">&#x27;fnmatch&#x27;</span>,<br><span class="hljs-string">&#x27;glob&#x27;</span>, <span class="hljs-string">&#x27;glob0&#x27;</span>, <span class="hljs-string">&#x27;glob1&#x27;</span>, <span class="hljs-string">&#x27;has_magic&#x27;</span>, <span class="hljs-string">&#x27;iglob&#x27;</span>, <span class="hljs-string">&#x27;magic_check&#x27;</span>,<br><span class="hljs-string">&#x27;magic_check_bytes&#x27;</span>, <span class="hljs-string">&#x27;os&#x27;</span>, <span class="hljs-string">&#x27;re&#x27;</span>]<br>&gt;&gt;&gt;<br></code></pre></td></tr></table></figure><p>glob模块常用的两个方法有： <code>glob.glob() &amp; glob.iglob</code>，下面详细介绍</p><ol><li><p><code>glob.glob(pathname, *, recursive=False)</code>： 这个函数返回一个列表，包含了与 <code>pathname</code> 参数指定的模式匹配的所有文件路径。如果不指定 <code>recursive</code> 参数或者将其设置为 <code>False</code>，则只匹配当前目录下的文件。如果设置为 <code>True</code>，则会递归地搜索所有子目录</p><p>参数解释：</p><ul><li><code>pathname</code>：要匹配的文件路径模式，可以包含通配符</li><li><code>recursive</code>（可选）：布尔值，指定是否递归搜索子目录。默认为 <code>False</code></li></ul><p>返回值：</p><ul><li>一个列表，包含了所有匹配的文件路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> glob<br><span class="hljs-comment"># 匹配当前目录下所有以 &#x27;.txt&#x27; 结尾的文件</span><br>txt_files = glob.glob(<span class="hljs-string">&#x27;*.txt&#x27;</span>)<br><span class="hljs-comment"># 在路径模式 &#x27;data/**/*.csv&#x27; 中，第一个 * 匹配 data 目录下的任何文件或子目录，而 ** 则指示 glob 继续在这些子目录中递归搜索，直到找到所有 .csv 文件，如果采用这写法，recursive=True可以不写</span><br>csv_files = glob.glob(<span class="hljs-string">&#x27;data/**/*.csv&#x27;</span>, recursive=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></li><li><p><code>glob.iglob(pathname, *, recursive=False)</code>： 这个函数与 <code>glob.glob()</code> 类似，但它返回的是一个迭代器，而不是一个列表。这在处理大量文件时非常有用，因为它不需要一次性加载所有匹配的文件路径，从而节省内存。</p><p>参数和返回值与 <code>glob.glob()</code> 相同，只是返回的是一个迭代器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> glob<br><span class="hljs-comment"># 使用迭代器递归匹配 &#x27;data&#x27; 目录下所有 &#x27;.csv&#x27; 文件</span><br><span class="hljs-keyword">for</span> csv_file <span class="hljs-keyword">in</span> glob.iglob(<span class="hljs-string">&#x27;data/**/*.csv&#x27;</span>, recursive=<span class="hljs-literal">True</span>):<br>    <span class="hljs-built_in">print</span>(csv_file)<br></code></pre></td></tr></table></figure></li></ol><p>配合 Python 中 str 加法的语法糖，这两个函数可以用得十分简洁高效，例如加载所有保存的上下采样为 B 和 A 的 <code>A+B.pth</code> 模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">down_sampling = [<span class="hljs-string">&quot;avg-pooling&quot;</span>, <span class="hljs-string">&quot;max-pooling&quot;</span>, <span class="hljs-string">&quot;dysample&quot;</span>]<br>up_sampling = [<span class="hljs-string">&quot;bilinear&quot;</span>, <span class="hljs-string">&quot;max-unpooling&quot;</span>, <span class="hljs-string">&quot;dysample&quot;</span>]<br><span class="hljs-keyword">for</span> down <span class="hljs-keyword">in</span> down_sampling:<br>    <span class="hljs-keyword">for</span> up <span class="hljs-keyword">in</span> up_sampling:<br>        model = torch.load(down + <span class="hljs-string">&quot;+&quot;</span> + up + <span class="hljs-string">&quot;.pth&quot;</span>)<br>        <span class="hljs-comment"># inference...</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch多GPU并行</title>
    <link href="/2024/02/21/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-multiGPU/"/>
    <url>/2024/02/21/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-multiGPU/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch多gpu并行"><a class="markdownIt-Anchor" href="#pytorch多gpu并行"></a> Pytorch多GPU并行</h1><p>​在PyTorch中，多GPU并行确实可以分为数据并行（Data Parallelism）和模型并行（Model Parallelism），这两种并行策略针对不同的并行化需求</p><ol><li>数据并行（Data Parallelism）： 数据并行是最常见的并行策略，它通过将数据集分割成多个小batch，然后在多个GPU上并行处理这些部分。每个GPU上运行相同的模型副本，独立地计算前向传播和反向传播，最后将结果汇总。在PyTorch中，这可以通过<code>torch.nn.DataParallel</code>或<code>torch.nn.parallel.DistributedDataParallel</code>（DDP）来实现</li><li>模型并行（Model Parallelism）： 模型并行是将模型的不同部分分配到不同的GPU上。这种方法适用于模型太大，单个GPU无法容纳整个模型的情况。模型的不同层或模块被放置在不同的GPU上，每个GPU负责计算模型的一部分。这种方法需要更复杂的通信机制来协调不同GPU之间的计算。在PyTorch中，模型并行可以通过自定义的通信逻辑来实现，或者使用专门的库如<code>fairseq</code></li></ol><p>数据并行又主要分为三种方式：</p><ol><li>DP（Data Parallel）：在单个机器上的多个GPU上并行训练模型，这种方法适用于模型大小适中，单个GPU可以容纳整个模型的情况。</li><li>DDP（Distributed Data Parallel）：用于在多台机器上进行数据并行训练的高级API。这种方法适用于需要大规模分布式训练的场景，如大型模型或大数据集</li><li>FSDP（Fully Sharded Data Parallel）： Fully Sharded Data Parallel（FSDP）是Facebook AI Research (FAIR) 提出的一种新的并行策略，旨在解决DDP在大规模分布式训练中的通信瓶颈问题。FSDP通过将模型的权重分成多个部分（shards），并在不同的GPU上进行训练，从而减少了通信开销</li></ol><p>​平时用的对多的就是DP和DDP方式，同时，<strong>在Pytorch官方网站上已经推荐使用DDP去全面取代DP方式</strong>，即使在单个机器上，DDP运行效率仍然比DP要高。下面简单介绍一下DP与DDP的使用：</p><h2 id="数据并行dp"><a class="markdownIt-Anchor" href="#数据并行dp"></a> 数据并行(DP):</h2><p>​DP最大的好处就是简单，平时在小数据集和小模型实验的时候方便，默认情况下，<code>nn.DataParallel</code>会使用所有可用的GPU，用法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.nn.DataParallel(module, device_ids=<span class="hljs-literal">None</span>, output_device=<span class="hljs-literal">None</span>, dim=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>device_ids</code>（可选）：一个整数列表，指定了要使用的 GPU 设备的 ID。如果为 <code>None</code>（默认值），则使用所有可用的 GPU</li><li><code>output_device</code>（可选）：指定输出结果应该被发送到哪个设备。如果为 <code>None</code>（默认值），则使用 <code>device_ids</code> 中的第一个设备</li><li><code>dim</code>（可选）：指定在哪个维度上进行数据并行。默认为 <code>0</code>，即在批次维度上进行并行</li></ul><p>返回值：</p><ul><li>返回一个 <code>DataParallel</code> 对象，它封装了传入的 <code>module</code>。这个对象可以像普通模块一样使用，但它会在多个 GPU 上并行执行模型的前向和后向传播。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-comment"># 设置有哪些GPU是&quot;可见&quot;的，然后下面使用这些所有的可见GPU</span><br><span class="hljs-comment"># 第一个编号代表着主卡的编号</span><br>os.environ[<span class="hljs-string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="hljs-string">&quot;0,1,2,3&quot;</span><br><span class="hljs-keyword">import</span> torch<br><br>model = CreateModel(*args)<br><span class="hljs-keyword">if</span> torch.cuda.device_count() &gt; <span class="hljs-number">1</span>: <span class="hljs-comment"># 值为4</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Let&#x27;s us &quot;</span>, torch.cuda.device_count(), <span class="hljs-string">&quot;GPUs&quot;</span>)<br><span class="hljs-comment"># 使用DP:</span><br>    model = nn.DataParallel(model)<br>    <br>    <span class="hljs-comment"># 保存的是model.module而不是model。因为model其实是DDP model</span><br>    <span class="hljs-comment"># 参数是被`model=DDP(model)包起来的</span><br>    torch.save(model.module)<br></code></pre></td></tr></table></figure><p>​注意：<code>os.environ['CUDA_VISIBLE_DEVICES']</code> 必须在<code>import [torch]</code>之前，否则设置是无法生效的！</p><h2 id="分布式数据并行ddp"><a class="markdownIt-Anchor" href="#分布式数据并行ddp"></a> 分布式数据并行(DDP):</h2><p>​DDP通信算法是一个名为环形通信算法，他不需要等待每个GPU全部都计算完成，他没有主卡的概念，这使得计算过程中没有&quot;bubble&quot;，更专业的内容查看李沐的动手深度学习</p><p>​先看几个概念：</p><ul><li><p>world：代表全部计算设备，world_size就是全部GPU的数量</p></li><li><p>node：物理节点，就是一台机器（一个服务器），节点内部可以有多个GPU(一台机器有多卡)</p></li><li><p>rank &amp; local_rank：用于表示进程的序号，用于进程间通信。每一个进程对应了一个rank，rank=0的进程就是master进程</p></li></ul><p>​例如有两台服务器，第一台服务器有4卡，第二台服务器有3卡，那么<code>world_size=5  node=1,2  rank=[0,1,2,3,4,5,6]  local_rank=[0,1,2,3],[0,1,2]</code></p><p>​DDP的用法如下：</p><h4 id="1首先进行ddp初始化"><a class="markdownIt-Anchor" href="#1首先进行ddp初始化"></a> 1.首先进行DDP初始化：</h4><p><code>torch.distributed.init_process_group</code> 是分布式训练中用于初始化进程组的函数。这个函数设置了分布式环境，允许不同的进程之间进行通信</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.distributed.init_process_group(backend, init_method=<span class="hljs-literal">None</span>, timeout=datetime.timedelta(seconds=<span class="hljs-number">1800</span>), world_size=<span class="hljs-literal">None</span>, rank=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>backend</code>：指定分布式通信的后端，如 <code>'nccl'</code>（用于多GPU环境）、<code>'gloo'</code>（用于CPU或单GPU环境）或 <code>'mpi'</code></li><li><code>init_method</code>（可选）：指定初始化方法的URL或文件路径。默认为 <code>None</code>，表示使用环境变量 <code>MASTER_ADDR</code> 和 <code>MASTER_PORT</code> 来初始化</li><li><code>timeout</code>（可选）：设置初始化过程的超时时间，默认为1800秒（30分钟）</li><li><code>world_size</code>（可选）：参与分布式训练的总进程数。默认为 <code>-1</code>，表示从环境变量中自动获取</li><li><code>rank</code>（可选）：当前进程的排名。默认为 <code>-1</code>，表示从环境变量中自动获取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch.distributed <span class="hljs-keyword">as</span> dist<br><br>dist.init_process_group(backend=<span class="hljs-string">&#x27;nccl&#x27;</span>, init_method=<span class="hljs-string">&#x27;env://&#x27;</span>, world_size=num_processes, rank=process_rank)<br></code></pre></td></tr></table></figure><h4 id="2准备数据dataloader和sampler需要在ddp初始化之后进行"><a class="markdownIt-Anchor" href="#2准备数据dataloader和sampler需要在ddp初始化之后进行"></a> 2.准备数据dataloader和sampler，需要在DDP初始化之后进行：</h4><p>​<code>DistributedSampler</code> 是一个特殊的采样器（Sampler），它用于确保在多个进程（通常是多个 GPU 或多个节点）之间均匀且不重叠地分配数据集。这样，每个进程只处理数据集的一个子集，从而实现数据的并行处理，因此将原先的<code>dataloader</code>换为<code>DistributedSampler</code>即可，<strong>注意：batch_size指的是每个进程下的batch_size</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">train_sampler = torch.utils.data.distributed.DistributedSampler(my_trainset)<br></code></pre></td></tr></table></figure><h4 id="3构造model模型"><a class="markdownIt-Anchor" href="#3构造model模型"></a> 3.构造model模型：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 获取当前进程的 GPU 排名（local_rank）</span><br>local_rank = dist.get_rank()<span class="hljs-comment"># 是当前进程！！！</span><br><span class="hljs-comment"># 设置当前进程使用的 GPU</span><br>torch.cuda.set_device(local_rank)<br><span class="hljs-comment"># 创建模型并移动到对应的 GPU</span><br>model = model.to(local_rank)<br></code></pre></td></tr></table></figure><h4 id="4如果需要load模型则要在构造ddp模型之前且只需要在master上加载就行了"><a class="markdownIt-Anchor" href="#4如果需要load模型则要在构造ddp模型之前且只需要在master上加载就行了"></a> 4.如果需要Load模型，则要在构造DDP模型之前，且只需要在master上加载就行了：</h4><p>​“master” 通常指的是负责初始化分布式环境和协调其他进程的进程。在分布式训练中，所有进程（或称为 “workers”）需要协同工作，而 “master” 进程则扮演着启动和配置这些进程的角色，<strong>注意是主进程不是主机，没有主机</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> ckpt_path <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>    model.load_state_dict(torch.load(ckpt_path))<br></code></pre></td></tr></table></figure><h4 id="5构造ddp-model-模型"><a class="markdownIt-Anchor" href="#5构造ddp-model-模型"></a> 5.构造DDP model 模型：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">model = DDP(model, device_ids=[local_rank], output_device=local_rank)<br></code></pre></td></tr></table></figure><h4 id="6要在构造ddp-model之后才能用model初始化optimizer"><a class="markdownIt-Anchor" href="#6要在构造ddp-model之后才能用model初始化optimizer"></a> 6.要在构造DDP model之后，才能用model初始化optimizer：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">optimizer = torch.optim.SGD(model.parameters(), lr=<span class="hljs-number">0.001</span>)<br></code></pre></td></tr></table></figure><h4 id="7loss-函数也要转到指定设备"><a class="markdownIt-Anchor" href="#7loss-函数也要转到指定设备"></a> 7.loss 函数也要转到指定设备：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">loss_func = nn.CrossEntropyLoss().to(local_rank)<br></code></pre></td></tr></table></figure><h4 id="8网络训练"><a class="markdownIt-Anchor" href="#8网络训练"></a> 8.网络训练：</h4><p>​设置DDP sampler的epoch，<code>DistributedSampler</code>需要这个来指定shuffle方式，通过维持各个进程之间的相同随机数种子使不同进程能获得同样的shuffle效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">trainloader.sampler.set_epoch(epoch)<br></code></pre></td></tr></table></figure><h4 id="9保存模型"><a class="markdownIt-Anchor" href="#9保存模型"></a> 9.保存模型：</h4><p>​保存模型的时候，<strong>和DP模式一样，有一个需要注意的点：保存的是<code>model.module</code>而不是<code>model</code>。因为model其实是DDP model，参数是被<code>model=DDP(model)</code>包起来的。并且只需要在进程0上保存一次就行了，避免多次保存重复的东西</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span>:<br>    torch.save(model.module.state_dict(), <span class="hljs-string">&quot;%d.ckpt&quot;</span> % epoch)<br></code></pre></td></tr></table></figure><h2 id="ddp代码示例"><a class="markdownIt-Anchor" href="#ddp代码示例"></a> DDP代码示例：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torchvision<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-comment"># 新增：</span><br><span class="hljs-keyword">import</span> torch.distributed <span class="hljs-keyword">as</span> dist<br><span class="hljs-keyword">from</span> torch.nn.parallel <span class="hljs-keyword">import</span> DistributedDataParallel <span class="hljs-keyword">as</span> DDP<br><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ToyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(ToyModel, self).__init__()<br>        self.conv = nn.Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">return</span> self.conv(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_dataset</span>():<br>    transform = torchvision.transforms.Compose([<br>        torchvision.transforms.ToTensor(),<br>        torchvision.transforms.Normalize((<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>), (<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>))<br>    ])<br>    my_trainset = torchvision.datasets.CIFAR10(root=<span class="hljs-string">&#x27;./data&#x27;</span>, train=<span class="hljs-literal">True</span>, <br>        download=<span class="hljs-literal">True</span>, transform=transform)<br><br>    train_sampler = torch.utils.data.distributed.DistributedSampler(my_trainset)<br>    <span class="hljs-comment"># batch_size指的是每个进程下的batch_size</span><br>    trainloader = torch.utils.data.DataLoader(my_trainset, <br>        batch_size=<span class="hljs-number">16</span>, num_workers=<span class="hljs-number">2</span>, sampler=train_sampler)<br>    <span class="hljs-keyword">return</span> trainloader<br>    <br>parser = argparse.ArgumentParser()<br>parser.add_argument(<span class="hljs-string">&quot;--local_rank&quot;</span>, default=-<span class="hljs-number">1</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>)<br>FLAGS = parser.parse_args()<br>local_rank = FLAGS.local_rank<br><br><span class="hljs-comment"># DDP backend初始化</span><br>torch.cuda.set_device(local_rank)<br>dist.init_process_group(backend=<span class="hljs-string">&#x27;nccl&#x27;</span>)  <span class="hljs-comment"># nccl是GPU设备上最快、最推荐的后端</span><br><br>trainloader = get_dataset()<br>model = ToyModel().to(local_rank)<br><br>ckpt_path = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> ckpt_path <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>    model.load_state_dict(torch.load(ckpt_path))<br><br>    <br>model = DDP(model, device_ids=[local_rank], output_device=local_rank)<br><br><span class="hljs-comment"># 要在构造DDP model之后，才能用model初始化optimizer</span><br>optimizer = torch.optim.SGD(model.parameters(), lr=<span class="hljs-number">0.001</span>)<br>loss_func = nn.CrossEntropyLoss().to(local_rank)<br><br>model.train()<br>iterator = tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>))<br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> iterator:<br>    <span class="hljs-comment"># DDP：设置sampler的epoch，</span><br>    <span class="hljs-comment"># DistributedSampler需要这个来指定shuffle方式，</span><br>    <span class="hljs-comment"># 通过维持各个进程之间的相同随机数种子使不同进程能获得同样的shuffle效果。</span><br>    trainloader.sampler.set_epoch(epoch)<br>    <span class="hljs-comment"># 这部分与原来完全一致了。</span><br>    <span class="hljs-keyword">for</span> data, label <span class="hljs-keyword">in</span> trainloader:<br>        data, label = data.to(local_rank), label.to(local_rank)<br>        optimizer.zero_grad()<br>        prediction = model(data)<br>        loss = loss_func(prediction, label)<br>        loss.backward()<br>        iterator.desc = <span class="hljs-string">&quot;loss = %0.3f&quot;</span> % loss<br>        optimizer.step()<br><br>    <span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span>:<br>        torch.save(model.module.state_dict(), <span class="hljs-string">&quot;%d.ckpt&quot;</span> % epoch)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Segformer(2)</title>
    <link href="/2024/02/18/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/Segformer-2/"/>
    <url>/2024/02/18/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/Segformer-2/</url>
    
    <content type="html"><![CDATA[<h1 id="segformer-论文详解"><a class="markdownIt-Anchor" href="#segformer-论文详解"></a> Segformer 论文详解：</h1><p>​在SegFormer提出时，transformer已经开始在图像领域展露头角。在此之前，SETR最早将transformer结构引入到了语义分割任务中。SETR采用ViT作为backbone，并结合多个CNN decoder来放大特征分辨率。但是SETR具有两个局限性：</p><ul><li>没有利用 multi-scale 特征</li><li>具有非常高的计算消耗</li></ul><p>为了解决上述问题，pyramid vision Transformer (PVT) 被提出。PVT 具有金字塔结构，使得分割结果有进一步的提升。但是包括 PVT、Swin、Twins 等新兴方法都是在改进 encoder，但是忽略了 decoder 的改进。</p><p>与以前的方法相比，SegFormer 同时考虑了效率、准确性和鲁棒性，在三个数据集上取得了 SOTA 的效果，作者重新设计了 encoder 和 decoder，主要创新点包括：</p><ul><li>利用多尺度特征图的同时，提出了一种新型的**无位置编码（position-encoding-free）**分层变压器编码器（position-encoding-free 带来了将模型变为 end-to-end 的好处，即不用将输入图片插值以符合固定大小的尺寸）</li><li>一种轻量级的 All-MLP（多层感知机） decoder设计，不仅结合了多尺度的特征信息，而且简单高效</li></ul><h2 id="网络设计"><a class="markdownIt-Anchor" href="#网络设计"></a> 网络设计：</h2><p><img src="/2024/02/18/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/Segformer-2/1.png" alt="Segformer网络"></p><p>​整个网络结构使用了经典的 encoder-decoder 设计，从整体结构看，将 encoder 各个阶段产生的不同尺度的特征图经过不同倍数的上采样后 concat 到一起去，这样网络极像经典的 FCN 网络（是否也能提出像 UNET 的 Segformer 呢?）。下面详解网络各个部分</p><h3 id="overlap-patch-embedding"><a class="markdownIt-Anchor" href="#overlap-patch-embedding"></a> Overlap Patch Embedding：</h3><p>Encoder 部分由一连串的 Mix Transformer encoders (MiT) 模块构成，Transformer encoder layer 本质上是 Effecient Self-Attention+Norm+MixFFN 的组合。作者设计了从 MiT-B0 到 MiT-B5 多个 encoder，每个 encoder 结构相同但是大小不同。</p><p>与 ViT 不同，SegFormer 的 encoder 部分可以生成 multi-scale 的特征，提高了语义分割的性能。给定一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">H×W×3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 的图像输入，会得到一系列不同分辨率大小的特征: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><msup><mn>2</mn><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><mfrac><mi>H</mi><msup><mn>2</mn><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\frac{H}{2^{i+1}} \times \frac{H}{2^{i+1}} \times C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C_i \in \{1,2,3,4\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">}</span></span></span></span> ,且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_{i+1}&gt;C_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>encoder 中大量采用了多头自注意力模块，也就是： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=Softmax(\frac{QK^T}{\sqrt{d_{head}}})V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.627473em;vertical-align:-0.538em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.089473em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 。其中还Q、K、V有同样的大小N×C，N=H×W。在此基础上，作者添加了如下的改进：通过reshape+Linear层的方式减小了特征的长度，也就是N。其中一个主要的参数就是R。公式如下：</p><p>这样做的主要目的就是为了减小<strong>计算复杂度。</strong></p><p>为了获取multi-scale的多层特征，例如将特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_1(\frac{H}{4}\times\frac{W}{4}\times C_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 转化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>8</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>8</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_2(\frac{H}{8}\times\frac{W}{8}\times C_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，作者设计了一种overlapped的patch merge方法。之所以patch之间要存在overlap，主要是为了保证空间上的语意连贯性。这个模块可以简单的通过一个Kernel=7，Stride=4，Padding=3的卷积层实现。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>segformer(1)</title>
    <link href="/2024/02/17/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/segformer-1/"/>
    <url>/2024/02/17/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/segformer-1/</url>
    
    <content type="html"><![CDATA[<h1 id="segformer-代码结构分析"><a class="markdownIt-Anchor" href="#segformer-代码结构分析"></a> Segformer 代码结构分析</h1><h2 id="mmsegmentation-算法库的整体框架"><a class="markdownIt-Anchor" href="#mmsegmentation-算法库的整体框架"></a> MMSegmentation 算法库的整体框架</h2><p>​MMSegmentation 是 OpenMMLab 开源的基于 PyTorch 实现的功能强大的语义分割工具箱，MMSegmentation 的主要特性如下：</p><ul><li>丰富的语义分割模型： 已支持 11 种主干网络和 34 种算法，例如常用模型 FCN， PSPNet 和 DeepLabV3；Transformer 模型，Swin Transformer、Segmenter 和 SegFormer； Real-Time 实时分割模型， ICNet、BiSeNet 和 STDC 等；以及最近流行的网络 ConvNeXt 和 MAE。</li><li>大量开箱即用的模型权重：在 16 个常用的语义分割数据集上提供了 590 个训练好的模型。</li><li>统一的性能评估框架：优化和统一了训练和测试的流程，方便公平比较各个模型在特定任务上的表现。</li></ul><h3 id="mmsegmentation-目录结构"><a class="markdownIt-Anchor" href="#mmsegmentation-目录结构"></a> MMSegmentation 目录结构</h3><p>按照代码目录下的文件夹，MMSegmentation 代码库主要可以包含四个部分：</p><p>（1）<code>./tools</code> 包括了调用 MMSegmentation 作为训练和测试入口的 <code>./tools/train.py</code> 和 <code>./tools/test.py</code>，<strong>预训练模型和数据集准备的转换脚本，以及部署和可视化相关的脚本</strong></p><p>详细介绍可见 Github 里的<a href="https://github.com/open-mmlab/mmsegmentation/blob/master/docs/zh_cn/useful_tools.md">文档</a></p><p>（2） <code>./configs</code> 包括了各个算法的配置文件、存放常用的数据集配置、基础模型以及训练策略的基配置文件 <code>./configs/_base_</code></p><p>（3）<code>./mmseg</code> 里面是 MMSegmentation 的算法库，包括核心组件、数据集处理、分割模型代码和面向用户的 API 接口</p><p>（4）<code>./data</code> 指的是存放数据集的路径，在原本的代码库中没有这个文件夹。用户只需指定正确的文件夹路径即可使用数据</p><p>下面是详细的 MMSegmentation 的算法库目录结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># MMSegmentation 算法库目录结构的主要部分 </span><br>mmsegmentation <br>   | <br>   |- configs                        <span class="hljs-comment"># 配置文件 </span><br>   |     |- _base_                   <span class="hljs-comment">## 基配置文件 </span><br>   |     |     |- datasets             <span class="hljs-comment">### 数据集相关配置文件 </span><br>   |     |     |- models               <span class="hljs-comment">### 模型相关配置文件 </span><br>   |     |     |- schedules            <span class="hljs-comment">### 训练日程如优化器，学习率等相关配置文件 </span><br>   |     |     |- default_runtime.py   <span class="hljs-comment">### 运行相关的默认的设置 </span><br>   |     |- swin                     <span class="hljs-comment">## 各个分割模型的配置文件，会引用 _base_ 的配置并做修改  </span><br>   |     |- ...                         <br>   |- data                           <span class="hljs-comment"># 原始及转换后的数据集文件 </span><br>   |- mmseg  <br>   |     |- core                     <span class="hljs-comment">## 核心组件 </span><br>   |     |     |- evaluation           <span class="hljs-comment">### 评估模型性能代码 </span><br>   |     |- datasets                 <span class="hljs-comment">## 数据集相关代码 </span><br>   |     |     |- pipelines            <span class="hljs-comment">### 数据预处理 </span><br>   |     |     |- samplers             <span class="hljs-comment">### 数据集采样代码 </span><br>   |     |     |- ade.py               <span class="hljs-comment">### 各个数据集准备需要的代码 </span><br>   |     |     |- ... <br>   |     |- models                    <span class="hljs-comment">## 分割模型具体实现代码 </span><br>   |     |     |- backbones             <span class="hljs-comment">### 主干网络 </span><br>   |     |     |- decode_heads          <span class="hljs-comment">### 解码头 </span><br>   |     |     |- losses                <span class="hljs-comment">### 损失函数 </span><br>   |     |     |- necks<br>   |     |     |- segmentors            <span class="hljs-comment">### 构建完整分割网络的代码 </span><br>   |     |     |- utils                 <span class="hljs-comment">### 构建模型时的辅助工具 </span><br>   |     |- apis                      <span class="hljs-comment">## high level 用户接口，在这里调用 ./mmseg/ 内各个组件 </span><br>   |     |     |- train.py              <span class="hljs-comment">### 训练接口（侧重 python 编程式训练）</span><br>   |     |     |- test.py               <span class="hljs-comment">### 测试接口 </span><br>   |     |     |- ... <br>   |     |- ops                       <span class="hljs-comment">## cuda 算子（即将迁移到 mmcv 中）</span><br>   |     |- utils                     <span class="hljs-comment">## 辅助工具 </span><br>   |- tools <br>   |     |- model_converters          <span class="hljs-comment">## 各个主干网络预训练模型转 key 脚本 </span><br>   |     |- convert_datasets          <span class="hljs-comment">## 各个数据集准备转换脚本</span><br>   |     |- train.py                  <span class="hljs-comment">## 训练脚本（侧重 python 命令行式训练）</span><br>   |     |- test.py                   <span class="hljs-comment">## 测试脚本</span><br>   |     |- ...                       <br>   |- ... <br></code></pre></td></tr></table></figure><p>MMSegmentation 的算法库有 3 个关键组件：</p><p>1.<code>./mmseg/apis/</code>，用于训练和测试的接口</p><p>2.<code>./mmseg/models/</code>，用于分割网络模型的具体实现</p><p>3.<code>./mmseg/datasets/</code>，用于数据集处理</p><p>本文我们主要介绍算法模型相关的代码，因此<strong>涉及内容主要在 <code>./mmseg/models</code> 里面</strong></p><h3 id="mmsegmentation-模型实现"><a class="markdownIt-Anchor" href="#mmsegmentation-模型实现"></a> MMSegmentation 模型实现</h3><p>​MMSegmentation 中将语义分割模型定义为 <strong>segmentor</strong>， 一般包括 <strong>backbone、neck、head、loss</strong>4 个核心组件（ 4 个组件不是每个算法都需要的），每个模块的功能如下：</p><p>​MMSegmentation 里面的<strong>分割器框架可以分为 “Encoder Decoder” 结构和 “Cascade Encoder Decoder” 结构</strong>。 “Cascade Encoder Decoder” 的解码部分不是单独的解码头，而是<strong>级联式的 2 个或多个解码头，前一个解码头的输出作为后一个解码头的输入。</strong></p><p><img src="/2024/02/17/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/segformer-1/v2-a71127059ced6cdc5242925f948fda56_1440w.webp" alt="img"></p><p>​关于分割器 segmentor 的训练和测试的基本逻辑，以语义分割经典的 “Encoder Decoder” 结构为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">EncoderDecoder</span>(<span class="hljs-title class_ inherited__">BaseSegmentor</span>): <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">...</span>): <br>        <span class="hljs-comment"># 构建 backbone、neck 和 head </span><br>        self.backbone = build_backbone(backbone) <br>        <span class="hljs-keyword">if</span> neck <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>: <br>            self.neck = build_neck(neck) <br>        self._init_decode_head(decode_head) <br>        self._init_auxiliary_head(auxiliary_head) <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_train</span>(<span class="hljs-params">...</span>):  <br>        <span class="hljs-comment"># 利用 backbone+neck 进行特征提取 </span><br>        x = self.extract_feat(img) <br>        losses = <span class="hljs-built_in">dict</span>() <br>        <span class="hljs-comment"># decode head 输出预测特征图并计算出 loss </span><br>        loss_decode = self._decode_head_forward_train(x, img_metas, <br>                                                      gt_semantic_seg) <br>        losses.update(loss_decode) <br>        <span class="hljs-comment"># auxiliary heads 输出预测特征图并计算出 loss </span><br>        <span class="hljs-keyword">if</span> self.with_auxiliary_head: <br>            loss_aux = self._auxiliary_head_forward_train( <br>                x, img_metas, gt_semantic_seg) <br>            losses.update(loss_aux) <br>        <span class="hljs-keyword">return</span> losses <br> <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">simple_test</span>(<span class="hljs-params">...</span>): <br>        <span class="hljs-comment"># 调用 inference 函数，对输入图片做全图或者滑动窗口的推理，得到 logits 值</span><br>        seg_logit = self.inference(img, img_meta, rescale) <br>        <span class="hljs-comment"># 做 argmax 得到预测的 prediction mask </span><br>        seg_pred = seg_logit.argmax(dim=<span class="hljs-number">1</span>) <br> <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">aug_test</span>(<span class="hljs-params">...</span>): <br>        ... <br></code></pre></td></tr></table></figure><p><code>EncoderDecoder</code> 里面分别定义了训练和测试的接口，训练时调用 <code>forward_train()</code> 返回一个 dict，包含各种 loss ，测试时则会调用 <code>simple_test()</code> 或者测试时数据增广的 <code>aug_test()</code>，只返回预测的分割结果。</p><p>训练时预测结果并计算 loss 的主要逻辑是在 <code>_decode_head_forward_train</code> 中实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">_decode_head_forward_train</span>(<span class="hljs-params">...</span>): <br>    <span class="hljs-comment"># 调用每个 head 自身的 forward_train 方法, 并计算出 loss </span><br> losses = <span class="hljs-built_in">dict</span>() <br>    loss_decode = self.decode_head.forward_train(x, img_metas, <br>                                                 gt_semantic_seg, <br>                                                 self.train_cfg) <br> <br>    losses.update(add_prefix(loss_decode, <span class="hljs-string">&#x27;decode&#x27;</span>)) <br>    <span class="hljs-comment"># 返回 </span><br>    <span class="hljs-keyword">return</span> losses <br></code></pre></td></tr></table></figure><p>对于不同的 head，都可以抽象为：<code>seg_logits = self.forward(inputs)</code> ，即：<strong>网络前传得到预测的 logtis 值，然后再计算各个 head 的对应 loss</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_train</span>(<span class="hljs-params">...</span>): <br> seg_logits = self.forward(inputs) <br>    losses = self.losses(seg_logits, gt_semantic_seg) <br>    <span class="hljs-keyword">return</span> losses <br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">losses</span>(<span class="hljs-params">self, seg_logit, seg_label</span>): <br> loss = <span class="hljs-built_in">dict</span>() <br>    seg_logit = resize( <span class="hljs-comment"># 将预测得到的 logits 值 resize 成原图大小 </span><br>        <span class="hljs-built_in">input</span>=seg_logit, <br>        size=seg_label.shape[<span class="hljs-number">2</span>:], <br>        mode=<span class="hljs-string">&#x27;bilinear&#x27;</span>, <br>        align_corners=self.align_corners) <br>    .... <br>    <span class="hljs-keyword">for</span> loss_decode <span class="hljs-keyword">in</span> losses_decode: <span class="hljs-comment"># 分别计算这个 decode head 中的各个 loss </span><br>        <span class="hljs-keyword">if</span> loss_decode.loss_name <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> loss: <br>            loss[loss_decode.loss_name] = loss_decode( <br>                seg_logit, <br>                seg_label, <br>                weight=seg_weight, <br>                ignore_index=self.ignore_index) <br>        <span class="hljs-keyword">else</span>: <br>            loss[loss_decode.loss_name] += loss_decode( <br>                seg_logit, <br>                seg_label, <br>                weight=seg_weight, <br>                ignore_index=self.ignore_index) <br>    .... <br>    <span class="hljs-keyword">return</span> loss <br></code></pre></td></tr></table></figure><p>接下来，我们详细介绍分割器 segmentor 里4 个核心组件：backbone， neck，head，和 loss</p><h4 id="backbone"><a class="markdownIt-Anchor" href="#backbone"></a> <strong>Backbone</strong></h4><p>目前 MMSegmengtation 中已经集成了大部分主干网络，具体见文件 <code>./mmseg/models/backbones/</code>、</p><p>**通常定义的&quot;主干网络&quot; 是指从上游任务（如 ImageNet ）预训练，然后用于多个下游任务（如目标检测、实例分割、语义分割、姿态估计）中的网络，**而在 <code>./mmseg/models/backbones</code> 里主干网络的定义有所不同，会把一些分割算法的网络结构也作为&quot;主干网络&quot;，如 UNet、 FastSCNN、CGNet、ICNet、BiSeNetV1/V2、ERFNet、STDC</p><p>其中最常用的是 ResNet v1c 系列和 Vision Transformer 系列。如果你需要对骨架进行扩展，可以继承上述网络，然后通过注册器机制注册使用。一个典型用法为 <code>./configs/_base_/models/segmenter_vit-b16_mask.py</code> 里面的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">checkpoint = <span class="hljs-string">&#x27;https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segmenter/vit_base_p16_384_20220308-96dfe169.pth&#x27;</span>  <span class="hljs-comment"># noqa </span><br><span class="hljs-comment"># model settings </span><br>model = <span class="hljs-built_in">dict</span>( <br>    <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;EncoderDecoder&#x27;</span>, <br>    pretrained=checkpoint, <span class="hljs-comment"># 加载的预训练模型，这里为 Google Research提供的由 JAX 训练框架得到的 Vision Transformer </span><br>    backbone=<span class="hljs-built_in">dict</span>( <br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;VisionTransformer&#x27;</span>, <span class="hljs-comment"># 骨架类名，后面的参数都是该类的初始化参数 </span><br>        img_size=(<span class="hljs-number">512</span>, <span class="hljs-number">512</span>), <br>        patch_size=<span class="hljs-number">16</span>, <br>        in_channels=<span class="hljs-number">3</span>, <br>        embed_dims=<span class="hljs-number">768</span>, <br>        num_layers=<span class="hljs-number">12</span>, <br>        num_heads=<span class="hljs-number">12</span>, <br>        drop_path_rate=<span class="hljs-number">0.1</span>, <br>        attn_drop_rate=<span class="hljs-number">0.0</span>, <br>        drop_rate=<span class="hljs-number">0.0</span>, <br>        final_norm=<span class="hljs-literal">True</span>, <br>        norm_cfg= <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;LN&#x27;</span>, eps=<span class="hljs-number">1e-6</span>, requires_grad=<span class="hljs-literal">True</span>), <br>        with_cls_token=<span class="hljs-literal">True</span>, <br>        interpolate_mode=<span class="hljs-string">&#x27;bicubic&#x27;</span>, <br>    ), <br></code></pre></td></tr></table></figure><p>这里使用了 MMCV 中的<a href="https://link.zhihu.com/?target=https%3A//github.com/open-mmlab/mmcv/blob/master/docs/zh_cn/understand_mmcv/registry.md">模块注册机制</a>，通过修改配置文件的 type ，可以使用在 MMSegmentation 已经实现的 backbone 模型。此外，还可以使用 MMClassification 里面的更多主干网络，如 ShuffleNet、EfficientNet 等，可根据 <code>./configs/convnext</code> 里面 ConvNeXt 的实现方式，详细的方式可以参考： <a href="https://zhuanlan.zhihu.com/p/436865195">MMDet居然能用MMCls的Backbone？论配置文件的打开方式</a></p><p>​backbone， neck，head，和 loss可以同理解读</p><p>​如果把这东西看成一个库的话，会感觉这东西很难用，我想要自定义自己的模型的话，按照官方教程的说法，我需要在mmseg的底层代码中增加文件，创建一个新的文件 mmseg/models/backbones/mobilenet.py，这意味着我每次开发一个新模型都需要把整个mmseg文件包带上，而不能直接import底层的代码调用api，而且不能让我自己实例化模型，训练推理。<a href="http://xn--train-2b3hw13edzh593cq3cvx3k.xn--pytest-j76j.py">必须使用它的train.py和test.py</a>…</p><p>​因此不应该把它视为一个库，而是一种代码模板，从这点来看，它的整个框架结构和可拓展性都是很好的，下面我们去看Segformer论文代码：</p><h2 id="segformer-官方论文代码"><a class="markdownIt-Anchor" href="#segformer-官方论文代码"></a> Segformer 官方论文代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash">├─ configs<br>│    ├─ _base_<br>│    │    ├─ datasets<br>│    │    ├─ models<br>│    │    ├─ schedules<br>│    │    └─ default_runtime.py<br>│    ├─ dmnet<br>│    ├─ dnlnet<br>│    └─ fastscnn<br>│  ... <br>├─ demo<br>├─ docker<br>├─ docs<br>│   └─ tutorials<br>├─ local_configs<span class="hljs-comment"># 稍微特殊的目录，用于覆盖 configs 中对应部分的配置</span><br>│    ├─ segformer<br>│    │    ├─ B0<br>│    │    ├─ B1<br>│    │    ...<br>│    │    └─ B5<br>│    └─ _base_<br>│       ├─ datasets<br>│       ├─ models<br>│       └─ schedules<br>├─ mmseg<br>│    ├─ apis<br>│    │    ├─ inference.py<br>│    │    ├─ test.py<br>│    │    └─ train.py<br>│    ├─ core<br>│    │    ├─ evaluation<br>│    │    ├─ seg<br>│    │    │  └─ sampler<br>│    │    └─ utils<br>│    ├─ datasets<br>│    │    ├─ pipelines<br>│    │    ├─ ...<br>│    │    └─ ade.py<br>│    ├─ models<br>│    │    ├─backbones<br>│    │    ├─decode_heads<br>│    │    ├─losses<br>│    │    ├─necks<br>│    │    ├─segmentors<br>│    │    └─utils<br>│    ├─ops<br>│    └─utils<br>├─ requirements<br>├─ resources<br>├─ tests<br>│    ├─test_data<br>│    ├─test_models<br>│    └─test_utils<br>└─ tools<br>     └─convert_datasets<br></code></pre></td></tr></table></figure><p>​可以看出来这个目录就是按照上面 mmseg 目录模板来进行的，每个部分的功能都可以参照上面 mmseg 目录注释部分。特别的这里有一个 <code>local_configs</code> 文件夹值得一提，它的存在是如下考虑的：</p><p>​在实际使用中，用户可能会从<code>configs</code>文件夹中复制一个预定义的配置文件到<code>local_configs</code>文件夹，并根据需要进行修改。这样，用户可以保留原始的默认配置，同时在 <code>local_configs</code> 中进行个性化设置，而不会影响到原始的配置文件。<code>local_configs</code> 文件夹中的内容通常会覆盖 <code>configs</code> 文件夹中的对应配置。在许多深度学习框架和项目中，<code>local_configs</code>用于存放本地用户自定义的配置文件，这些文件允许用户根据自己的需求对模型的训练、推理或其他相关参数进行调整</p><p>​当项目运行时，它会首先查找<code>local_configs</code>文件夹中的配置文件，如果找到了与项目运行相关的配置文件，那么这些文件中的设置会优先被使用。如果<code>local_configs</code>中没有相应的配置文件，或者用户想要使用默认的配置，那么项目会回退到<code>configs</code>文件夹中的默认配置</p><h2 id="segformer-程序复现"><a class="markdownIt-Anchor" href="#segformer-程序复现"></a> Segformer 程序复现：</h2><p>先参照论文官方 github 仓库将代码copy下来，再安装依赖库：详情查看 <code>requirements.txt</code> 文档，mmcv 安装参照：<a href="https://github.com/open-mmlab/mmcv">open-mmlab/mmcv: OpenMMLab Computer Vision Foundation</a></p><h3 id="程序修改"><a class="markdownIt-Anchor" href="#程序修改"></a> 程序修改：</h3><p>​根据上面对各个部分内容作用的分析，我们只需要修改 <code>mmseg/datasets/corresponding_daaset.py  tools  locol_configs</code> 这三个部分即可：</p><ul><li><p>本文我采用原论文中ADE20K数据集进行训练，于是修改 <code>mmseg/datasets/voc.py</code> 的步骤就可以省略了，不过也可以按照 ADE20K 数据集中 <code>objects.txt</code> 文档检查一下 <code>SegFormer-master/mmseg/datasets/ade.py</code> 中配置信息是否正确：<img src="/2024/02/17/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/segformer-1/image-20240217160404076.png" alt="image-20240217160404076" style="zoom:50%;"></p></li><li><p>如果是单卡训练，需要修改在 <code>mmseg/models/decode_heads/segformer_head.py</code> 中BatchNorm 方式</p></li><li><p>训练过程为了减少训练 epoch 的次数，采用了再预训练模型上继续训练的方式进行，</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>progressive-bar</title>
    <link href="/2024/02/09/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/progressive-bar/"/>
    <url>/2024/02/09/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/progressive-bar/</url>
    
    <content type="html"><![CDATA[<h1 id="python-进度条模块"><a class="markdownIt-Anchor" href="#python-进度条模块"></a> Python 进度条模块</h1><p>​过年水一篇</p><p>​Python 中有几个流行的进度条模块，它们可以帮助在执行长时间运行的任务时提供进度反馈。一些常用的进度条模块有 tqdm，progress，alive-pprogress，PySimpleGUI 等。本篇文章主要整理一下 tqdm 的使用方法：</p><h2 id="tqdmrangei-使用"><a class="markdownIt-Anchor" href="#tqdmrangei-使用"></a> <code>tqdm(range(i))</code> 使用：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>)):<br>    time.sleep(<span class="hljs-number">.01</span>)   <span class="hljs-comment">#进度条每0.01s前进一次，总时间为1000*0.01=10s </span><br><span class="hljs-comment"># ---------------运行结果------------------</span><br><span class="hljs-number">100</span>%|██████████| <span class="hljs-number">1000</span>/<span class="hljs-number">1000</span> [<span class="hljs-number">00</span>:<span class="hljs-number">10</span>&lt;<span class="hljs-number">00</span>:<span class="hljs-number">00</span>, <span class="hljs-number">93.21</span>it/s]  <br></code></pre></td></tr></table></figure><p><strong><code>tqdm</code> 的 <code>trange</code> 方法</strong>： <code>trange</code> 是 <code>tqdm</code> 提供的一个方便函数，它返回一个迭代器， <code>trange(i)</code> 等价于 <code>tqdm(range(i))</code></p><p>当然有更好看的进度条，使用 <code>from tqdm.rich import tqdm</code> 可以得到一个彩色的美化过的进度条，<code>from tqdm.tk import tqdm</code> 可以得到一个基于 tkiter 的进度条</p><h2 id="面向对象的-tqdm"><a class="markdownIt-Anchor" href="#面向对象的-tqdm"></a> 面向对象的 tqdm：</h2><ol><li><p><strong>创建 <code>tqdm</code> 对象</strong>： 你可以创建一个 <code>tqdm</code> 对象，<strong>传入你想要迭代的可迭代对象</strong>，并可选地提供一些参数，如总迭代次数、描述信息等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 创建一个进度条对象</span><br>pbar = tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>), desc=<span class="hljs-string">&quot;Processing&quot;</span>)<br><span class="hljs-comment"># 创建一个进度条对象，包装一个范围对象，使用 trange 函数</span><br>pbar = tqdm.trange(<span class="hljs-number">100</span>, desc=<span class="hljs-string">&quot;Counting&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p><strong>迭代 <code>tqdm</code> 对象</strong>： 你可以像迭代普通迭代器一样迭代 <code>tqdm</code> 对象，进度条会自动更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pbar:<br>    <span class="hljs-comment"># 在这里执行你的任务</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure></li><li><p><strong>更新进度条</strong>： 如果你需要手动更新进度条，可以使用 <code>update</code> 方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> tqdm(total=<span class="hljs-number">100</span>) <span class="hljs-keyword">as</span> pbar:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-comment"># 执行一些耗时的操作</span><br>        time.sleep(<span class="hljs-number">0.1</span>)<br>        pbar.update(<span class="hljs-number">10</span>)  <span class="hljs-comment"># 更新进度条，每次增加10</span><br></code></pre></td></tr></table></figure></li><li><p><strong>设置进度条描述</strong>： 你可以在迭代过程中动态设置进度条的描述信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> tqdm(total=<span class="hljs-number">100</span>) <span class="hljs-keyword">as</span> pbar:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        <span class="hljs-comment"># 执行任务</span><br>        pbar.set_description(<span class="hljs-string">f&quot;Processing <span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p><strong>使用 <code>tqdm</code> 的其他方法</strong>： <code>tqdm</code> 提供了一些其他方法，如 <code>update</code>（更新进度条）、<code>refresh</code>（刷新进度条）、<code>close</code>（关闭进度条）等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">pbar.update(<span class="hljs-number">10</span>)  <span class="hljs-comment"># 更新进度条</span><br>pbar.refresh()  <span class="hljs-comment"># 刷新进度条</span><br>pbar.close()     <span class="hljs-comment"># 关闭进度条</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CAM可视化</title>
    <link href="/2024/02/07/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <url>/2024/02/07/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch-grad-cam-特征可视化"><a class="markdownIt-Anchor" href="#pytorch-grad-cam-特征可视化"></a> Pytorch-grad-cam 特征可视化：</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介：</h2><p><code>Pytorch-grad-cam</code>是一个用于PyTorch的库，它提供了多种类激活映射（Class Activation Mapping, CAM）方法，用于可视化卷积神经网络（CNN）的特征。这些方法可以帮助我们理解模型在进行预测时关注的输入图像的哪些区域。<code>pytorch-grad-cam</code>库支持多种CAM方法，包括但不限于：</p><ul><li>GradCAM：通过权重激活映射来可视化模型的注意力区域</li><li>GradCAM++：在GradCAM的基础上使用二阶梯度</li><li>XGradCAM：类似于GradCAM，但通过归一化激活来缩放梯度</li><li>AblationCAM：通过关闭激活并测量输出下降来可视化</li><li>ScoreCAM：通过扰动图像并测量输出下降来可视化</li><li>EigenCAM：使用主成分分析来可视化</li><li>LayerCAM：通过正梯度加权激活来可视化</li></ul><p>这个库还支持对象检测和语义分割任务，并且提供了一些高级功能，如图像增强和性能评估指标。其实上面几个方法可视化效果大同小异，<strong>用的时候随便选一个 GradCAM++ 就行了</strong></p><h2 id="使用方式"><a class="markdownIt-Anchor" href="#使用方式"></a> 使用方式：</h2><p>先介绍两个函数：</p><h3 id="pytorch_grad_camgradcamplusplus-函数"><a class="markdownIt-Anchor" href="#pytorch_grad_camgradcamplusplus-函数"></a> <code>pytorch_grad_cam.GradCAMPlusPlus</code> 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cam = pytorch_grad_cam.GradCAMPlusPlus(model, target_layers，reshape_transform=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><ul><li>model：为需要可视化的模型，把先前训练好的模型实例传入就好</li><li>target_layers：需要可视化的层，类型是 <code>List[torch.nn.Module]</code>，可以传入单个或者多个层，如果传入多个层，<strong>CAM 的注意力会在这些层之间平均，这样会在你不知道哪个层表现最好的时候很有用</strong></li><li>reshape_transform：看不懂是什么参数，平时也不用，不管</li><li>返回值 cam：<strong>一个 callabel，他也是一个神经网络，使用时输入和 model 一样的数据，返回 batch 大小的注意力灰度图</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pytorch_grad_cam<br><span class="hljs-comment"># from pytorch_grad_cam.utils.model_targets import ClassifierOutputTarget</span><br>cam = pytorch_grad_cam.GradCAMPlusPlus(model=resnet18, target_layers=target_layers)<br><span class="hljs-comment"># 指定可视化索引为386类别的注意力</span><br><span class="hljs-comment"># targets = [ClassifierOutputTarget(386),ClassifierOutputTarget(386)]</span><br>grayscale_cam = cam(net_input, targets=targets)<br>grayscale_cam = grayscale_cam[<span class="hljs-number">0</span>, :]<br><span class="hljs-built_in">print</span>(grayscale_cam.shape)<br></code></pre></td></tr></table></figure><p>其中 <code>cam(net_input, targets=targets)</code> 的 targets 是指定哪种预测类别注意力使用的，如果没有指定 targets，该函数会自动选用预测概率最大的类别进行可视化，该函数还可以传入 <code>aug_smooth=True and eigen_smooth=True</code> 来进行图像平滑操作</p><h3 id="show_cam_on_image-方法"><a class="markdownIt-Anchor" href="#show_cam_on_image-方法"></a> <code>show_cam_on_image</code> 方法</h3><p><code>show_cam_on_image</code> 方法用于在单个图像上显示 CAM 结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pytorch_grad_cam.utils.image <span class="hljs-keyword">import</span> show_cam_on_image<br>visualization_img = show_cam_on_image(img: np.ndarray, mask: np.ndarray, use_rgb: <span class="hljs-built_in">bool</span>=<span class="hljs-literal">False</span>, colormap: <span class="hljs-built_in">int</span>=cv2.COLORMAP_JET, image_weight: <span class="hljs-built_in">float</span>)<br></code></pre></td></tr></table></figure><ul><li>img：网络输入图像，即需要可视化注意力的图像</li><li>mask：注意力灰度图，就是上面返回的 <code>grayscale_cam</code></li><li>use_rgb：告诉传入的 img 使用 RGB 图像还是 BGR 图像</li><li>colormap：类似于 matplotlib 库中的 cmap</li><li>返回值 visualization_img：<strong>返回传入层 target layers 平均注意力的灰度图</strong>，用于可视化的 RGB 图像</li></ul><h2 id="应用实例查看-resnet-各个层的注意力"><a class="markdownIt-Anchor" href="#应用实例查看-resnet-各个层的注意力"></a> 应用实例：查看 resnet 各个层的注意力</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">import</span> torchvision.transforms <span class="hljs-keyword">as</span> transforms<br><br><span class="hljs-keyword">import</span> pytorch_grad_cam <br><span class="hljs-keyword">from</span> pytorch_grad_cam.utils.image <span class="hljs-keyword">import</span> show_cam_on_image<br><br><br>resnet18 = models.resnet18(pretrained=<span class="hljs-literal">True</span>)<br>resnet18.<span class="hljs-built_in">eval</span>()<br>target_layers = [resnet18.layer1[<span class="hljs-number">1</span>].bn2, resnet18.layer2[<span class="hljs-number">1</span>].bn2, resnet18.layer3[<span class="hljs-number">1</span>].bn2, resnet18.layer4[<span class="hljs-number">1</span>].bn2]<br>rgb_img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./1.jpg&#x27;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br><br><br>trans = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Resize(<span class="hljs-number">224</span>, antialias=<span class="hljs-literal">True</span>),<br>    transforms.CenterCrop(<span class="hljs-number">224</span>)<br>])<br>crop_img = trans(rgb_img)<br>net_input = transforms.Normalize((<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>), (<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>))(crop_img).unsqueeze(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 将裁剪后的Tensor格式的图像转为numpy格式</span><br>canvas_img = (crop_img*<span class="hljs-number">255</span>).byte().numpy().transpose(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)<br>src_img = np.float32(canvas_img) / <span class="hljs-number">255</span><br><br><br>fig, axes = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>)<br>axes[<span class="hljs-number">0</span>].imshow(src_img)<br><br><span class="hljs-keyword">for</span> cnt, layer <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(target_layers, <span class="hljs-number">1</span>):<br>    cam = pytorch_grad_cam.GradCAMPlusPlus(model=resnet18, target_layers=[layer])<br>    grayscale_cam = cam(net_input)<br>    grayscale_cam = grayscale_cam[<span class="hljs-number">0</span>, :]<br>    visualization_img = show_cam_on_image(src_img, grayscale_cam, use_rgb=<span class="hljs-literal">True</span>)<br>    axes[cnt].imshow(visualization_img)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/2024/02/07/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/1.png" alt="resnet各个层的注意力"></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch-hook</title>
    <link href="/2024/02/05/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-hook/"/>
    <url>/2024/02/05/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-hook/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch-的-hook-机制"><a class="markdownIt-Anchor" href="#pytorch-的-hook-机制"></a> Pytorch 的 hook 机制：</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介：</h2><p>在PyTorch中，hook机制是一种强大的工具，它允许开发者在不修改模型原始结构的情况下，插入自定义函数来访问、记录或修改模型运行过程中的中间层输出（forward pass）和梯度（backward pass）。</p><p>具体来说，在<code>torch.nn.Module</code>及其包含的<code>torch.Tensor</code>对象上可以注册hook。通过调用<code>.register_forward_hook()</code>或<code>.register_backward_hook()</code>方法，可以在前向传播结束时或反向传播过程中执行特定的回调函数：</p><ul><li><code>register_forward_hook(hook_function)</code>：当模块的前向传播完成时，会调用这个hook函数，它可以访问到该模块的输入和输出张量。</li><li><code>register_backward_hook(hook_function)</code>：当模块接收到关于其输出的反向传播信号时，这个hook函数会被调用，它能够访问到模块输出的梯度以及输入的梯度。</li></ul><p>Hook常用于以下场景：</p><ol><li><strong>可视化中间层特征图</strong></li><li>监控和记录网络训练过程中的中间变量和梯度信息</li><li>对模型训练进行干预，如正则化或其他动态调整策略</li><li>实现元学习中的特殊计算需求</li><li>保存特定层的输出用于后续分析或微调</li></ol><p>使用hook时需要注意释放资源，因为在每次迭代结束后，如果不手动保存这些中间结果，它们通常会被自动清理以节省内存。</p><p>PyTorch中的hook机制分为针对Tensor和Module（模型）的两种类型：</p><ol><li><p><strong>Tensor Hook</strong>：</p><ul><li><code>torch.Tensor.register_hook(hook_function)</code>：这是一个作用在张量上的钩子函数，当该张量<strong>参与反向传播计算梯度时</strong>，会调用你注册的<code>hook_function</code>。这个函数接收一个参数，即该张量对应的梯度(<code>grad</code>)，并且允许你在梯度计算完成后对其进行修改或观察，<strong>这种情况用得少，几乎只能用于修改反向传播的梯度值</strong></li></ul></li><li><p><strong>Module Hooks</strong>：</p><ul><li><p><code>torch.nn.Module.register_forward_hook(hook_function)</code>：当你需要监控或者修改模块执行前向传播过程时使用的钩子。在模块完成其<code>forward()</code>方法并生成输出后，<code>hook_function</code>会被调用，它接受三个参数：当前模块实例、模块接收到的输入以及模块计算出的输出。</p></li><li><p><code>torch.nn.Module.register_forward_pre_hook(hook_function)</code>：与<code>register_forward_hook</code>类似，但会在模块执行前向传播之前调用，此时输入尚未经过模块处理。</p></li><li><p><code>torch.nn.Module.register_backward_hook(hook_function)</code>：用于监控或修改模块在反向传播阶段的行为。当模块的输出梯度计算完毕后，<code>hook_function</code>会被调用，它接收四个参数：当前模块实例、输入梯度、输出梯度以及输出自身</p></li><li><p>如果希望对整个模型或特定层的所有输入和输出张量添加hooks，可以<strong>使用模块级别的hook</strong>，例如：</p><ul><li><code>nn.Module.register_forward_hook(hook_function)</code></li><li><code>nn.Module.register_backward_hook(hook_function)</code></li><li><code>nn.Module.register_full_backward_hook(hook_function)</code></li></ul><p>这些接口将允许在模型前向传播或反向传播的不同阶段添加自定义处理逻辑</p></li></ul></li></ol><h2 id="torchtensorregister_hookhook_function-用法"><a class="markdownIt-Anchor" href="#torchtensorregister_hookhook_function-用法"></a> <code>torch.Tensor.register_hook(hook_function)</code> 用法</h2><h3 id="函数签名"><a class="markdownIt-Anchor" href="#函数签名"></a> <strong>函数签名：</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">tensor.grad_fn.register_hook(hook: <span class="hljs-type">Callable</span>[[Tensor], <span class="hljs-literal">None</span>]) -&gt; torch.utils.hooks.RemovableHandle<br></code></pre></td></tr></table></figure><h3 id="参数说明"><a class="markdownIt-Anchor" href="#参数说明"></a> <strong>参数说明：</strong></h3><ul><li><code>hook: Callable[[Tensor], None]</code><ul><li>这是一个接受一个张量作为输入的可调用对象（通常为函数）</li><li>输入的张量是该操作在反向传播过程中产生的梯度，即当计算当前张量的上游梯度时，传递给<code>hook_function</code>的是当前张量的梯度</li><li><code>hook</code>函数没有返回值要求，其目的是为了让你能够监控或者修改这个张量的梯度</li><li>对于 <code>grad_fn=True</code> 的 Tensor，<strong>可以直接使用 <code>tensor.register_hook</code> 而不需要显式地先指向 <code>grad_fn</code> 属性</strong></li></ul></li></ul><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><p>注意：尽量<strong>不要在动态图的中间节点的hook函数中使用某个节点的 grad_fn 的 inplace 操作</strong>，比如 <code>c=a+b</code> 如果在 b 的 hook 中原地改变 b 的梯度，则 a 的梯度也会一样改变，因为 Pytorch 的底层机制，反向传播过程中发现 a 和 b 的梯度相同，就直接将 b 的梯度信息复制过去了！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br>a = torch.tensor(<span class="hljs-number">2.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>b = torch.tensor(<span class="hljs-number">3.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>c = a * b<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">c_hook</span>(<span class="hljs-params">grad</span>):<br>    <span class="hljs-built_in">print</span>(grad)<br>    <span class="hljs-keyword">return</span> grad + <span class="hljs-number">2</span><br><br>c.register_hook(c_hook)<br>c.register_hook(<span class="hljs-keyword">lambda</span> grad: <span class="hljs-built_in">print</span>(grad))<br>c.retain_grad()<br><br>d = torch.tensor(<span class="hljs-number">4.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>d.register_hook(<span class="hljs-keyword">lambda</span> grad: grad + <span class="hljs-number">100</span>)<br><br>e = c * d<br>e.retain_grad()<br>e.register_hook(<span class="hljs-keyword">lambda</span> grad: grad * <span class="hljs-number">2</span>)<br>e.retain_grad() <span class="hljs-comment"># second-time retain_grad() is NOP (NOP:空操作)</span><br><br>e.backward()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;a.grad <span class="hljs-subst">&#123;a.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;b.grad <span class="hljs-subst">&#123;b.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c.grad <span class="hljs-subst">&#123;c.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;d.grad <span class="hljs-subst">&#123;d.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;e.grad <span class="hljs-subst">&#123;e.grad&#125;</span>&#x27;</span>)<br><span class="hljs-comment">#---------运行结果---------</span><br>tensor(<span class="hljs-number">8.</span>)<br>tensor(<span class="hljs-number">10.</span>)<br>a.grad <span class="hljs-number">30.0</span><br>b.grad <span class="hljs-number">20.0</span><br>c.grad <span class="hljs-number">10.0</span><br>d.grad <span class="hljs-number">112.0</span><br>e.grad <span class="hljs-number">2.0</span><br></code></pre></td></tr></table></figure><p><img src="/2024/02/05/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-hook/1.png" alt="代码解释"></p><h2 id="register_forward_hookhook_function-用法"><a class="markdownIt-Anchor" href="#register_forward_hookhook_function-用法"></a> <code>register_forward_hook(hook_function)</code> 用法：</h2><h3 id="函数签名-2"><a class="markdownIt-Anchor" href="#函数签名-2"></a> <strong>函数签名</strong>：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">nn.Module.register_forward_hook(hook)<br></code></pre></td></tr></table></figure><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> <strong>参数</strong>：</h3><ul><li><code>hook</code>：类型为 <code>Callable[[Module, Tensor, Tensor], None]</code> 的函数对象。这个函数需要<strong>接受三个参数，并且不返回任何值</strong>（因为返回了值也没什么用）<ul><li><code>module</code>（类型: <code>torch.nn.Module</code>）：触发钩子的模块实例。</li><li><code>input</code>（<strong>类型: <code>Tuple[Tensor, ...]</code> 或单个 <code>Tensor</code></strong>）：传递给模块执行前向传播操作时的输入数据，如果模块接收多个输入，则是一个包含所有输入张量的元组。</li><li><code>output</code>（<strong>类型: <code>Tensor</code> 或 <code>Tuple[Tensor, ...]</code></strong>）：模块执行完前向传播后生成的输出数据，根据模块的具体输出，可以是单个张量或多张量组成的元组</li></ul></li></ul><h3 id="返回值-2"><a class="markdownIt-Anchor" href="#返回值-2"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SumNet</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(SumNet, self).__init__()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">a, b, c</span>):<br>        d = a + b + c<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward():&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    a:&#x27;</span>, a)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    b:&#x27;</span>, b)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    c:&#x27;</span>, c)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    d:&#x27;</span>, d)<br>        <span class="hljs-keyword">return</span> d<br><span class="hljs-comment"># forward_pre_hook在调用forward函数前自动调用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_pre_hook</span>(<span class="hljs-params">module, input_positional_args</span>):<br>    a, b = input_positional_args<br>    new_input_positional_args = a + <span class="hljs-number">10</span>, b<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward_pre_hook():&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    module:&#x27;</span>, module)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    input_positional_args:&#x27;</span>, input_positional_args)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    new_input_positional_args:&#x27;</span>, new_input_positional_args)<br>    <span class="hljs-keyword">return</span> new_input_positional_args<br><span class="hljs-comment"># forward_hook在调用forward函数后自动调用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_hook</span>(<span class="hljs-params">module, input_positional_args, output</span>):<br>    new_output = output + <span class="hljs-number">100</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward_hook():&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    module:&#x27;</span>, module)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    input_positional_args:&#x27;</span>, input_positional_args)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    output:&#x27;</span>, output)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    new_output:&#x27;</span>, new_output)<br><span class="hljs-comment">#    return new_output</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sum_net = SumNet()<br>    sum_net.register_forward_pre_hook(forward_pre_hook)<br>    sum_net.register_forward_hook(forward_hook)<br><br>    a = torch.tensor(<span class="hljs-number">1.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    b = torch.tensor(<span class="hljs-number">2.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    c = torch.tensor(<span class="hljs-number">3.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;start\n&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a:&#x27;</span>, a)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b:&#x27;</span>, b)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c:&#x27;</span>, c)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;before model&#x27;</span>)<br>    d = sum_net(a, b, c=c)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;after model&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;d:&#x27;</span>, d)<br><span class="hljs-comment">#--------------------------</span><br>start:<br>a: tensor(<span class="hljs-number">1.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>b: tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>c: tensor(<span class="hljs-number">3.</span>, requires_grad=<span class="hljs-literal">True</span>)<br><br>before model:<br>forward_pre_hook():<br>    module: SumNet()<br>    input_positional_args: (tensor(<span class="hljs-number">1.</span>, requires_grad=<span class="hljs-literal">True</span>), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>    new_input_positional_args: (tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>forward():<br>    a: tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;)<br>    b: tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    c: tensor(<span class="hljs-number">3.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    d: tensor(<span class="hljs-number">16.</span>, grad_fn=&lt;AddBackward0&gt;)<br>forward_hook():<br>    module: SumNet()<br>    input_positional_args: (tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>    output: tensor(<span class="hljs-number">16.</span>, grad_fn=&lt;AddBackward0&gt;)<br>    new_output: tensor(<span class="hljs-number">116.</span>, grad_fn=&lt;AddBackward0&gt;)<br><br>after model:<br>d: tensor(<span class="hljs-number">116.</span>, grad_fn=&lt;AddBackward0&gt;)<br></code></pre></td></tr></table></figure><h2 id="register_backward_hook-用法"><a class="markdownIt-Anchor" href="#register_backward_hook-用法"></a> <code>register_backward_hook()</code> 用法</h2><h3 id="函数签名-3"><a class="markdownIt-Anchor" href="#函数签名-3"></a> <strong>函数签名：</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">nn.Module.register_backward_hook(hook)<br></code></pre></td></tr></table></figure><h3 id="参数说明-2"><a class="markdownIt-Anchor" href="#参数说明-2"></a> <strong>参数说明：</strong></h3><ul><li>hook：类型为 <code>Callable[[Module, Tensor, Tensor], None]</code> 的函数对象<ul><li><code>module</code> (类型: <code>torch.nn.Module</code>)：当前注册 hook 的模块实例</li><li><code>grad_input</code> (类型: <code>tuple[Tensor, ...]</code>)：输入张量的梯度元组，每个元素对应模块正向传播接收到的一个输入张量的梯度</li><li><code>grad_output</code> (类型: <code>tuple[Tensor, ...]</code>)：输出张量的梯度元组，每个元素对应模块正向传播生成的一个输出张量的梯度</li></ul></li></ul><h3 id="返回值-3"><a class="markdownIt-Anchor" href="#返回值-3"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><p>使用是同理的，通过使用 <code>register_backward_hook()</code>，开发者可以监视和/或修改模块在反向传播过程中的梯度信息，这对于调试、监控训练动态以及实现一些高级算法如梯度裁剪、正则化等非常有用</p><p><strong>技巧：如果前向传播和反向传播的hook都有时，可以用一个类去封装hook使代码模块化</strong></p><h2 id="hook-应用实例特征图提取特征可视化"><a class="markdownIt-Anchor" href="#hook-应用实例特征图提取特征可视化"></a> hook 应用实例：特征图提取特征可视化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">from</span> torchvision.transforms <span class="hljs-keyword">import</span> transforms<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>vgg16_pretrained = models.vgg16(pretrained=<span class="hljs-literal">True</span>)<br>_, axes = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, figsize=(<span class="hljs-number">12</span>, <span class="hljs-number">5</span>))<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MyModel, self).__init__()<br>        self.encoder1 = vgg16_pretrained.features[:<span class="hljs-number">5</span>]<br>        self.encoder2 = vgg16_pretrained.features[<span class="hljs-number">5</span>:<span class="hljs-number">10</span>]<br>        self.encoder3 = vgg16_pretrained.features[<span class="hljs-number">10</span>:<span class="hljs-number">17</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.encoder1(x)<br>        x = self.encoder2(x)<br>        x = self.encoder3(x)<br>        <span class="hljs-keyword">return</span> x<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">visualize</span>(<span class="hljs-params">activation, cnt</span>):<br>    axes[cnt].imshow(activation[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, :, :].detach().numpy(), cmap=<span class="hljs-string">&#x27;gray&#x27;</span>)<br>    axes[cnt].set_title(<span class="hljs-string">f&#x27;Encoder: <span class="hljs-subst">&#123;cnt&#125;</span>&#x27;</span>)<br><br><br>mymodel = MyModel()<br>mymodel.encoder1.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">1</span>))<br>mymodel.encoder2.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">2</span>))<br>mymodel.encoder3.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">3</span>))<br><br>input_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./1.jpg&quot;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>transforms = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Normalize([<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>], [<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>])<br>])<br>input_image = transforms(input_image).unsqueeze(<span class="hljs-number">0</span>)<br>axes[<span class="hljs-number">0</span>].imshow(input_image.permute(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>).squeeze(<span class="hljs-number">0</span>), cmap=<span class="hljs-string">&#x27;gray&#x27;</span>)<br>axes[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">&#x27;input&#x27;</span>)<br><span class="hljs-built_in">print</span>(input_image.shape)<br>_ = mymodel(input_image)<br>plt.show()<br><br></code></pre></td></tr></table></figure><p><img src="/2024/02/05/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch-hook/2.png" alt="visualize"></p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://github.com/elliotwaite/pytorch-hooks-tutorial">elliotwaite/pytorch-hooks-tutorial: Examples of using PyTorch hooks, as covered in my YouTube tutorial video. (github.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>远程服务器常用命令</title>
    <link href="/2024/02/03/%E7%A7%91%E7%A0%94/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/02/03/%E7%A7%91%E7%A0%94/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="wget命令"><a class="markdownIt-Anchor" href="#wget命令"></a> <code>wget</code>命令：</h2><p>​wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，用于下载一些软件或从远程服务器恢复备份到本地服务器</p><h4 id="快速使用"><a class="markdownIt-Anchor" href="#快速使用"></a> 快速使用：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -q -c filename http://example.com/file.zip<br></code></pre></td></tr></table></figure><h4 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget [选项]... [URL]...<br></code></pre></td></tr></table></figure><h4 id="常用参数"><a class="markdownIt-Anchor" href="#常用参数"></a> 常用参数：</h4><ol><li><p><code>-O</code> 或 <code>--output-document</code>：指定下载文件的保存位置和名称。如果文件名以斜杠（/）开头，<code>wget</code> 会将文件保存到指定的目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O filename http://example.com/file.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-c</code> 或 <code>--continue</code> ：wget 的最大优势之一：断点下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -c filename http://example.com/file.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-r</code> 或 <code>--recursive</code>：递归下载整个网站。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -r http://example.com<br></code></pre></td></tr></table></figure></li><li><p><code>-q</code> 或 <code>--quiet</code>：静默模式，不显示下载进度和日志信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -q http://example.com/file.zip<br></code></pre></td></tr></table></figure></li><li><p><code>--limit-rate</code>：限制下载速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --limit-rate=100k http://example.com/file.zip<br></code></pre></td></tr></table></figure></li><li><p><code>--user</code> 和 <code>--password</code>：用于 FTP 或 HTTP 认证。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --user=username --password=password http://example.com<br></code></pre></td></tr></table></figure></li></ol><h2 id="nohup命令"><a class="markdownIt-Anchor" href="#nohup命令"></a> <code>nohup</code>命令</h2><p>​<code>nohup</code> 是一个在类Unix操作系统中广泛使用的命令，其全称为 “no hang up”，意为“不挂断”。该命令的主要作用是让进程忽略终端（TTY）的挂断信号（SIGHUP），这样即使用户退出了终端或关闭了会话，所运行的程序仍然能够继续执行（毕竟谁也不想一直挂着电脑训练）</p><h4 id="快速使用-2"><a class="markdownIt-Anchor" href="#快速使用-2"></a> 快速使用：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> python train.py &amp;<br></code></pre></td></tr></table></figure><h4 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> <span class="hljs-built_in">command</span> [arguments] &amp;<br></code></pre></td></tr></table></figure><p>​这里 <code>command</code> 是你想要后台运行且不受挂断信号影响的命令，<code>arguments</code> 是传递给该命令的参数。末尾的 <code>&amp;</code> 符号用于将命令放入后台运行。</p><h4 id="标准输出重定向"><a class="markdownIt-Anchor" href="#标准输出重定向"></a> 标准输出重定向：</h4><p>默认情况下，当使用 <code>nohup</code> 命令时，进程的标准输出（STDOUT）和标准错误输出（STDERR）会被自动重定向到当前目录下的 <code>nohup.out</code> 文件中。如果你希望自定义输出文件，可以这样做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> <span class="hljs-built_in">command</span> &gt; output.txt 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p>上述命令中：</p><ul><li><code>&gt;</code> 表示重定向标准输出到 <code>output.txt</code> 文件。</li><li><code>2&gt;&amp;1</code> 表示将标准错误输出重定向到与标准输出相同的通道，因此标准错误信息也会被写入到 <code>output.txt</code> 文件</li></ul><p><img src="/2024/02/03/%E7%A7%91%E7%A0%94/%E7%A7%91%E7%A0%94%E5%B7%A5%E5%85%B7/%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/20210220144057395.png" alt="123含义"></p><h4 id="详细例子"><a class="markdownIt-Anchor" href="#详细例子"></a> 详细例子：</h4><p>​假设你想在后台运行一个名为 <code>my_script.sh</code> 的脚本，并且确保在注销后它还能继续运行，你可以这么做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> ./my_script.sh arg1 arg2 &gt; my_script.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p>在这个例子中，<code>./my_script.sh</code> 是要运行的脚本及其参数，输出和错误都被写入到 <code>my_script.log</code> 文件</p><p>​关闭<code>nohup</code>进程需要使用<code>ps</code>等命令kill进程</p><h2 id="ps命令"><a class="markdownIt-Anchor" href="#ps命令"></a> <code>ps</code>命令</h2><p>Linux ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器</p><h4 id="快速使用-3"><a class="markdownIt-Anchor" href="#快速使用-3"></a> 快速使用：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef | grep 进程关键字<br><span class="hljs-comment"># 查看进程</span><br>ps -u udsample -o pid,<span class="hljs-built_in">command</span><br><span class="hljs-comment"># 关闭进程</span><br>pgrep -u udsample -f <span class="hljs-string">&#x27;train.py&#x27;</span> | xargs <span class="hljs-built_in">kill</span><br></code></pre></td></tr></table></figure><h3 id="语法-3"><a class="markdownIt-Anchor" href="#语法-3"></a> 语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps [options] [--<span class="hljs-built_in">help</span>]<br></code></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义</li><li>-A 列出所有的进程</li><li>-w 显示加宽可以显示较多的资讯</li><li>-au 显示较详细的资讯</li><li>-aux 显示所有包含其他使用者的进程</li></ul><p>ps -ef | grep ‘wandb’ | grep -v grep | awk ‘{print $2}’ | xargs kill</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>图像分割评价指标</title>
    <link href="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
    <url>/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h1 id="图像分割评价指标"><a class="markdownIt-Anchor" href="#图像分割评价指标"></a> 图像分割评价指标</h1><p><strong>图像分割的（包括语义分割，实例分割，以及全景分割），它们的评价指标都是一样的</strong>。常用的图像分割指标有：</p><ul><li><strong>像素准确率（Pixel Accuracy，PA）</strong></li><li><strong>类别像素准确率（Class Pixel Accuray，CPA）</strong></li><li><strong>类别平均像素准确率（Mean Pixel Accuracy，MPA）</strong></li><li><strong>交并比（Intersection over Union，IoU）</strong></li><li>*<strong>平均交并比（Mean Intersection over Union，MIoU）*</strong></li></ul><h2 id="混淆矩阵"><a class="markdownIt-Anchor" href="#混淆矩阵"></a> 混淆矩阵：</h2><p>混淆矩阵（confusion matrix）也叫错误矩阵（error matrix），混淆矩阵是以模型预测的类别数量统计信息为横轴，真实标签的数量统计信息为纵轴画出的矩阵，以二分类问题为例，混淆矩阵由四个部分构成：True Positive，False Positive，False Negative，False Negative，True Negative 四类，如下图所示：</p><p><img src="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/1.png" alt="table"></p><p>由此可以将这个矩阵推广到多维的情况，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">confusion_matrix</span>(<span class="hljs-params">y_true, y_pred</span>):<br>    label_pairs = np.ravel_multi_index((label_img, pred_label_img), <br>                                        dims=(num_classes, num_classes))<br>    confs_matrix = np.bincount(label_pairs, minlength=num_classes**<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> confs_matrix<br></code></pre></td></tr></table></figure><h2 id="pixel-accuracy准确率"><a class="markdownIt-Anchor" href="#pixel-accuracy准确率"></a> Pixel  Accuracy（准确率）:</h2><p>​accuracy指的是正确预测的样本数占总预测样本数的比值，公式表示为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">PA = \frac{\sum_{i=0}^n p_{ii}}{\sum_{i=0}^n \sum_{j=0}^n p_{ij}} = \frac{TP+TN}{TP+TN+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6241120000000002em;vertical-align:-1.1301100000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494002em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>后面的等号在二分类情况下成立</p><ul><li>n : 类别总数，包括背景的话就是n+1</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> : 真实像素类别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 的像素被预测为类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的总数量</li><li>TP： 真阳性数，在label中为阳性，在预测值中也为阳性的个数</li><li>TN： 真阴性数， 在label中为阴性，在预测值中也为阴性的个数</li><li>FP： 假阳性数， 在label中为阴性，在预测值中为阳性的个数</li><li>FN： 假阴性数， 在label中为阳性，在预测值中为阴性的个数</li></ul><p>PA 看上去是一个很好的评价指标，但是在下面情况下，即使把整张图片都预测为背景都有很高的准确率，但这显然是不符合要求的</p><p><img src="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/2.png" alt="example"></p><p>同理与其相似的还有 Precision（查准率）Recall （查全率）</p><h2 id="交并比-iou"><a class="markdownIt-Anchor" href="#交并比-iou"></a> 交并比 IoU</h2><p>​上面的评价指标用的都不多，Intersection-Over-Union (IoU)，也称为 Jaccard 指数，是语义分割中最常用的指标之一，IoU 是预测分割和标签之间的重叠区域除以预测分割和标签之间的联合区域（两者的交集/两者的并集）。该指标的范围为 0–1 (0–100%)，其中 0 表示没有重叠，1 表示完全重叠分割。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>o</mi><mi>U</mi><mo>=</mo><mfrac><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IoU=\frac{\left| A\cap B \right|}{\left| A\cup B \right|}=\frac{TP}{TP+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>注意：IoU 在多分类中每个值只能应用于单个类别类别，多分类任务中每个类别都有一个 IoU 值，mIoU ( mean Intersection over union ) 是 IoU 的平均值，它们代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">IoU</span>(<span class="hljs-params">confs_matrix</span>):<br>    IoU_matrix = np.diag(confs_matrix) / (confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>) +<br>                    confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">0</span>) - np.diag(confs_matrix))<br>    mIoU = IoU_matrix.mean()<br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;IoU matrix&#x27;</span>:IoU_matrix, <span class="hljs-string">&#x27;mIoU&#x27;</span>: mIoU&#125;<br></code></pre></td></tr></table></figure><h2 id="dice-coefficientf1-score"><a class="markdownIt-Anchor" href="#dice-coefficientf1-score"></a> Dice coefficient，F1-score</h2><p>​定义： Dice系数定义为两倍的交集除以像素和，也叫F1 score。Dice 系数与 IoU 非常相似，<strong>Dice 常用于医学影像分割，其他情况下的图像分割评价指标一般选择 mIoU</strong></p><p>​F1-score是为了能够评价不同算法的优劣，在 Precision 和 Recall 的基础上提出了F1值的概念，来对 Precision 和 Recall 进行整体评价。F1-score（均衡平均数）是综合考虑了模型查准率和查全率的计算结果，取值更偏向于取值较小的那个指标。F1的定义如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><msup><mrow><mo fence="true">(</mo><mfrac><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><msup><mi>l</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><msup><mi>n</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><mn>2</mn></mfrac><mo fence="true">)</mo></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>2</mn><mtext> </mtext><mfrac><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>×</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mn>2</mn><mtext> </mtext><mfrac><mrow><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><mrow><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow></mfrac><mo>=</mo><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mn>2</mn><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_1 = \left( \frac{recall^{-1} + precision^{-1}}{2} \right)^{-1} = 2\  \frac{precision \times recall}{precision + recall} \\=2 \ \frac{\frac{TP}{TP + FP} \times \frac{TP}{TP + FN}}{\frac{TP}{TP + FP} + \frac{TP}{TP + FN}} = = \frac{TP}{2TP+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6451460000000004em;vertical-align:-0.95003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6951160000000003em;"><span style="top:-3.944008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord">2</span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.8313240000000004em;vertical-align:-1.165662em;"></span><span class="mord">2</span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6656620000000002em;"><span style="top:-2.237669em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7933310000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.165662em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Dice</span>(<span class="hljs-params">confs_matrix</span>):<br>    Dice_score = <span class="hljs-number">2</span>* np.diag(confs_matrix) / (confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>) +<br>                    confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">0</span>) + np.diag(confs_matrix))<br>    <span class="hljs-keyword">return</span> Dice_score<br></code></pre></td></tr></table></figure><h2 id="biouboundary-iou"><a class="markdownIt-Anchor" href="#biouboundary-iou"></a> (BIoU)Boundary IoU</h2><p>Boundary IoU是由论文<a href="https://arxiv.org/pdf/2103.16562.pdf">Boundary IoU: Improving Object-Centric Image Segmentation Evaluation</a>首次提出的图像分割评价指标</p><p>​算法的优化一般是以增加评测指标值为目的，<strong>如果AP指标对某种错误类型敏感，那么基于该指标优化的算法能很好地解决该种错误类型；反之，如果AP指标对某种错误类型不敏感，那么即使改善算法使得AP指标提升，也未必会很好地改善该错误类型</strong></p><p>​当前通用的以Mask IoU为基础的AP指标对于mask边界的分割质量不敏感，导致近年来不断优化的分割算法并没有明显改善mask边界的分割质量</p><p>​基于以上情况，作者提出了Boundary IoU，使用Boundary IoU代替Mask IoU，能够很好地衡量分割边界的质量好坏，如下图所示：</p><p><img src="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/4.webp" alt="BIoU"></p><p>​作者在论文中论述了Boundary IoU能够再大目标与小目标评价中都十分有效，<strong>不会出现：图像周长与图像面积随着目标的变大导致的增长速率不一样，进而导致大目标对边界不敏感的问题。同时也不会对小目标施加过于大的惩罚</strong></p><p>Boundary IoU的定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>d</mi><mi>a</mi><mi>r</mi><mi>y</mi><mtext> </mtext><mi>I</mi><mi>o</mi><mi>U</mi><mo stretchy="false">(</mo><mi>G</mi><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mo fence="true">∣</mo><mo stretchy="false">(</mo><msub><mi>G</mi><mi>d</mi></msub><mo>∩</mo><mi>G</mi><mo stretchy="false">)</mo><mo>∩</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mi>d</mi></msub><mo>∩</mo><mi>P</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mo stretchy="false">(</mo><msub><mi>G</mi><mi>d</mi></msub><mo>∩</mo><mi>G</mi><mo stretchy="false">)</mo><mo>∪</mo><mo stretchy="false">(</mo><msub><mi>P</mi><mi>d</mi></msub><mo>∩</mo><mi>P</mi><mo stretchy="false">)</mo><mo fence="true">∣</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">Boundary\ IoU(G,P) =  \frac{\left| (G_d \cap G) \cap (P_d \cap P) \right|}{\left| (G_d \cap G ) \cup (P_d \cap P) \right|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mopen">(</span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">G_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示与Ground truth mask的轮廓距离不大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 的像素集合，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">P_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 表示与预测的mask距离不大于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 的像素集合</p><p><img src="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/3.webp" alt="example"></p><p>距离 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 控制着Boundary IoU的敏感程度，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 足够大时，Boundary IoU等效于Mask IoU；当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 比较小时，Boundary IoU会忽略mask中远离边界的像素，使得即使对于尺寸较大的物体，Boundary IoU也会更关注物体边界附近的分割质量</p><p>​Boundary IoU也有缺陷，比如对于类似下图中有相同圆心的2个mask，Boundary IoU的值会很高</p><p><img src="/2024/01/31/%E5%AD%A6%E4%B9%A0/cv%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/5.webp" alt="极端情况"></p><p>为解决该问题，作者推荐使用min(Mask IoU,Boundary IoU)代替计算AP时使用的Mask IoU。并将此方式计算得到的AP命名为Boundary AP，在实际使用时，超过99.9%的情况下Boundary IoU的值都要小于等于Mask IoU，因此取最小值只是为了避免上图中这种特殊的情况</p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>魔术方法</title>
    <link href="/2024/01/26/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/%E8%AF%AD%E8%A8%80%E7%89%B9%E8%89%B2/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
    <url>/2024/01/26/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/%E8%AF%AD%E8%A8%80%E7%89%B9%E8%89%B2/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="python魔术方法"><a class="markdownIt-Anchor" href="#python魔术方法"></a> Python魔术方法</h1><p>​在Python中，所有以双下划线<code>__</code>包起来的方法，统称为<strong>Magic Method（魔术方法）</strong>，它是一种的特殊方法，普通方法需要调用，而魔术方法不需要调用就可以自动执行。</p><p>​魔术方法在类或对象的某些事件出发后会自动执行，让类具有神奇的“魔力”。如果希望根据自己的程序定制自己特殊功能的类，那么就需要对这些方法进行重写。</p><p>​魔术方法有上百种，只有很小的一部分我们才会使用，大部分魔术方法我们只需要了解即可</p><h2 id="常见魔术方法"><a class="markdownIt-Anchor" href="#常见魔术方法"></a> 常见魔术方法</h2><h3 id="1初始化方法__init__"><a class="markdownIt-Anchor" href="#1初始化方法__init__"></a> 1.初始化方法<code>__init__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">触发机制：实例化对象之后立即触发<br>参数：至少有一个self，接收当前对象，其他参数根据需要进行定义<br>返回值：无<br>作用：初始化对象的成员<br></code></pre></td></tr></table></figure><p>用得太多了</p><h3 id="2构造方法__new__"><a class="markdownIt-Anchor" href="#2构造方法__new__"></a> 2.构造方法<code>__new__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机： 实例化对象时自动触发（在__init__之前触发）<br>参数：至少一个cls 接收当前类，其他参数根据初始化方法参数决定<br>返回值：必须返回一个对象实例，没有返回值，则实例化对象的结果为None<br>作用：实例化对象<br>注意：实例化对象是Object类底层实现，其他类继承了Object的__new__才能够实现实例化对象。<br></code></pre></td></tr></table></figure><p><code>__new__</code> 方法用得很少，它用于建立一个类，几乎只有客制化类的时候才需要使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__new__</span>(<span class="hljs-params">cls, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;__new__&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>().__new__(cls)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x</span>):<br>        self.x = x<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;__init__&#x27;</span>)<br><br>o = A(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="3析构方法__del__"><a class="markdownIt-Anchor" href="#3析构方法__del__"></a> 3.析构方法<code>__del__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：当该类对象被销毁时，自动触发<br>参数：一个self，接受当前对象<br>返回值：无<br>作用：关闭或释放对象创建时资源<br>注意：del不一定会触发当前方法，只有当前对象没有任何变量引用时才会触发<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__del__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__del__&quot;</span>)<br><br>o = A(<span class="hljs-number">1</span>)<br>x = o<br><span class="hljs-keyword">del</span> o<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;done&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="4__call__"><a class="markdownIt-Anchor" href="#4__call__"></a> 4.<code>__call__</code></h3><p>​<strong>callable是指能够当成函数调用的对象</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">调用对象的魔术方法<br>触发时机:将对象当作函数调用时触发,方式： 对象()<br>参数:至少一个self接收对象，其余根据调用时参数决定<br>返回值：根据情况而定<br>作用：可以将复杂的步骤进行合并操作，减少调用的步骤，方便使用<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Multiplier</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, mul</span>):<br>        self.mul = mul<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, arg</span>):<br>        <span class="hljs-keyword">return</span> self.mul * arg<br><br>o = Multiplier(<span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(o(<span class="hljs-number">4</span>))<br></code></pre></td></tr></table></figure><h3 id="5__len__"><a class="markdownIt-Anchor" href="#5__len__"></a> 5.<code>__len__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：使用len(对象) 的时候触发<br>参数：一个参数self<br>返回值：必须是一个整型<br>作用：可以设置为检测对象成员个数，但是也可以进行其他任意操作<br>注意：返回值必须必须是整数，否则语法报错，另外该要求是格式要求。<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):<br>        self._data = data<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self._data)<br><br>x = MyList([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(x))<br></code></pre></td></tr></table></figure><h3 id="6__getitem__"><a class="markdownIt-Anchor" href="#6__getitem__"></a> 6.<code>__getitem__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机:使用对象[i]的时候触发<br>参数：一个self和索引<br>同理可以知道__setitem__，__delitem__，__reversed__（由reverse()函数触发）等方法的用法<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):<br>        self._data = data<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, key</span>):<br>        <span class="hljs-keyword">return</span> self._data[key]<br><br>x = MyList([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(x[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h3 id="7__repr__"><a class="markdownIt-Anchor" href="#7__repr__"></a> 7.<code>__repr__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机:在使用repr(对象)的时候触发<br>参数：一个self接收对象<br>返回值：必须是字符串<br>作用：将对象转使用repr化为字符串时使用，也可以用于快捷操作<br></code></pre></td></tr></table></figure><h3 id="8__format__"><a class="markdownIt-Anchor" href="#8__format__"></a> 8.<code>__format__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：使用字符串.format(对象)时候触发<br>参数：一个self接收对象，一个参数接收format的&#123;&#125;中的格式，例如:&gt;5<br>返回值:必须是字符串<br>作用：设置对象可以作为format的参数，并且自定义对象格式化的规则<br>注意：无<br></code></pre></td></tr></table></figure><h2 id="魔术方法重载运算符"><a class="markdownIt-Anchor" href="#魔术方法重载运算符"></a> 魔术方法重载运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> math <span class="hljs-keyword">import</span> hypot,sqrt<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):<br>        self.x = x<br>        self.y = y<br>    <br>    <span class="hljs-comment">#__str__方法，会在打印变量时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Vector(%r,%r)&#x27;</span> %(self.x, self.y)<br>    <br>    <span class="hljs-comment">#__abs__函数会在调用abs()函数时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__abs__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment">#hypot(x,y) 返回欧几里得范数 sqrt(x*x + y*y)</span><br>        <span class="hljs-keyword">return</span> hypot(self.x, self.y)<br>        <br>    <span class="hljs-comment">#__bool__函数会在调用bool()函数时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__bool__</span>(<span class="hljs-params">self</span>): <br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">bool</span>(<span class="hljs-built_in">abs</span>(self))<br>        <br>    <span class="hljs-comment"># 执行a + b时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__add__</span>(<span class="hljs-params">self, other</span>):<br>        x = self.x + other.x<br>        y = self.y + other.y<br>        <span class="hljs-keyword">return</span> Vector(x,y)<br>    <br>    <span class="hljs-comment"># 执行a+=b时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iadd__</span>(<span class="hljs-params">self, other</span>):<br>        <span class="hljs-keyword">return</span> self + other<br>    <br>    <span class="hljs-comment"># 执a * b的时候，会自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mul__</span>(<span class="hljs-params">self, scalar</span>):<br>        <span class="hljs-keyword">return</span> Vector(self.x * scalar,self.y * scalar)<br>    <br>    <span class="hljs-comment"># 求-a时，自动调用    </span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__neg__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> Vector(-self.x,-self.y)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__matmul__</span>():<br>        <span class="hljs-keyword">pass</span><br>v1 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>)<br>v2 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(v1 + v2)<br>v = Vector(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">abs</span>(v))<br><span class="hljs-built_in">print</span>(v * <span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">abs</span>(v * <span class="hljs-number">3</span>))<br><span class="hljs-built_in">print</span>(-v)<br>v1 += v2<br><span class="hljs-built_in">print</span>(v1)<br></code></pre></td></tr></table></figure><h2 id="其它魔术方法"><a class="markdownIt-Anchor" href="#其它魔术方法"></a> 其它魔术方法：</h2><h3 id="比较运算相关魔术方法"><a class="markdownIt-Anchor" href="#比较运算相关魔术方法"></a> 比较运算相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">__ lt__(self, other)：<br>定义小于号的行为：x &lt; y 调用 x.lt(y)<br>__ le__(self, other)：<br>定义小于等于号的行为：x &lt;= y 调用 x.le(y)<br>__ eq__(self, other) ：<br>定义等于号的行为：x == y 调用 x.eq(y)<br>__ ne__(self, other)：<br>定义不等号的行为：x != y 调用 x.ne(y)<br>__ gt__(self, other)：<br>定义大于号的行为：x &gt; y 调用 x.**gt(y)<br>__ ge__(self, other) ：<br>定义大于等于号的行为：x &gt;= y 调用 x.ge(y)<br></code></pre></td></tr></table></figure><h3 id="赋值运算相关魔术方法"><a class="markdownIt-Anchor" href="#赋值运算相关魔术方法"></a> 赋值运算相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">__iadd__(self, other)             定义赋值加法的行为：+=<br>__isub__(self, other)             定义赋值减法的行为：-=<br>__imul__(self, other)             定义赋值乘法的行为：=<br>__itruediv__(self, other)         定义赋值真除法的行为：/=<br>__ifloordiv__(self, other)        定义赋值整数除法的行为：//=<br>__imod__(self, other)             定义赋值取模算法的行为：%=<br>__ipow__(self, other[, modulo])   定义赋值幂运算的行为：**=<br>__ilshift__(self, other)          定义赋值按位左移位的行为：&lt;&lt;=<br>__irshift__(self, other)          定义赋值按位右移位的行为：&gt;&gt;=<br>__iand__(self, other)             定义赋值按位与操作的行为：&amp;=<br>__ixor__(self, other)             定义赋值按位异或操作的行为：^=<br>__ior__(self, other)              定义赋值按位或操作的行为：|=<br></code></pre></td></tr></table></figure><h3 id="类型转换相关魔术方法"><a class="markdownIt-Anchor" href="#类型转换相关魔术方法"></a> 类型转换相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">__complex__(self)      定义当被 complex() 调用时的行为（需要返回恰当的值）<br>__int__(self)          定义当被 int() 调用时的行为（需要返回恰当的值）<br>__float__(self)        定义当被 float() 调用时的行为（需要返回恰当的值）<br>__round__(self[, n])   定义当被 round() 调用时的行为（需要返回恰当的值）<br>__index(self)__        1. 当对象是被应用在切片表达式中时，实现整形强制转换<br>                       2. 如果你定义了一个可能在切片时用到的定制的数值型,你应该定义 index<br>                       3. 如果 index 被定义，则 int 也需要被定义，且返回相同的值<br></code></pre></td></tr></table></figure><h3 id="上下文管理相关魔术方法with"><a class="markdownIt-Anchor" href="#上下文管理相关魔术方法with"></a> 上下文管理相关魔术方法(with)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">__enter__` 和 `__exit__<br>__enter__(self)<br>    1. 定义当使用 with 语句时的初始化行为<br>    2. enter 的返回值被 with 语句的目标或者 as 后的名字绑定<br><br>__exit__(self, exctype, excvalue, traceback)<br>    1. 定义当一个代码块被执行或者终止后上下文管理器应该做什么<br>    2. 一般被用来处理异常，清除工作或者做一些代码块执行完毕之后的日常工作<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>coding tricks</category>
      
    </categories>
    
    
    <tags>
      
      <tag>coding tricks</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python装饰器</title>
    <link href="/2024/01/24/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/decorator/"/>
    <url>/2024/01/24/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Python%E6%A8%A1%E5%9D%97%E5%B7%A5%E5%85%B7/decorator/</url>
    
    <content type="html"><![CDATA[<h1 id="python装饰器用法"><a class="markdownIt-Anchor" href="#python装饰器用法"></a> Python装饰器用法：</h1><h2 id="闭包"><a class="markdownIt-Anchor" href="#闭包"></a> 闭包</h2><p>​首先要了解一个概念，闭包一句话说就是，在函数中再嵌套一个函数，并且引用外部函数的变量，这就是一个闭包了：</p><h2 id="函数装饰器"><a class="markdownIt-Anchor" href="#函数装饰器"></a> 函数装饰器</h2><p>​装饰器就是一个闭包，装饰器是闭包的一种应用。<strong>python装饰器就是接受待装饰的函数的函数</strong>，用于拓展原来函数功能的一种函数（给函数加上装饰），<strong>这个函数的特殊之处在于它的返回值也是一个函数，使用python装饰器的好处就是在不用更改原函数的代码前提下给函数增加新的功能</strong>。使用时，再需要的函数前加上@demo即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">debug</span>(<span class="hljs-params">func</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[DEBUG]: enter &#123;&#125;()&quot;</span>.<span class="hljs-built_in">format</span>(func.__name__))<br>        <span class="hljs-keyword">return</span> func()<br>    <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@debug</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>)<br><br>hello()<br>-----------------------------<br>&gt;&gt;&gt;[DEBUG]: enter hello()<br>&gt;&gt;&gt;hello<br></code></pre></td></tr></table></figure><p>​例子中的装饰器给函数加上一个进入函数的debug模式，这时候调用 <code>hello()</code> 完全等价于没有装饰器时候使用 <code>bebug(hello)</code>，不用修改原函数代码就完成了这个功能，可以说是很方便了。</p><h2 id="带参数的装饰器"><a class="markdownIt-Anchor" href="#带参数的装饰器"></a> 带参数的装饰器</h2><p>​装饰器可以通过加一些参数拓展功能，这时候还需要再在外层加装一层函数以接受装饰器的参数，第二层函数才接受被装饰的函数，即装饰器共有三层函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">logging</span>(<span class="hljs-params">level</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">outwrapper</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[&#123;0&#125;]: enter &#123;1&#125;()&quot;</span>.<span class="hljs-built_in">format</span>(level, func.__name__))<br>            <span class="hljs-keyword">return</span> func(*args, **kwargs)<br>        <span class="hljs-keyword">return</span> wrapper<br>    <span class="hljs-keyword">return</span> outwrapper<br><br><span class="hljs-meta">@logging(<span class="hljs-params">level=<span class="hljs-string">&quot;INFO&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">a, b, c</span>):<br>    <span class="hljs-built_in">print</span>(a, b, c)<br><br>hello(<span class="hljs-string">&quot;hello,&quot;</span>,<span class="hljs-string">&quot;good&quot;</span>,<span class="hljs-string">&quot;morning&quot;</span>)<br>-----------------------------<br>&gt;&gt;&gt;[INFO]: enter hello()<br>&gt;&gt;&gt;hello, good morning<br></code></pre></td></tr></table></figure><p>​上面例子中，装饰器中可以传入参数，先形成一个完整的装饰器，然后再来装饰函数，当然<strong>函数如果需要传入参数也是可以的，用不定长参数符号就可以接收</strong>。这里调用 <code>hello()</code> 等价于使用没有装饰器时的 <code>outwrapper = logging(&quot;hello&quot;), wrapper = outwrapper(&quot;outwrapper&quot;) hello = wrapper(&quot;good&quot;,&quot;morning&quot;)</code></p><h2 id="装饰器类"><a class="markdownIt-Anchor" href="#装饰器类"></a> 装饰器类</h2><p>​装饰器类仍然是以函数为参数的闭包，仍然可以用传入函数参数来理解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, func</span>):<br>        self.func = func<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        start = time.time()<br>        ret = self.func(*args, **kwargs)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time:<span class="hljs-subst">&#123;time.time() - start&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> ret<br><br><span class="hljs-meta">@Timer</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> a + b<br><span class="hljs-comment"># 等价于</span><br>add = Timer(add)<br><span class="hljs-built_in">print</span>(add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>))<br>-----------------------------<br>&gt;&gt;&gt;Time: <span class="hljs-number">1.192e-6</span><br>&gt;&gt;&gt;<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>就等价于通过 <code>add</code> 实例化了一个 <code>Timer</code> 对象</p><h2 id="进阶带参数的装饰器类"><a class="markdownIt-Anchor" href="#进阶带参数的装饰器类"></a> 进阶：带参数的装饰器类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, prefix</span>):<br>        self.prefix = prefix<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            start = time.time()<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time:<span class="hljs-subst">&#123;time.time() - start&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@Timer(<span class="hljs-params">prefix=<span class="hljs-string">&quot;curr_time: &quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> a + b<br><span class="hljs-comment"># 等价于</span><br>add = Timer(prefix=<span class="hljs-string">&quot;curr_time: &quot;</span>)(add)<br><span class="hljs-built_in">print</span>(add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>))<br></code></pre></td></tr></table></figure><p>​此时仍然可以类比上面的带参数的函数装饰器，也可以视为三层函数，第一层函数由 <code>__init__</code> 函数承担</p><h2 id="类装饰器"><a class="markdownIt-Anchor" href="#类装饰器"></a> 类装饰器</h2><p>​为什么类还能装饰函数？从Python底层来看，函数和类都是对象，函数既然能修饰类，类就能修饰函数（不过这个用得少，看看就行）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_str</span>(<span class="hljs-params">cls</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(self.__dict__)<br>    <span class="hljs-comment"># 把cls的__str__给替换为了__str__</span><br>    cls.__str__ = __str__<br>    <span class="hljs-keyword">return</span> cls<br><br><span class="hljs-meta">@add_str</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyObject</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, a, b</span>):<br>        self.a = a<br>        self.b = b<br><br><span class="hljs-comment"># 等价于</span><br>MyObject = add_str(MyObject)<br><br>o = MyObject(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(o)    <span class="hljs-comment">#自动调用__str__魔术方法</span><br></code></pre></td></tr></table></figure><p>上面的代码本质就是重载了一下 <code>__str__</code> 函数</p><h2 id="类里面的装饰器"><a class="markdownIt-Anchor" href="#类里面的装饰器"></a> 类里面的装饰器</h2><p>​把装饰器挪到类里面，本质上就相当于把一个函数变成类的方法，最容易想到的类里面的装饰器如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">self, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br>d = Decorators()<br><span class="hljs-meta">@d.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>但这样写我们是很不爽的，首先，为了调用这个装饰器我们还需要实例化这个类，这样写太麻烦了；其次，装饰器里面的 <code>self</code> 参数我们压根就没有用到它。于是Python有了一个 classmethod，<strong>把只能用对象调用的方法变成了类可以调用的方法</strong>，代码可改为如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">cls, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">@Decorators.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>但是这个 classmethod 里面第一个参数 cls 我们依然没有使用，如果我们只想把装饰器放在类里面封装，而和类和对象都无关的时候，装饰器可以使用 staticmethod，直接把第一个参数删掉，其他都不变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">@Decorators.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h3 id="一个新的问题"><a class="markdownIt-Anchor" href="#一个新的问题"></a> 一个新的问题</h3><p>​如果我们想用类里面的装饰器去装饰类里面的方法怎么办？我们的自然想法是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">    @log_function</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">self, n</span>):<br>        <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> self.fib(n-<span class="hljs-number">1</span>) + self.fib(n-<span class="hljs-number">2</span>)<br>d = Decorators()<br>d.fib(<span class="hljs-number">3</span>)<br><br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">3</span>)<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">2</span>)<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">1</span>)<br>function end!<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">0</span>)<br>function end!<br>function end!<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">1</span>)<br>function end!<br>function end!<br></code></pre></td></tr></table></figure><p>​虽然这样确实能够正常运行，但没有人在Python中这样写代码，我们非常不习惯在 class 内部有着没有 self 参数的函数</p><p>​值得一提的是，在 class 之外，我们不能通过 <code>d.log_function() </code> 调用函数，而只能使用<code>Decorators.log_function()</code> 调用（原因很底层，我不知道）</p><p>最终问题是：我们想把这个装饰器和方法全部在类里面封装，即装饰器只能在类里面正常使用，而在类之外，只能通过类和对象正常使用怎么办？答案是在 log_function 后加上 <code>log_function = staticmethod(log_function)</code> 这一行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">    @log_function</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">self, n</span>):<br>        <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> self.fib(n-<span class="hljs-number">1</span>) + self.fib(n-<span class="hljs-number">2</span>)<br>    log_function = <span class="hljs-built_in">staticmethod</span>(log_function)<br></code></pre></td></tr></table></figure><h2 id="补充classmethod和staticmethod区别"><a class="markdownIt-Anchor" href="#补充classmethod和staticmethod区别"></a> 补充：classmethod和staticmethod区别</h2><p>声明时：</p><ul><li>classmethod的第一个参数为类本身(cls)，正如实例方法的第一个参数为对象本身(self);</li><li>staticmethod第一个参数不需要传入cls或self，故staticmethod中是无法访问类和对象的数据的。</li></ul><p>调用时：</p><ul><li>都可用类名直接调用</li><li>也可用实例对象调用（不推荐，没必要）</li></ul>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>coding tricks</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>F.grid_sample详解</title>
    <link href="/2024/01/20/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/grid-sample/"/>
    <url>/2024/01/20/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/grid-sample/</url>
    
    <content type="html"><![CDATA[<h1 id="fgrid_sample-计算细节"><a class="markdownIt-Anchor" href="#fgrid_sample-计算细节"></a> <code>F.grid_sample</code> 计算细节</h1><p>​该采样函数的接口声明如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.nn.functional.grid_sample(<span class="hljs-built_in">input</span>, grid, mode=‘bilinear’, padding_mode=‘zeros’, align_corners=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>函数内部先回将根据特征图 input 的大小将坐标规范化到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，规范化坐标如下图所示，可以发现：<strong>特征图的坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 对应的是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w,h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span>，这点和 Opencv 的规定相同，而不是按数学上的矩阵索引规律</strong></p><p><img src="/2024/01/20/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/grid-sample/1.png" alt="归一化坐标"></p><p>​因此使用 <code>torch.meshgird</code> 生成网格坐标的时候，要使用 <code>indexing='xy'</code> 或者 <code>transpose()</code> 方法（以两倍上采样为例）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">h = torch.linspace(-h/<span class="hljs-number">2</span> + <span class="hljs-number">0.5</span>, h/<span class="hljs-number">2</span> - <span class="hljs-number">0.5</span>, h) / (h/<span class="hljs-number">2</span>)<br>w = torch.linspace(-w/<span class="hljs-number">2</span> + <span class="hljs-number">0.5</span>, w/<span class="hljs-number">2</span> - <span class="hljs-number">0.5</span>, w) / (w/<span class="hljs-number">2</span>)<br>init_pos = torch.stack(torch.meshgrid(w, h, indexing=<span class="hljs-string">&#x27;xy&#x27;</span>))<br><span class="hljs-built_in">print</span>(init_pos)<br><br>```<br>init_pos:<br>tensor([[[[-<span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.7500</span>], <br>          [-<span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.7500</span>], <br>          [ <span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.7500</span>], <br>          [ <span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.7500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.2500</span>], <br>          [-<span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.2500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.2500</span>], <br>          [-<span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.2500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.7500</span>],<br>          [-<span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.7500</span>],<br>          [ <span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.7500</span>],<br>          [ <span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.7500</span>]]]])<br>```<br></code></pre></td></tr></table></figure><p>​上面计算过程又引出一个问题：h 和 w为什么是那样计算的？</p><p><img src="/2024/01/20/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/grid-sample/2.png" alt="格点和网点"></p><p>​如上图所示，<code>F.grid_sample</code> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 处坐标对应着图像的正中心（上右图中的中心红点），右上角的绿点的坐标对应着才是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，如果我们要生成 target pixel 的坐标，那么图上的情形为 h = w = 8，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 区间内对应有 4 个点，归一化前每个点间隔为1，则归一化前右上角坐标为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>4</mn><mo separator="true">,</mo><mo>−</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-4, -4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mclose">)</span></span></span></span>，最右上角 target source 坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>3.5</mn><mo separator="true">,</mo><mo>−</mo><mn>3.5</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-3.5,-3.5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">3</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，归一化后为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>0.875</mn><mo separator="true">,</mo><mn>0.875</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-0.875,0.875)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">7</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">7</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，同样的方法可以解释上面的代码和结果</p><p>​注：padding_mode 参数会对结果造成影响，在 dysample 中选用 <code>padding_mode='border'</code></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch可复现性</title>
    <link href="/2024/01/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch%E5%8F%AF%E5%A4%8D%E7%8E%B0%E6%80%A7/"/>
    <url>/2024/01/19/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/Pytorch%E5%8F%AF%E5%A4%8D%E7%8E%B0%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch结果可复现性问题"><a class="markdownIt-Anchor" href="#pytorch结果可复现性问题"></a> Pytorch结果可复现性问题</h1><p>​在我比较不同的采样过程对评价指标的影响时，发现由于计算机的随机性对评价指标有着很大的影响，这种影响带来的不确定性在下游任务中大到根本分辨不出来哪种采样过程效果更好。这篇文章专门用于解决控制 Pytorch 中的随机性问题</p><h2 id="随机性的产生"><a class="markdownIt-Anchor" href="#随机性的产生"></a> 随机性的产生：</h2><ol><li><strong>非确定性操作：</strong> 有些操作在 GPU 上可能是非确定性的，即使设置了随机种子也无法完全确保结果的一致性。一些涉及CUDA加速的操作，比如某些优化算法，可能会引入不确定性</li><li><strong>数据加载过程：</strong> 如果在数据加载过程中存在随机性，即使设置了随机种子，每次加载的数据顺序或样本可能仍然不同。确保你的数据加载过程是确定性的，或者在设置种子的同时使用相同的数据加载方式</li><li><strong>多线程操作：</strong> 如果你的代码中使用了多线程或多进程，这可能导致并发操作的非确定性。确保在设置种子的同时，对多线程或多进程进行适当的同步和控制，以避免不一致的结果</li><li><strong>PyTorch版本差异：</strong> PyTorch 的不同版本可能会有微小的实现差异，可能会影响结果的一致性。确保在相同的PyTorch版本下运行代码</li></ol><p>我在之前简单任务中使用 CPU 实验的时候，只需要设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">set_seed</span>(<span class="hljs-params">seed</span>):<br>    random.seed(seed)<br>    np.random.seed(seed)<br>    torch.manual_seed(seed)<br></code></pre></td></tr></table></figure><p>就可以保证结果的可复现性了，但是如果在 GPU 上进行实验，GPU 会引入新的随机性，这就产生了新的问题，即在 GPU 上如何保证结果可复现性</p><h2 id="在gpu上保证可复现性"><a class="markdownIt-Anchor" href="#在gpu上保证可复现性"></a> 在GPU上保证可复现性：</h2><h3 id="方法一将线程数设置为0"><a class="markdownIt-Anchor" href="#方法一将线程数设置为0"></a> 方法一：将线程数设置为0</h3><p>​GPU 引入随机性的原因来源于它的并行计算和 cuda 的随机优化算法，如果我们将它设置为 <code>num_workers = 0</code> 和禁止使用 cuda 随机优化，就可以保证结果可复现，但是这样运行速度就太慢了，失去了 GPU 的意义</p><h3 id="方法二设置cuda的种子"><a class="markdownIt-Anchor" href="#方法二设置cuda的种子"></a> 方法二：设置cuda的种子</h3><p>​事实上，GPU 也可以设置随机种子，我们需要把随机种子设置中加上一些 cuda 的种子和禁止 cuda 进行不可复现的算法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup_seed</span>(<span class="hljs-params">seed</span>):<br>   torch.manual_seed(seed)<br>   os.environ[<span class="hljs-string">&#x27;PYTHONHASHSEED&#x27;</span>] = <span class="hljs-built_in">str</span>(seed)<br>   torch.cuda.manual_seed(seed)<br>   torch.cuda.manual_seed_all(seed)<br>   np.random.seed(seed)<br>   random.seed(seed)<br>   torch.backends.cudnn.benchmark = <span class="hljs-literal">False</span><br>   torch.backends.cudnn.deterministic = <span class="hljs-literal">True</span><br>   torch.backends.cudnn.enabled = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><p>​这样也会导致运行速度很慢</p><h3 id="方法三使用pytorch-lightning"><a class="markdownIt-Anchor" href="#方法三使用pytorch-lightning"></a> 方法三：使用Pytorch-lightning</h3><p>​Pytorch-lightning 是对 Pytorch 的封装，省去很多繁琐的中间过程，使用起来非常方便。为了确保可复现性，pl 提供了设置接口，非常简洁方便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> lightning.pytorch <span class="hljs-keyword">import</span> Trainer, seed_everything<br>seed_everything(<span class="hljs-number">42</span>, workers=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># sets seeds for numpy, torch and python.random.</span><br>trainer = Trainer(deterministic=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>​设置 workers=True 会确保在dataloader中的多线程的可复现性, 并且确保各线程得到各自独特的不会重复的种子，避免因为相同的种子导致相同的数据增强</p><p>​deterministic决定pytorch是否使用确定性算法，默认False, 设置True会使pytorch使用确定性算法</p><p><strong>通过上述pl设置，主要有以下优点（重点！）：</strong></p><ul><li><strong>保证了可复现的同时，没有牺牲任何训练速度</strong></li><li><strong>设置非常简单方便</strong></li></ul><h3 id="方法四pytorch检验可复现性"><a class="markdownIt-Anchor" href="#方法四pytorch检验可复现性"></a> 方法四：Pytorch检验可复现性</h3><p>​Pytorch 2.1 版本以后都支持 <code>torch.use_deterministic_algorithms</code> 这一检验可复现性的函数，它如果检验到在算法中存在不确定性就会弹出 RuntimeError 的错误，下面是一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-comment"># Set the seed for generating random numbers</span><br>torch.manual_seed(<span class="hljs-number">0</span>)<br><span class="hljs-comment"># Enable deterministic algorithms</span><br>torch.use_deterministic_algorithms(<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># Create a tensor with random values</span><br>x = torch.randn(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<br><span class="hljs-comment"># Perform an operation that is non-deterministic</span><br>y = x.view(-<span class="hljs-number">1</span>)<br><span class="hljs-comment"># This will raise a RuntimeError because `view()` is non-deterministic</span><br></code></pre></td></tr></table></figure><p>​如果需要使用 <code>view()</code> 函数，可以使用 <code>torch.reshape()</code> 函数来代替，因为 <code>torch.reshape()</code> 是确定性的，这是因为 <code>view()</code> 函数只适用于连续的张量，而<code>reshape()</code>函数可以用于连续和不连续的张量。这是因为 <code>view()</code> 函数的实现依赖于张量的步幅（stride），而步幅是在张量的存储中定义的。如果张量不是连续的，则步幅可能会发生变化，从而导致 <code>view()</code> 函数的结果不确定。相反，<code>reshape()</code> 函数不依赖于步幅，因此可以用于连续和不连续的张量，具有更好的鲁棒性</p>]]></content>
    
    
    <categories>
      
      <category>Pytorch学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pytorch项目经验</title>
    <link href="/2023/12/13/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/"/>
    <url>/2023/12/13/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch项目经验"><a class="markdownIt-Anchor" href="#pytorch项目经验"></a> Pytorch项目经验</h1><h2 id="一些通用目录结构"><a class="markdownIt-Anchor" href="#一些通用目录结构"></a> 一些通用目录结构：</h2><ul><li><p><code>utils</code> 目录：（<strong>utility functions</strong>）一般存放通用的文件，工具，例如 <a href="http://gpu.py">gpu.py</a>，<a href="http://dataset.py">dataset.py</a>，<a href="http://tools.py">tools.py</a></p></li><li><p><code>tools</code> 目录：：类似 utils 目录，也存放辅助工具或组件，相较于 utils 工具更具针对性</p></li><li><p><code>config</code> 目录：存放配置文件，**当训练需要设置的参数很多时，要习惯通过文件导入参数。**此时参数文件就可以存放在 config 目录中</p></li><li><p><code>local_config</code> 目录：<strong>存放个人配置文件</strong>，用于客制化配置信息</p></li><li><p><code>weight/pretrained</code> 目录：存放模型训练文件，训练好的模型参数等数据就保存在这个文件夹</p></li><li><p><code>model</code> 目录：存放网络设计文件，例如将网络划分为特征提取，特征融合，预测等几个部分，这写部分就可以在 model 目录下再新建目录存放，例如 <code>neck backbone head</code></p></li><li><p><code>data</code> 目录：顾名思义存放训练数据，注意数据存放条理，不同数据分为几个文件夹下保存</p></li><li><p><code>eval/evaluation</code> 目录：用于存放评估模型的各种指标的程序，例如评估模型的 AP 指标等</p></li><li><p><code>demo</code> 目录：用于进行 inference（推理）操作，使用预训练好的模型进行前向传播</p></li><li><p>最外面一般放置总的程序入口文件，通过这个入口逐级网上查看代码可以迅速理解整个项目的结果</p></li><li><p>如果一个文件夹内程序需要调用另外一个同级或上级文件夹内的程序时，可以使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br>sys.path.append(<span class="hljs-string">&quot;..&quot;</span>)<br><span class="hljs-keyword">import</span> config.YOLO_config.py <span class="hljs-keyword">as</span> cfg<br></code></pre></td></tr></table></figure></li></ul><h2 id="一些特殊的目录和文件"><a class="markdownIt-Anchor" href="#一些特殊的目录和文件"></a> 一些特殊的目录和文件：</h2><h2 id="pycharm上传服务器训练"><a class="markdownIt-Anchor" href="#pycharm上传服务器训练"></a> Pycharm上传服务器训练</h2><ul><li>配置项目解释器时，在设置里面选择添加解释器–SSH–现有的解释器，<strong>不要随便选择创建虚拟解释器！选择本地解释器</strong></li><li>数据集较大的时候，将数据集压缩再上传（<strong>这时候不要选择自动同步本地与服务器了</strong>），传递完成之后本地甚至不需要数据集</li><li>想要上传或者下载目标文件夹或者文件时，只需要在左侧的目录树中对着相应的文件或文件夹右键，选择部署再选择上传还是下载即可</li><li>在 Tools 中选择部署–浏览远程主机可以对远程服务器文件进行操作（或者在右侧工具栏中直接有一个选项是“远程主机”），选择对应的文件右键可以选择上传或者下载相应的文件，也可以直接操作远程服务器文件，例如将一个文件复制到另一个路径（<strong>右键点击的是哪个路径目录，而不是在那个路径里面点击</strong>）</li></ul>]]></content>
    
    
    <categories>
      
      <category>deep learnin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>einops</title>
    <link href="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/"/>
    <url>/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/</url>
    
    <content type="html"><![CDATA[<h1 id="einops-和-einsum-的使用einops"><a class="markdownIt-Anchor" href="#einops-和-einsum-的使用einops"></a> <code>einops</code> 和 <code>einsum</code> 的使用——einops</h1><p>​einops 库操作可以替代全部的张量形状变换操作，注：类似于 Pytorch 中 <code>torch.nn</code> 和 <code>torch.nn.function</code> 的关系，如果像把 <code>rearrange</code> 操作放在 <code>__init__</code> 中就规定，可以使用 <code>einops.layers.torch</code> 模块中的 <code>Rearrange</code> 函数</p><h2 id="einopsrearrange"><a class="markdownIt-Anchor" href="#einopsrearrange"></a> einops.rearrange</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ims = numpy.load(<span class="hljs-string">&#x27;./test_images.npy&#x27;</span>, allow_pickle=<span class="hljs-literal">False</span>)<br><span class="hljs-comment"># ims中有六张图片，分别为einops的RGB图像</span><br></code></pre></td></tr></table></figure><p>ims 张量的形状为 (6, 96, 96, 3)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.imshow(ims[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/1.png" alt="png"></p><p>下面使用einops表示操作过程</p><h3 id="矩阵转置"><a class="markdownIt-Anchor" href="#矩阵转置"></a> 矩阵转置：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> einops <span class="hljs-keyword">import</span> rearrange, reduce, repeat<br>img=rearrange(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; w h c&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/2.png" alt="png"><br>​</p><h2 id="将维度融合操作"><a class="markdownIt-Anchor" href="#将维度融合操作"></a> 将维度融合操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># [6, 96, 96, 3] -&gt; [96, (6 * 96), 3]</span><br>rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; h (b w) c&#x27;</span>).shape<br></code></pre></td></tr></table></figure><p>融合之后的大小为 (96, 576, 3) ，这里 b,w 的顺序很重要，后面进行解释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># rearrange 不仅仅可以只对一维进行融合操作</span><br>rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; (b h w c)&#x27;</span>).shape<br></code></pre></td></tr></table></figure><h3 id="维度拆分操作"><a class="markdownIt-Anchor" href="#维度拆分操作"></a> 维度拆分操作</h3><p>​<strong>我们将源文件的后三维压缩，视为一张张图片个体，图片在平面中的排列（位置关系）代表着第一维的信息</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 下面操作使将图片的第一维拆分</span><br>rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; b1 b2 h w c &#x27;</span>, b1=<span class="hljs-number">2</span>).shape<br>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">96</span>, <span class="hljs-number">96</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h4 id="将文件的第一维拆分并融入到-h-和-w-维中"><a class="markdownIt-Anchor" href="#将文件的第一维拆分并融入到-h-和-w-维中"></a> 将文件的第一维拆分并融入到 h 和 w 维中</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b1 h) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/3.png" alt="png"><br>​</p><p>​<strong>注意这里b1 b2的位置和对应关系很重要，类似于我们的数字表示法，（b1, b2）代表着是在第一维中，每b1个小图片为一个小batch，这些小batch总共会有b2个，那么在上面的例子中，由于顺序是 einops 每三个分组就是 ein 和 ops，再将它们嵌入高宽里面，（b1, h）同样代表着小batch是 h，总共有2个小batch，因此竖着看会有两张图片（把b1嵌入到 h 的维度中去了）；同理（b2， w）的情况</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这种分割方式就是两个图片为一个小batch（哪个b1 b2方向在后面就从哪个嵌入的维度开始排）</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b2 b1) h w c -&gt; (b1 h) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/4.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 同理将b2 b1在后方交换的情况</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b2 h) (b1 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/5.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这里在输出中将h放在b1的前面，那么可以看做每张图像的像素每一行互相嵌入 </span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (h b1) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/6.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 一个稍微特殊的情况，将图片的宽嵌入到了高里面，相当于把图像拉伸</span><br>img =rearrange(ims, <span class="hljs-string">&#x27;b h (w w2) c -&gt; (h w2) (b w) c&#x27;</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/7.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># w2位于w前，一列共有两个图像（把一个图像密切再重排，这里两个图片只是看起来像，它们拼起来才是原图片）</span><br>img =rearrange(ims, <span class="hljs-string">&#x27;b h (w w2) c -&gt; (w2 h) (b w) c&#x27;</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/8.png" alt="png"><br>​</p><h2 id="einopsreduce"><a class="markdownIt-Anchor" href="#einopsreduce"></a> einops.reduce</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 在原np操作中，若要对最后一位进行求平均操作要使用x.mean(-1)</span><br><span class="hljs-comment"># 可以代替为</span><br>reduce(x, <span class="hljs-string">&#x27;b h w c -&gt; b h w&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># average over batch</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; h w c&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>)<br><span class="hljs-comment"># ims.mean(axis=0)</span><br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/9.png" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 还同时对两个维度进行降维：</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; h w&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/10.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 甚至可以通过reduce函数进行平均值池化（可以看出reduce里面内置了rearrange函数）</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b (h h2) (w w2) c -&gt; h (b w) c&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>, h2=<span class="hljs-number">2</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/11.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 压缩通道的例子</span><br>img = reduce(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b2 h) (b1 w)&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/12.png" alt="png"></p><h2 id="添加或者缩减维度"><a class="markdownIt-Anchor" href="#添加或者缩减维度"></a> 添加或者缩减维度</h2><p>​类似于<code>unsqueeze()</code>操作，在目标张量的某一维中添加维度，可以使用1或者（）来进行操作，<strong>( ) 表示在新的维度上不显式指明大小</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; b 1 h w 1 c&#x27;</span>) <span class="hljs-comment"># functionality of numpy.expand_dims</span><br><span class="hljs-built_in">print</span>(x.shape)<br><span class="hljs-built_in">print</span>(rearrange(x, <span class="hljs-string">&#x27;b 1 h w 1 c -&gt; b h w c&#x27;</span>).shape) <span class="hljs-comment"># functionality of numpy.squeeze</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">(6, 1, 96, 96, 1, 3)(6, 96, 96, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 先将每张图片最大像素值显现出来，让后转化回去，将其余像素填0 </span><br>x = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; b () () c&#x27;</span>, <span class="hljs-string">&#x27;max&#x27;</span>) - ims<br><span class="hljs-comment"># 上面的一步没有将维度降下去！！！因为后面与ims进行了计算</span><br><span class="hljs-comment"># x = reduce(ims, &#x27;b h w c -&gt; b () () c&#x27;, &#x27;max&#x27;) 维度变为(6,1,1,3)</span><br><span class="hljs-comment"># x = x - ims 维度变为(6,96,96,3)利用了广播操作</span><br>img = rearrange(x, <span class="hljs-string">&#x27;b h w c -&gt; h (b w) c&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/13.png" alt="png"></p><h2 id="repeating-elements"><a class="markdownIt-Anchor" href="#repeating-elements"></a> Repeating elements</h2><p>​<code>repeat</code> 用于在某个维度上重复，感觉和 <code>np.repeat</code> 差得不多，没有前面的好用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># repeat along a new axis. New axis can be placed anywhere</span><br>repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h new_axis w c&#x27;</span>, new_axis=<span class="hljs-number">5</span>).shape<br>(<span class="hljs-number">96</span>, <span class="hljs-number">5</span>, <span class="hljs-number">96</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># shortcut</span><br>repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h 5 w c&#x27;</span>).shape<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 同样的repeat中内置了rearrange函数，下面的用法和rearrange一样</span><br>img = repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h (w repeat) c&#x27;</span>, repeat=<span class="hljs-number">3</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/14.png" alt="png"></p><h2 id="reduce-repeat"><a class="markdownIt-Anchor" href="#reduce-repeat"></a> Reduce ⇆ repeat</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">repeated = repeat(ims, <span class="hljs-string">&#x27;b h w c -&gt; b h new_axis w c&#x27;</span>, new_axis=<span class="hljs-number">2</span>)<br>reduced = reduce(repeated, <span class="hljs-string">&#x27;b h new_axis w c -&gt; b h w c&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>)<br><span class="hljs-keyword">assert</span> numpy.array_equal(ims, reduced)<br></code></pre></td></tr></table></figure><h2 id="帮助理解的例子"><a class="markdownIt-Anchor" href="#帮助理解的例子"></a> 帮助理解的例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (h b1) (w b2) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/15.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 一个复杂的例子：</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;b (h1 h2 h3) (w1 w2 w3) c -&gt; (h1 w2 h3) (b w1 h2 w3) c&#x27;</span>, h2=<span class="hljs-number">2</span>, w2=<span class="hljs-number">2</span>, w3=<span class="hljs-number">2</span>, h3=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einops/16.png" alt="png"><br>​</p><h1 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h1><ul><li><code>rearrange</code> doesn’t change number of elements and covers different numpy functions (like <code>transpose</code>, <code>reshape</code>, <code>stack</code>, <code>concatenate</code>,  <code>squeeze</code> and <code>expand_dims</code>)</li><li><code>reduce</code> combines same reordering syntax with reductions (<code>mean</code>, <code>min</code>, <code>max</code>, <code>sum</code>, <code>prod</code>, and any others)</li><li><code>repeat</code> additionally covers repeating and tiling</li><li>composition and decomposition of axes are a corner stone, they can and should be used together</li></ul>]]></content>
    
    
    <categories>
      
      <category>Pytorch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Pytorch张量高效操作计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>einsum</title>
    <link href="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einsum/"/>
    <url>/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einsum/</url>
    
    <content type="html"><![CDATA[<h1 id="einops-和-einsum-的使用einsum"><a class="markdownIt-Anchor" href="#einops-和-einsum-的使用einsum"></a> <code>einops</code> 和 <code>einsum</code> 的使用——einsum</h1><p>einsum是一个强大的执行爱因斯坦求和约定的函数，他几乎可以进行张量的所有运算，加上改变张量形状的einops库，它们可以使代码更加易读。它们的主要区别如下：</p><ol><li><strong>表达能力：</strong><ul><li><code>einops</code> 提供了更广泛的张量操作，包括但不限于求和。它可以用于重排、合并、拆分等各种操作，使得代码更具灵活性</li><li><code>einsum</code> 主要用于执行张量的求和操作，虽然可以通过合适的字符串表示式执行其他操作，但相对而言，其表达能力不如 <code>einops</code> 多样</li></ul></li><li><strong>直观性：</strong><ul><li><code>einops</code> 的语法更加直观，它使用一些关键词来描述张量操作，使得代码更易读。</li><li><code>einsum</code> 使用字符串表示式，这种表示方式相对于<code>einops</code>比较难懂</li></ul></li><li><strong>性能：</strong><ul><li>在一些情况下，<code>einops</code> 可能在性能上稍逊于 <code>einsum</code>。<code>einsum</code> 的实现经过了高度优化，特别是在使用NumPy等库时，它可以通过C语言加速执行，因此在某些情况下可能更快</li></ul></li><li><strong>使用场景：</strong><ul><li><code>einops</code> 更适合需要进行各种复杂张量操作的情况，特别是需要频繁改变张量形状的情况</li><li><code>einsum</code> 更适合执行相对简单的张量求和操作，尤其是对于数学上常见的张量运算。</li></ul></li></ol><h2 id="einsum的用法"><a class="markdownIt-Anchor" href="#einsum的用法"></a> <code>einsum</code>的用法：</h2><p>einsum实现矩阵乘法的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.rand(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>b = torch.rand(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br>c = torch.einsum(<span class="hljs-string">&quot;ik,kj-&gt;ij&quot;</span>, [a, b])<br><span class="hljs-comment"># 等价操作 torch.mm(a, b)</span><br></code></pre></td></tr></table></figure><p>einsum 的第一个参数 “ik,kj-&gt;ij”，该字符串（下文以 equation 表示）表示了输入和输出张量的维度。equation 中的箭头左边表示输入张量，以逗号分割每个输入张量，箭头右边则表示输出张量。<strong>表示维度的字符只能是26个英文字母 ‘a’ - ‘z’</strong>。</p><p>而 einsum 的第二个参数表示实际的输入张量列表，其数量要与 equation 中的输入数量对应。同时对应每个张量的 子 equation 的字符个数要与张量的真实维度对应，比如 “ik,kj-&gt;ij” 表示输入和输出张量都是两维的。</p><h3 id="基本规则"><a class="markdownIt-Anchor" href="#基本规则"></a> 基本规则：</h3><ul><li>规则一，equation 箭头左边，在不同输入之间重复出现的索引表示，把输入张量沿着该维度做乘法操作，以上面矩阵乘法为例， “ik,kj-&gt;ij”，k 在输入中重复出现，所以就是把 a 和 b 沿着 k 这个维度作相乘操作</li><li>规则二，只出现在 equation 箭头左边的索引，表示中间计算结果需要在这个维度上求和，也就是上面提到的求和索引</li><li>规则三，equation 箭头右边的索引顺序可以是任意的，比如上面的 “ik,kj-&gt;ij” 如果写成 “ik,kj-&gt;ji”，那么就是<strong>返回输出结果的转置</strong>，用户只需要定义好索引的顺序，转置操作会在 einsum 内部完成</li></ul><h3 id="特殊规则"><a class="markdownIt-Anchor" href="#特殊规则"></a> <strong>特殊规则</strong></h3><p>特殊规则有两条：</p><ul><li>equation <strong>可以不写包括箭头在内的右边部分（不推荐）</strong>，那么在这种情况下，输出张量的维度会根据默认规则推导。就是把输入中只出现一次的索引取出来，然后按字母表顺序排列，比如上面的矩阵乘法 “ik,kj-&gt;ij” 也可以简化为 “ik,kj”，根据默认规则，输出就是 “ij” 与原来一样；</li><li>equation 中支持 “…” <strong>省略号（不推荐），用于表示并不关心的索引</strong>，比如只对一个高维张量的最后两维做转置可以这么写：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>)<br><span class="hljs-comment"># i = 7, j = 9</span><br>b = torch.einsum(<span class="hljs-string">&#x27;...ij-&gt;...ji&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="矩阵转置"><a class="markdownIt-Anchor" href="#矩阵转置"></a> 矩阵转置：</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol B_{ji} = \boldsymbol A_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij-&gt;ji&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="求和"><a class="markdownIt-Anchor" href="#求和"></a> 求和</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>j</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">b=\sum_i \sum_j \boldsymbol A_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij-&gt;&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="点积"><a class="markdownIt-Anchor" href="#点积"></a> 点积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c=\sum_i a_ib_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">3</span>, <span class="hljs-number">6</span>)<br>torch.einsum(<span class="hljs-string">&#x27;i,i-&gt;&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="hardmard积"><a class="markdownIt-Anchor" href="#hardmard积"></a> Hardmard积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ij}= \boldsymbol A_{ij} \boldsymbol B_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">6</span>, <span class="hljs-number">12</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij,ij-&gt;ij&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="外积"><a class="markdownIt-Anchor" href="#外积"></a> 外积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">a</mi><mi>i</mi></msub><msub><mi mathvariant="bold-italic">b</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ij} = \boldsymbol a_i \boldsymbol b_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">3</span>, <span class="hljs-number">7</span>)<br>torch.einsum(<span class="hljs-string">&#x27;i,j-&gt;ij&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="batch矩阵相乘"><a class="markdownIt-Anchor" href="#batch矩阵相乘"></a> <strong>batch矩阵相乘</strong></h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi><mi>l</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>k</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ijl} = \sum_k \boldsymbol A_{ijk}A_{ikl}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3521180000000004em;vertical-align:-1.3021129999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">a = torch.randn(3,2,5)<br>b = torch.randn(3,5,3)<br>torch.einsum(&#x27;ijk,ikl-&gt;ijl&#x27;, [a, b])<br></code></pre></td></tr></table></figure><h4 id="张量缩约上面例子的一般版本"><a class="markdownIt-Anchor" href="#张量缩约上面例子的一般版本"></a> 张量缩约（上面例子的一般版本）</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>p</mi><mi>s</mi><mi>t</mi><mi>u</mi><mi>v</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>q</mi></munder><munder><mo>∑</mo><mi>r</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>p</mi><mi>q</mi><mi>r</mi><mi>s</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>t</mi><mi>u</mi><mi>q</mi><mi>v</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{pstuv} = \sum_q \sum_r \boldsymbol A_{pqrs} \boldsymbol B_{tuqvr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4361180000000004em;vertical-align:-1.386113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>注意：在相乘维度上元素个数一定要相同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>)<br>b = torch.randn(<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">3</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>)<br>torch.einsum(<span class="hljs-string">&#x27;pqrs,tuqvr-&gt;pstuv&#x27;</span>, [a, b]).shape<br>torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>])<br></code></pre></td></tr></table></figure><h4 id="双线性变换einsum可用于超过两个张量的计算"><a class="markdownIt-Anchor" href="#双线性变换einsum可用于超过两个张量的计算"></a> <strong>双线性变换</strong>(einsum可用于超过两个张量的计算)</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">D</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><munder><mo>∑</mo><mi>l</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>j</mi><mi>k</mi><mi>l</mi></mrow></msub><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol D_{ij} = \sum_k \sum_l \boldsymbol A_{ik} \boldsymbol B_{jkl} \boldsymbol A_{il}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3521180000000004em;vertical-align:-1.3021129999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>b = torch.randn(<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>)<br>c = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">7</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ik,jkl,il-&gt;ij&#x27;</span>, [a, b, c])<br></code></pre></td></tr></table></figure><h2 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h2><p><img src="/2023/12/10/%E5%90%84%E7%A7%8D%E8%AF%AD%E8%A8%80/Python/Pytorch%E5%AD%A6%E4%B9%A0/einsum/1.png" alt="img"></p><p>用传统写法实现这些可要费不少力气，特别是考虑batch实现。einsum是我们的救星！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 参数</span><br><span class="hljs-comment"># -- [隐藏层维度]</span><br>bM, br, w = random_tensors([<span class="hljs-number">7</span>], num=<span class="hljs-number">3</span>, requires_grad=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># -- [隐藏层维度 x 隐藏层维度]</span><br>WY, Wh, Wr, Wt = random_tensors([<span class="hljs-number">7</span>, <span class="hljs-number">7</span>], num=<span class="hljs-number">4</span>, requires_grad=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># 注意力机制的单次应用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attention</span>(<span class="hljs-params">Y, ht, rt1</span>):<br>    <span class="hljs-comment"># [i为batch大小]</span><br>    tmp = torch.einsum(<span class="hljs-string">&quot;ik,kl-&gt;il&quot;</span>, [ht, Wh]) + torch.einsum(<span class="hljs-string">&quot;ik,kl-&gt;il&quot;</span>, [rt1, Wr])<br>    Mt = F.tanh(torch.einsum(<span class="hljs-string">&quot;ijk,kl-&gt;ijl&quot;</span>, [Y, WY]) + tmp.unsqueeze(<span class="hljs-number">1</span>).expand_as(Y) + bM)<br>    <span class="hljs-comment"># -- [batch大小 x 序列长度]</span><br>    at = F.softmax(torch.einsum(<span class="hljs-string">&quot;ijk,k-&gt;ij&quot;</span>, [Mt, w]))<br>    <span class="hljs-comment"># -- [batch大小 x 隐藏层维度]</span><br>    rt = torch.einsum(<span class="hljs-string">&quot;ijk,ij-&gt;ik&quot;</span>, [Y, at]) + F.tanh(torch.einsum(<span class="hljs-string">&quot;ij,jk-&gt;ik&quot;</span>, [rt1, Wt]) + br)<br>    <span class="hljs-comment"># -- [batch大小 x 隐藏层维度], [batch大小 x 序列维度]</span><br>    <span class="hljs-keyword">return</span> rt, at<br><br><span class="hljs-comment"># 取样仿造输入</span><br><span class="hljs-comment"># -- [batch大小 x 序列长度 x 隐藏层维度]</span><br>Y = random_tensors([<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])<br><span class="hljs-comment"># -- [batch大小 x 隐藏层维度]</span><br>ht, rt1 = random_tensors([<span class="hljs-number">3</span>, <span class="hljs-number">7</span>], num=<span class="hljs-number">2</span>)<br>rt, at = attention(Y, ht, rt1)<br></code></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>einsum是<strong>一个函数走天下</strong>，用例中可以看到，我们仍然需要在einsum之外应用非线性和构造额外维度。类似地，分割、连接、索引张量仍然需要应用其他库函数（einiops就是很好的选择）。</p><p><strong>使用einsum的麻烦之处是你需要手动实例化参数，操心它们的初始化</strong></p>]]></content>
    
    
    <categories>
      
      <category>Pytorch</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Pytorch张量高效操作计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上采样总结-2023</title>
    <link href="/2023/12/05/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/%E4%B8%8A%E9%87%87%E6%A0%B7%E6%80%BB%E7%BB%93-2023/"/>
    <url>/2023/12/05/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/%E4%B8%8A%E9%87%87%E6%A0%B7%E6%80%BB%E7%BB%93-2023/</url>
    
    <content type="html"><![CDATA[<h1 id="上采样工作的总结"><a class="markdownIt-Anchor" href="#上采样工作的总结"></a> 上采样工作的总结</h1><ul><li>CARAFE和IndexNet是最早的上采样工作，它们的创新之处在于将原有的静态上采样过程转变为动态上采样过程.</li><li>A2U是IndexNet的一个发展版本，它将相似度引入了上采样过程中，利用二阶的信息进行上采样过程。CARAFE和IndexNet&amp;A2U的区别在FADE这篇论文中总结，IndexNet&amp;A2U使用的是下采样之前的特征图生成动态核，而CARAFE使用的是下采样之后的特征图生成动态核，一般而言，下采样后的特征图包含的语义信息比下采样前丰富，但细节信息不如下采样前，这就是为什么CARAFE在语义分割方面优于IndexNet和A2U而在图像抠图上表现不如它们两个。</li><li>FADE就利用了这一点（<strong>FADE正是通过实验的这种现象发现并提出的</strong>），将上采样前后的特征图信息同时使用起来进行上采样过程，实现了在抠图和语义分割任务上的通用性。</li><li>SAPA是FADE的进一步发展，类似于A2U和IndexNet的关系，SAPA将相似性引入了FADE进行上采样。</li><li>dysample改变了以前工作生成动态卷积核的视角，将动态卷积核理解为就是点采样过程，权值不同说明的采样点偏向不同，基于这个视角dysample放弃了生成动态卷积核（这正是他极轻量级的原因），转而生成动态采样点坐标，同时与双线性插值联系在一起生成上采样图（<strong>这并不是静态采样，他也是动态的</strong>）。</li></ul>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dysample</title>
    <link href="/2023/12/04/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/dysample/"/>
    <url>/2023/12/04/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/dysample/</url>
    
    <content type="html"><![CDATA[<h1 id="learning-to-sample"><a class="markdownIt-Anchor" href="#learning-to-sample"></a> Learning to sample</h1><p>​本文提出了一种新的极轻量级的高效采样算子（比前面所有的都更好，而且是在几乎各个任务中），主要是基于pytorch中grid_sample函数提出。FADE 和 SAPA 对高分辨率图像的需求在一定程度上限制了它们的应用领域，本文避开了动态卷积过程。dysample不需要原始高分辨率的feature map。</p><h2 id="提出并优化dysample"><a class="markdownIt-Anchor" href="#提出并优化dysample"></a> 提出并优化dysample</h2><p>​设feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>H</mi><mn>1</mn></msub><mo>×</mo><msub><mi>W</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X} \in \mathbb{R}^{C \times H_1 \times W_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，采样集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">S</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mn>2</mn><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{S} \in \mathbb{R}^{2 \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，一维的2表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 两个坐标，设上采样率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>，朴素采样过程为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="script" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>g</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mo stretchy="false">(</mo><mrow><mi mathvariant="script">X</mi><mo separator="true">,</mo><mi mathvariant="script">S</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{X&#x27;}=grid\_sample(\mathcal{X,S})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="script" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X&#x27;} \in \mathbb{R}^{C \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.790992em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，dysample的想法是引入一个输入和输出分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 的线性层生成偏移量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo>∈</mo><msup><mi mathvariant="script">R</mi><mrow><mn>2</mn><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{O} \in \mathcal{R}^{2s^2 \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，每个采样点由”对应点 + 偏移量“的方式决定上采样图中每个点在采样前图中的坐标，使用<code>F.grid_sample</code>函数，将采样集修改为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">S</mi><mo>=</mo><mi mathvariant="script">O</mi><mo>+</mo><mi mathvariant="script">G</mi><mspace linebreak="newline"></mspace><mi mathvariant="script">O</mi><mo>=</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{S}=\mathcal{O}+\mathcal{G} \\\mathcal{O}=linear(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">S</mi></mrow><annotation encoding="application/x-tex">\mathcal{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span></span></span></span> 为采样集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> 为偏移量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> 为采样对应点，由下面代码生成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.stack(torch.meshgrid([coords_w, coords_h])).transpose(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>至此就是 dysample 的雏形，下面我们一步步改进 dysample：</p><h3 id="修改initial-sampling-position"><a class="markdownIt-Anchor" href="#修改initial-sampling-position"></a> 修改initial sampling position</h3><p>​由于上采样前后 feature map 大小的差异，上采样后的特征图中有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点对应采样前的同一个点，这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点的初始坐标都相同，这样就导致了这些点不会区分开来，本质上就是 NN 采样加上了一个偏移量，于是作者将这些点的 initial sampling position 都加上了对应位置的偏离，对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">s=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 的情况，这些点的横纵坐标都分别加上了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo><mn>0.25</mn></mrow><annotation encoding="application/x-tex">\pm 0.25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span>，过程如图所示：</p><p><img src="/2023/12/04/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/dysample/3.png" alt="修改initial sampling position"></p><h3 id="考虑邻域信息"><a class="markdownIt-Anchor" href="#考虑邻域信息"></a> 考虑邻域信息：</h3><p>​在dysample中，如果使用 NN 插值上采样，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathcal{O}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时那么整个采样过程就等价于NN采样，没有考虑到邻域信息，我们将<code>F.grid_sample </code>函数中的 mode 调为 bilinear，这样就能考虑邻域信息</p><h3 id="限制偏移量范围"><a class="markdownIt-Anchor" href="#限制偏移量范围"></a> 限制偏移量范围：</h3><p>​偏移量过大会导致靠近边界处原有语义簇内的点采样到其它语义簇的情况，这样就会导致边界混乱，因此我们要限制偏移量的范围，使用：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0.25</mn><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}=0.25linear(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p>的方式限定了边界范围，<strong>注意：如果使用tanh函数严格控制边界范围反而会导致效果变差，作者在文中给出的解释是太过于严格的边界会限制采样效果，因此在后面中提出了动态边界</strong></p><p><img src="/2023/12/04/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/dysample/1.png" alt="偏移量过大的后果"></p><h3 id="减少参数量"><a class="markdownIt-Anchor" href="#减少参数量"></a> 减少参数量：</h3><p>​类似于在 <code>nn.Conv2d</code> 中的group操作，我们可以将通道分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个 group，这些 group 内共享参数，作者在文中经验性地说明了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">g=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> <strong>是一种较好的选择</strong></p><h3 id="设置动态范围"><a class="markdownIt-Anchor" href="#设置动态范围"></a> 设置动态范围：</h3><p>​将偏移量的范围设置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>0.5</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,0.5]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">]</span></span></span></span> 并以 0.25 为他们的平均值，则偏移量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> 可继续改写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0.5</mn><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>×</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}=0.5sigmoid(linear_1(\mathcal{X})) \times linear_2(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p><img src="/2023/12/04/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/dysample/2.png" alt="Sample"></p><h3 id="使用pl继续减少参数量"><a class="markdownIt-Anchor" href="#使用pl继续减少参数量"></a> 使用PL继续减少参数量</h3><p>​在上面的讨论中，对于每个共享参数的group，我们先使用了CNN生成了大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">s^2 \times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 大小的偏移量张量，再将其形状变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>H</mi><mo>×</mo><mi>s</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">sH \times sW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 接得到了符合上采样后大小的偏移量，<strong>这个过程称为 “linear + pixelshuffle”（LP）</strong>，<strong>为了减少训练的参数量，我们可以考虑减少通道维数</strong>，先进行形状变换操作，即将每个 group <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C \times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 大小的 feature map 形状变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>C</mi><msup><mi>s</mi><mn>2</mn></msup></mfrac><mo>×</mo><mi>s</mi><mi>H</mi><mo>×</mo><mi>s</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">\frac {C}{s^2} \times sH \times sW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> ，再直接通过CNN生成符合上采样后大小形状的偏移量，这个过程称为 <strong>“pixelshuffle + linear” （PL）</strong>，这样通过减少通道数的方式，我们减少了训练参数量</p><p>至此，dysample算子可分为以下四类：</p><ul><li>DySample: LP-style with the static scope factor</li><li>DySample+: LP-style with the dynamic scope factor</li><li>DySample-S: PL-style with the static scope factor</li><li>DySample-S+: PL-style with dynamic scope factor</li></ul><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br>torch.manual_seed(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">normal_init</span>(<span class="hljs-params">module, mean=<span class="hljs-number">0</span>, std=<span class="hljs-number">1</span>, bias=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;weight&#x27;</span>) <span class="hljs-keyword">and</span> module.weight <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.normal_(module.weight, mean, std)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;bias&#x27;</span>) <span class="hljs-keyword">and</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.bias, bias)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">constant_init</span>(<span class="hljs-params">module, val, bias=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;weight&#x27;</span>) <span class="hljs-keyword">and</span> module.weight <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.weight, val)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;bias&#x27;</span>) <span class="hljs-keyword">and</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.bias, bias)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DySample</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, style=<span class="hljs-string">&#x27;lp&#x27;</span>, ratio=<span class="hljs-number">2</span>, groups=<span class="hljs-number">4</span>, dySample=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-built_in">super</span>(DySample, self).__init__()<br>        self.ratio =ratio<br>        self.style = style<br>        self.groups = groups<br>        self.dySample = dySample<br>        <span class="hljs-keyword">assert</span> style <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;lp&#x27;</span>, <span class="hljs-string">&#x27;pl&#x27;</span>]<br>        <span class="hljs-keyword">assert</span> c_in % groups == <span class="hljs-number">0</span><br><br>        <span class="hljs-comment"># upsampling 是分为 linear+pixel-shuffle 和 pixel-shuffle+linear</span><br>        <span class="hljs-comment"># downsampling 分为 linear+pixel-unshuffle 和 pixel-unshuffle</span><br>        <span class="hljs-comment"># if ratio &gt; 1:</span><br>        <span class="hljs-keyword">if</span> style == <span class="hljs-string">&#x27;lp&#x27;</span>:<br>            c_out = <span class="hljs-built_in">int</span>(<span class="hljs-number">2</span> * groups * ratio**<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">assert</span> c_in &gt;= groups * ratio**<span class="hljs-number">2</span><br>            c_out = <span class="hljs-number">2</span> * groups<br>            c_in = <span class="hljs-built_in">int</span>(c_in // ratio**<span class="hljs-number">2</span>)<br>        <br>        <br>        <span class="hljs-keyword">if</span> dySample:<br>            self.scope = nn.Conv2d(c_in, c_out, kernel_size=<span class="hljs-number">1</span>)<br>            constant_init(self.scope, val=<span class="hljs-number">0.</span>)<br><br>        self.offset = nn.Conv2d(c_in, c_out, kernel_size=<span class="hljs-number">1</span>)<br>        normal_init(self.offset, std=<span class="hljs-number">0.001</span>)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Sample</span>(<span class="hljs-params">self, x, offset</span>):<br>        _, _, h, w = offset.size()<br>        x = einops.rearrange(x, <span class="hljs-string">&#x27;b (c grp) h w -&gt; (b grp) c h w&#x27;</span>, grp=self.groups)<br>        offset = einops.rearrange(offset, <span class="hljs-string">&#x27;b (grp two) h w -&gt; (b grp) h w two&#x27;</span>,<br>                                  two=<span class="hljs-number">2</span>, grp=self.groups)<br>        normalizer = torch.tensor([w, h], dtype=x.dtype, device=x.device).view(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-comment"># offset = torch.zeros_like(offset)</span><br><br>        h = torch.linspace(<span class="hljs-number">0.5</span>, h - <span class="hljs-number">0.5</span>, h)<br>        w = torch.linspace(<span class="hljs-number">0.5</span>, w - <span class="hljs-number">0.5</span>, w)<br>        pos = torch.stack(torch.meshgrid(w, h, indexing=<span class="hljs-string">&#x27;xy&#x27;</span>)).to(x.device)<br>        pos = einops.rearrange(pos, <span class="hljs-string">&#x27;two h w -&gt; 1 h w two&#x27;</span>)<br>        pos = <span class="hljs-number">2</span> * (pos + offset) / normalizer - <span class="hljs-number">1</span><br><br><br>        out = F.grid_sample(x, offset + pos, align_corners=<span class="hljs-literal">False</span>, mode=<span class="hljs-string">&#x27;bilinear&#x27;</span>, padding_mode=<span class="hljs-string">&quot;border&quot;</span>)<br>        out = einops.rearrange(out, <span class="hljs-string">&#x27;(b grp) c h w -&gt; b (c grp) h w&#x27;</span>, grp=self.groups)<br>        <span class="hljs-keyword">return</span> out<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_lp</span>(<span class="hljs-params">self, x</span>):<br>        offset = self.offset(x)<br>        <span class="hljs-keyword">if</span> self.dySample:<br>            offset = F.sigmoid(self.scope(x)) * <span class="hljs-number">0.5</span> * offset<br>        <span class="hljs-keyword">else</span>:<br>            offset = <span class="hljs-number">0.25</span> * offset<br>        <span class="hljs-keyword">if</span> self.ratio &gt; <span class="hljs-number">1</span>:<br>            offset = F.pixel_shuffle(offset, upscale_factor=self.ratio)<br>        <span class="hljs-keyword">else</span>:<br>            offset = F.pixel_unshuffle(offset, downscale_factor=<span class="hljs-built_in">int</span>(<span class="hljs-number">1</span>/self.ratio))<br>        <span class="hljs-keyword">return</span> self.Sample(x, offset)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_pl</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">if</span> self.ratio &gt; <span class="hljs-number">1</span>:<br>            y = F.pixel_shuffle(x, upscale_factor=self.ratio)<br>        <span class="hljs-keyword">else</span>:<br>            y = F.pixel_unshuffle(x, downscale_factor=<span class="hljs-built_in">int</span>(<span class="hljs-number">1</span>/self.ratio))<br>        offset = self.offset(y)<br>        <span class="hljs-keyword">if</span> self.dySample:<br>            offset = F.sigmoid(self.scope(y)) * <span class="hljs-number">0.5</span> * offset<br>        <span class="hljs-keyword">else</span>:<br>            offset = <span class="hljs-number">0.25</span> * offset<br>        <span class="hljs-keyword">return</span> self.Sample(x, offset)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">if</span> self.ratio &lt; <span class="hljs-number">1</span>:<br>            _, _, h, w = x.size()<br>            padh = h % <span class="hljs-number">2</span><br>            padw = w % <span class="hljs-number">2</span><br>            x = F.pad(x, (<span class="hljs-number">0</span>, padw, <span class="hljs-number">0</span>, padh), mode=<span class="hljs-string">&#x27;replicate&#x27;</span>)<br>        <span class="hljs-keyword">if</span> self.style == <span class="hljs-string">&#x27;lp&#x27;</span>:<br>            <span class="hljs-keyword">return</span> self.forward_lp(x)<br>        <span class="hljs-keyword">return</span> self.forward_pl(x)<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    x = torch.randn(size=(<span class="hljs-number">2</span>, <span class="hljs-number">16</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>))<br>    dy_samp = DySample(<span class="hljs-number">16</span>, style=<span class="hljs-string">&#x27;pl&#x27;</span>, ratio=<span class="hljs-number">0.5</span>)<br>    x = dy_samp(x)<br>    <span class="hljs-built_in">print</span>(x.size())<br></code></pre></td></tr></table></figure><h3 id="代码经验"><a class="markdownIt-Anchor" href="#代码经验"></a> 代码经验：</h3><ul><li><code>F.interpolate</code> 对某一个通道为 c 进行的 feature map 进行分组插值时，将通道上组的维度移动到 batch 维度上，插值完成之后再从 batch 维度上移动回来即可</li><li>对于模型中不变的Tensor，可以使用 <code>register_buffer</code> 将 Tensor 保存到模型中</li><li>使用函数分开各部分的功能提高代码可读性</li></ul><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://arxiv.org/pdf/2308.15085.pdf">Learning to Upsample by Learning to Sample</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SAPA</title>
    <link href="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/"/>
    <url>/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/</url>
    
    <content type="html"><![CDATA[<h1 id="sapa-similarity-aware-affiliation-for-feature-upsampling"><a class="markdownIt-Anchor" href="#sapa-similarity-aware-affiliation-for-feature-upsampling"></a> SAPA: similarity-aware affiliation for feature upsampling</h1><p>​在低分辨率feature map中，如果对边界点进行上采样，可能出现的情况是：原本在低分辨率的一个点上采样之后所得的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点并不属于一个semantic cluster。本篇文章旨在将语义信息的相似性引入上采样算子，利用不同点之间的联系（affiliation）判断采样点属于哪一个semantic cluster。它的原理是：计算待采样点与相邻某些点的相似性，用这些相似性，类似注意力机制去产生采样算子，由此对decoder feature进行上采样。SAPA不仅能够进行semantic smoothness（语义平滑）和boundary sharpness（突出边界），是一种非常有效的采样方式</p><h2 id="sapa-b"><a class="markdownIt-Anchor" href="#sapa-b"></a> SAPA-B：</h2><p>​设 decoder feature <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H \times W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，待采样 feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{X}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>（设采样率为2），设在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{X}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 中每个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l&#x27;=(i&#x27;,j&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则其对应 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span></span></span></span> 中的点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">⌊</mo><mfrac><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mfrac><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mo stretchy="false">⌊</mo><mfrac><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mfrac><mo stretchy="false">⌋</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l=(i,j)=(\lfloor \frac{i&#x27;}{2} \rfloor,\lfloor \frac{j&#x27;}{2} \rfloor)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.370588em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.025588em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mclose">)</span></span></span></span>，设我们要从邻域中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 个点的信息采样，我们设些采样点的集合全体位置构成的集合设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>l</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mi>S</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mn>2</mn></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I_l = \{\boldsymbol p_1,\boldsymbol p_1,...,\boldsymbol p_S,\boldsymbol p_i\in \mathbb{R}^2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23419099999999995em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，这些采样点沿通道的信息的集合为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>l</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">x</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">x</mi><mi>S</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P_l=\{\boldsymbol x_1,...,\boldsymbol x_S, \boldsymbol x_i \in \mathbb{R}^C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>​再设对整个 feature map 的采样核为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">W</mi></mrow><annotation encoding="application/x-tex">\mathcal{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span></span></span></span>，大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，由于要对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">W</mi></mrow><annotation encoding="application/x-tex">\mathcal{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span></span></span></span> 进行 normalize，我们将 normalize 定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">W</mi><mo>=</mo><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>w</mi><mo>=</mo><mfrac><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">z</mi><mo>∈</mo><msub><mi>P</mi><mi>l</mi></msub></mrow></munder><mi>h</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">z</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathcal{W} = norm(\phi(\mathcal{X})) \\w = \frac{h(sim(\boldsymbol{x,y}))}{\sum_{\boldsymbol z \in P_l} h(sim(\boldsymbol{z,y}))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.51857em;vertical-align:-1.09157em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.04213em;">z</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40557em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04213em;">z</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.09157em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span> 是任意一个函数，通常选用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span> 即为 softmax normalize 过程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span></span></span></span> 是相似度函数，定义有两种方式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant="bold-italic">y</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><mi mathvariant="bold-italic">y</mi><mspace linebreak="newline"></mspace><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup><mtext>  </mtext><msub><mi>M</mi><mi>x</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup><mtext>  </mtext><msub><mi>M</mi><mi>y</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup><mtext>  </mtext><mi mathvariant="bold-italic">y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">sim_1(\boldsymbol{x,y}) = \boldsymbol{x}^T M_x^T M_y\boldsymbol{y} \\sim_2(\boldsymbol{x,y}) = \boldsymbol{x}^T \boldsymbol{y} \\\boldsymbol{x} \in \mathbb{R}^C \ \  M_x \in \mathbb{R}^{d \times C} \ \  M_y \in \mathbb{R}^{d \times C&#x27;}\ \ \boldsymbol{y} \in \mathbb{R}^{C&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0413309999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.18692em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>则对应点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 的核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 采样点的值可以表示为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi><mspace linebreak="newline"></mspace><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{x}_{l&#x27;}&#x27; = \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T M_x^T M_y \boldsymbol y_{l&#x27;}) \boldsymbol x \\\boldsymbol{x}_{l&#x27;}&#x27;= \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T  \boldsymbol y_{l&#x27;}) \boldsymbol x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub></mrow><annotation encoding="application/x-tex">\boldsymbol y_{l&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68858em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span> 是在 encoder feature 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">l&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 处的沿深度的向量，如果我们将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 定义为点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 在 decoder feature 中的方邻域，则根据采样值的相似度定义的不同，将 SAPA 划分为 SAPA-B (base) 和 SAPA-I (innner product)，SAPA-B 的效果不仅能将同一个 semantic cluster 内的像素进行平滑，而且能将边界像素对比度调高（smooth regions and sharp boundaries）</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/1.png" alt="Fig.1"></p><h2 id="sapa-b的改进"><a class="markdownIt-Anchor" href="#sapa-b的改进"></a> SAPA-B的改进</h2><p>​SAPA-B 在大多数领域中都表现很好的表现，但在目标检测任务中，SAPA-B 的效果不如 CARAFE，作者在文中比较了 Semantic Segmentation 和 Object Detection 的区别，Sementic Segmentation 的每个像素点都会对最终性能评估和损失函数造成影响，而在 Object Detection 中只有一小部分区域对最终结果造成影响，因此它们可以划分为像素级的任务和非像素级的人物， CARAFE 可以修复 semantic information 且具有大的局部可分性( large local divisibility )，而如下图所示 SAPA-B 在低分辨率图像有正确的 semantic cluster 时，SAPA-B 会提升它的性能，但是如果存在着噪声的话 (例如下图中墙上的画的内容)，SAPA-B 会引入噪声，因此如果在同一个 semantic cluster 内部像素信息不是平滑的时候，SAPA-B 的性能提升会很有限</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/2.png" alt="Fig.2"></p><p>如下图所示，SAPA-B 在墙上挂画内部有噪声的时候，会引入一定的噪声</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/3.png" alt="Fig.3"></p><p>​简而言之，作者在文章中给出解释：SAPA-B only extracts already existed knowledge from the encoder feature, but cannot learn new knowledge to enhance features. However, the dynamic convolution in CARAFE learns new representations based on the decoder feature and is able to mend the features. 在修复 feature 上，由于 CARAFE 的局部可分性强于 SAPA-B，在目标检测任务里面， SAPA-B 提供目标精确边界对性能指标的提升会不如 CARAFE 对目标内部一些关键区域信息的修补</p><h3 id="sapa-d的提出"><a class="markdownIt-Anchor" href="#sapa-d的提出"></a> SAPA-D的提出：</h3><p>​基于上面的推理，我们改进的思路是将 SAPA 改进为能够修复 feature，因此我们在噪声中去寻找潜在可能的适合的像素点进行采样。因此我们将 SAPA 先前统一的固定窗口形状变为一个可变的形状，即动态地去选择采样点。受 DCN(Deformable Convolutional Networks) 的启发，我们去生成对应于采样点的偏移量，则整个采样过程可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>I</mi><mi>l</mi></msub><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><msub><mi>P</mi><mi>l</mi></msub><mo>=</mo><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo separator="true">,</mo><msub><mi>I</mi><mi>l</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">I_l =  \phi(\mathcal{X})\ ,\ P_l =bilinear\_sampling(\mathcal{X},I_l) \\\boldsymbol{x}_{l&#x27;}&#x27;= \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T M_x^T M_y \boldsymbol y_{l&#x27;}) \boldsymbol x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span></p><p>那么又引出一个问题：我们怎么生成采样点？作者在文章中引入了 DOF 的概念：</p><p><strong>DOF ( Degree of Freedom ) 定义：</strong> 用于描述特征图的连续性和对比度的平衡，如果在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个值都由同一组参数生成，那么称 DOF 的值为1，反之若它们的值由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个值生成，那么 DOF 的值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>​根据这个定义，CARAFE 的 DOF 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，SAPA-B 的 DOF 值为1，Pixel-shuffle 的 DOF 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，NN 的 DOF 值为1。DOF 的值越高，代表着更高的对比度和更低的连续性。效果如下图所示：</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/4.png" alt="Fig.4"></p><p>​因此我们在语义分割任务中设置 DOF = 1，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个采样点由同一组参数生成，在 instance-level tasks 中（例如目标检测）设置 DOF = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> ，在 DOF = 1 时，SAPA-D 表现出一个好的在连续性和对比度之间的折中</p><h3 id="group-upsampling"><a class="markdownIt-Anchor" href="#group-upsampling"></a> Group Upsampling：</h3><p>​用于采样的点的数量对计算速度有很大的影响，Group Upsampling 是一个 economic 的方式提升 SAPA 的性能，我们将 SAPA-B 中25个用于采样的点在SAPA-D中减为9个，并且使用 4 groups 进行采样。值得一提的是：<strong>Interestingly, the grouping operation is only useful for SAPA-D with dynamic selection, while even hurting the performance for SAPA-B and CARAFE.</strong></p><h3 id="高分辨率图像在采样中的作用"><a class="markdownIt-Anchor" href="#高分辨率图像在采样中的作用"></a> 高分辨率图像在采样中的作用：</h3><p>​高分辨率图像不仅能提供图像细节信息，还能提供 <strong>structural information to stabilize the feature map</strong>，如图 Fig.3 所示，在没有高分辨率图像指导的采样过程中，采样出来的高分辨率图像导致了采样的 feature 灾难性消失（值得一提的是，这样采样生成的特征图仍然能产生大约正确的结果，作者在文中猜测是提取了一些新的特殊的特征）。至此，我们可以将 SAPA 的采样过程表示为：</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/SAPA/5.png" alt="Fig.5"></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FADE</title>
    <link href="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FADE/"/>
    <url>/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FADE/</url>
    
    <content type="html"><![CDATA[<h1 id="fade-fusing-the-assets-of-decoder-and-encoder-for-task-agnostic-upsampling"><a class="markdownIt-Anchor" href="#fade-fusing-the-assets-of-decoder-and-encoder-for-task-agnostic-upsampling"></a> FADE: fusing the assets of decoder and encoder for task-agnostic upsampling</h1><p>​对于不同的稠密预测任务，有些任务注重于语义信息（semantic information），它们对图像位置信息敏感（region-sensitive）而有的任务（图像分割）注重于细节（detail-sensitive）。原有的上采样算子都是用于特定任务而不是通用型，本篇文章主要从encoder与decoder两方面解释了为什么CARAFE在semantic segmentation上优于IndexNet；IndexNet在image matting上优于CARAFE，并且提出了一种新的通用任务的采样算子FADE，FADE的有效性在于1.同时使用encoder与decoder，2.使用 semi-shift convolution 保证感受野大小，3.在产生上采样算子前使用一个gating mechanism模块，设计成与decoder无关以增强上采样算子的细节增强能力。</p><h2 id="encoderdecoder"><a class="markdownIt-Anchor" href="#encoderdecoder"></a> encoder&amp;decoder</h2><p>​我们先提出一个假设：<strong>一个理想的上采样算子需要能够很好地保留semantic information的同时也需要补偿下采样过程中失去的细节信息；对于前者，semantic information已经嵌入在了decoder中，对于后者则存在于encoder中</strong>。我们进一步假设：正是因为encoder或者decoder中的信息使用不够充分或者有偏向性才导致采样算子有着task-dependent的特性。</p><p>​下面通过采样算子的原理解释为什么现有的采样算子task-dependent：</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FADE/1.png" alt="encoder&amp;decoder"></p><ul><li>CARAFE的上采样算子通过下采样之后的特征图产生，即由decoder feature产生，这样就充分利用了decoder feature的信息而丢失了下采样前的图像细节信息。</li><li>IndexNet和A2U的上采样核通过下采样前的feature map产生，这样就充分利用了原feature map中的细节信息，而没有利用采样后的semantic information</li><li>于是我们提出了FADE：通过将encoder与decoder的信息融合生成采样算子</li></ul><h3 id="那么接下来的问题是如何将两个信息全部利用起来"><a class="markdownIt-Anchor" href="#那么接下来的问题是如何将两个信息全部利用起来"></a> 那么接下来的问题是如何将两个信息全部利用起来？</h3><p>​How to leverage both encoder and decoder features for task-agnostic upsampling?</p><p>​一个朴素的想法是将encoder与decoder所提供的信息concatenate起来，通过卷积进行特征提取（卷积核实质上就是一个滤波器）生成上采样算子，但是主要的问题是：encoder与decoder所提供的feature map大小不一样（mismatched resolution），考虑如果对decoder使用参数为2的临近插值（2NN）进行信息补全，同时上采样率为2，当我们使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 大小的卷积核进行卷积时，本来是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 大小的感受野就退化为只能感受到4个像素信息，同时实验也证明这种方法并不好。于是启发我们设计一个新的解决方案：semi-shift convolution。每当卷积窗口在 encoder feature 中移动两个像素点时，decoder feature 中的卷积窗口移动一个像素点，这一点和 CARAFE 的方式是相同的</p><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FADE/2.png" alt="semi-shift convolution"></p><h2 id="fade-的设计"><a class="markdownIt-Anchor" href="#fade-的设计"></a> FADE 的设计</h2><p><img src="/2023/12/02/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/FADE/3.png" alt="FADE"></p><p>​encoder feature 与 decoder feature 先经过一个半移位卷积生成 pre-upsampled feature，如果直接使用这份 feture map 会发现它恢复细节的能力不够，这时候引入 gated mechanism 进行微调，decoder feature 通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积进行通道压缩，再通过一次 NN插值上采样和 sigmoid 函数生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>，这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> 用于平衡 encoder feature 和 pre-upsampled 的权重，最终生成的上采样 feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi></mrow><annotation encoding="application/x-tex">\mathcal{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span></span></span></span> 由如下公式生成：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">F</mi><mrow><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="script">F</mi><mrow><mi>e</mi><mi>n</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>⊙</mo><mi mathvariant="script">G</mi><mo>+</mo><msub><mi mathvariant="script">F</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mo>−</mo><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⊙</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi mathvariant="script">G</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F}_{upsampled} = \mathcal{F}_{encoder} \odot \mathcal{G} + \mathcal{F}_{pre-upsampled} \odot (1 - \mathcal{G})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FADE_upsampling</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, kernel_size=<span class="hljs-number">3</span>, ratio=<span class="hljs-number">2</span></span>):<br>        <span class="hljs-built_in">super</span>(FADE_upsampling, self).__init__()<br>        self.ratio = ratio<br>        self.kernel_size = kernel_size<br>        self.padding = kernel_size // <span class="hljs-number">2</span> <span class="hljs-keyword">if</span> kernel_size % <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> (kernel_size - <span class="hljs-number">1</span>) // <span class="hljs-number">2</span><br>        self.comp = nn.Conv2d(in_channels=c_in, out_channels=<span class="hljs-number">1</span>, kernel_size=<span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, encoder_f, decoder_f</span>):<br>        _, c1, h1, _ = decoder_f.size()<br>        _, c2, h2, w2 = encoder_f.size()<br>        x = F.unfold(decoder_f, kernel_size=self.kernel_size, padding=self.padding)<br>        x = einops.rearrange(x, <span class="hljs-string">&#x27;b (c n) (h1 w1) -&gt; b n c h1 w1&#x27;</span>, c=c1, h1=h1)<br>        x = einops.repeat(x, <span class="hljs-string">&#x27;b n c h1 w1 -&gt; b n c (h1 2) (w1 2)&#x27;</span>)<br>        <span class="hljs-comment"># x = F.interpolate(x, scale_factor=2)</span><br><br>        y = F.unfold(encoder_f, kernel_size=self.kernel_size, padding=self.padding)<br>        y = einops.rearrange(y, <span class="hljs-string">&#x27;b (c n) (h2 w2) -&gt; b n c h2 w2&#x27;</span>, c=c2, h2=h2)<br>        <br>        pre_upsampled = torch.einsum(<span class="hljs-string">&#x27;bnchw,bnchw-&gt;bchw&#x27;</span>, [x, y])<br>        <br>        G = self.comp(decoder_f)<br>        G = F.interpolate(G, scale_factor=<span class="hljs-number">2</span>)<br>        G = F.sigmoid(G)<br>        out = encoder_f * G + (<span class="hljs-number">1</span> - G) * pre_upsampled<br>        <span class="hljs-keyword">return</span> out<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    fade = FADE_upsampling(<span class="hljs-number">32</span>)<br>    encoder_f = torch.randn((<span class="hljs-number">2</span>, <span class="hljs-number">32</span>, <span class="hljs-number">8</span>, <span class="hljs-number">14</span>))<br>    decoder_f = torch.randn((<span class="hljs-number">2</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>))<br>    x = fade(encoder_f, decoder_f)<br>    <span class="hljs-built_in">print</span>(x.size())<br></code></pre></td></tr></table></figure><p>Q:we assume that all decoder layers have <strong>gradient-imposed distribution priors</strong> and can be encoded to inform the requisite of detail or semantic information. In this way fine details can be chosen from encoder features without hurting the semantic property of decoder features</p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://arxiv.org/pdf/2207.10392.pdf">Fusing the assets of encoder and decoder in feature upsampling</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A2U for deep matting</title>
    <link href="/2023/12/01/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/A2U/"/>
    <url>/2023/12/01/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/A2U/</url>
    
    <content type="html"><![CDATA[<h1 id="affinity-aware-upsampling"><a class="markdownIt-Anchor" href="#affinity-aware-upsampling"></a> Affinity-Aware Upsampling</h1><p>​相似度(affinity)在稠密预测任务中是一个非常重要的信息，二阶的特征常用于建立相似度信息，本文主要工作是将原有的动态上采样过程都总结成一阶的信息，并在此基础上提出使用二阶的信息，用此将自相似性引入采样过程，同时通过低秩双线性模型减少模型参数，降低模型计算开支</p><h3 id="另一种将upsampling算子统一的视角"><a class="markdownIt-Anchor" href="#另一种将upsampling算子统一的视角"></a> 另一种将Upsampling算子统一的视角：</h3><p>​对于一个单通道的feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Z \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> ，目标是通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 去产生一个新的像素值（upsampled feature point），将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 向量化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">z \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，同时设上采样算子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 向量化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，则现有的上采样算子的形式可以统一为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> （对应新的feature map中一个像素点）</p><p>​文章中将现有的上采样算子分为了两类：</p><h5 id="distance-based-upsampling"><a class="markdownIt-Anchor" href="#distance-based-upsampling"></a> distance-based Upsampling</h5><p>​基于位置信息的上采样算子，例如最临近插值</p><h5 id="feature-based-upsampling"><a class="markdownIt-Anchor" href="#feature-based-upsampling"></a> feature-based Upsampling</h5><p>​基于图像内容信息的上采样算子，例如CARAFE，max upooling，IndexNet</p><p>可以看出无论哪种采样算子都是  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 的形式</p><h2 id="learning-affinity-aware-upsampling"><a class="markdownIt-Anchor" href="#learning-affinity-aware-upsampling"></a> Learning Affinity-Aware Upsampling</h2><p>​现有一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{M} \in \mathbb{R}^{C \times H \times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal">M</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>，目标为产生大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>r</mi><mi>H</mi><mo>×</mo><mi>r</mi><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{M}&#x27; \in \mathbb{R}^{C \times r H \times r W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.790992em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span> 的新feature map，对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{M}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 中每一点（设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 位置处），我们都要去学习一个上采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> ，则将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 与原图像对应点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">⌊</mo><mfrac><mi>i</mi><mi>r</mi></mfrac><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mo stretchy="false">⌊</mo><mfrac><mi>j</mi><mi>r</mi></mfrac><mo stretchy="false">⌋</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\lfloor \frac{i}{r} \rfloor,\lfloor \frac{j}{r} \rfloor)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.252772em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.907772em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mclose">)</span></span></span></span>邻域内的图像信息经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 则可得新feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 位置处的像素值</p><h4 id="本文affinity-定义"><a class="markdownIt-Anchor" href="#本文affinity-定义"></a> 本文Affinity 定义：</h4><p>​对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 和其他所有可能位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 之间的Affinity定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi mathvariant="normal">∀</mi><mi>p</mi></mrow></munder><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>m</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathop {softmax }\limits_{\forall p}(sim(m_l,m_p))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8326559999999998em;vertical-align:-1.0826559999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.153452em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∀</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0826559999999998em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>​相似度直接采用内积的方式定义：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>m</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>m</mi><mi>l</mi><mi>T</mi></msubsup><msub><mi>m</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">sim(m_l,m_p)=m_l^T m_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/2023/12/01/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/A2U/1.png" alt="image"></p><h2 id="上采样算子的生成"><a class="markdownIt-Anchor" href="#上采样算子的生成"></a> 上采样算子的生成：</h2><p>​设原 local feature map（<strong>注意这个定义，它是目标采样点的邻域！！！</strong>）为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X} \in \mathbb{R}^{C \times h_1 \times w_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，将其每一个关于通道切片向量化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X \in \mathbb{R}^{C \times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span> ，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N=h_1 \times w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，我们的目标是基于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 产生一个上采样算子，下面我们利用Affinity去进行上采样，我们不使用一阶的信息构建 $w = \sum_{i = 1}^C \sum_{j = 1}^N a_{ij} x_{ij}  $​，<strong>因为二阶的信息常常用于构建相似度</strong>，使用类似于transfomer中的二阶信息（QKV矩阵）：<strong>为了编码二阶的信息，我们的想法是利用双线性插值</strong>，设另外一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{y} \in \mathbb{R}^{C \times h_2 \times w_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，同样将其向量化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Y \in \mathbb{R}^{C \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M=h_2 \times w_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">y</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mn>1</mn></mrow></msup><mtext> </mtext><mtext> </mtext><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{y}_i\in \mathbb{R} ^{C\times 1}\,\,\boldsymbol{x}_i\in \mathbb{R} ^{C\times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78324em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi>ψ</mi><msup><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>T</mi></msup><mi>ϕ</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>q</mi><mi>k</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi>t</mi><mi>k</mi></msub><msub><mi>y</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow></mrow></mrow><mspace linebreak="newline"></mspace><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi mathvariant="script">a</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi>y</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow></mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msub><mi>X</mi><mi>k</mi></msub><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><msub><mi>Y</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">w=\sum_{i=1}^N{\sum_{j=1}^M{a_{ij}\psi \left( \boldsymbol{x}_i \right) ^T\phi \left( \boldsymbol{y}_i \right)}}=\sum_{k=1}^C{\sum_{i=1}^N{\sum_{j=1}^M{a_{ij}q_kx_{ik}t_ky_{jk}}}} \\=\sum_{k=1}^C{\sum_{i=1}^N{\sum_{j=1}^M{\mathscr{a}_{ijk}x_{ik}y_{jk}}}}=\sum_{k=1}^C{ {X}_k\boldsymbol{A}_k {Y}_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span></span></span></span> 为embedding function，$\mathscr{a}<em>{ijk}=a</em>{ij}q_kt_k $ ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow></msup><mtext> </mtext><msub><mi>Y</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>M</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">X_k \in \mathbb{R}^{N \times 1} \ Y_k \in \mathbb{R}^{M \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k \in \mathbb{R}^{N \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span> ， 是第k层feature map的affinity matrix。</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k \in \mathbb{R}^{N \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span> 参数量非常大而且难以训练，为了减少参数量且将计算过程变为卷积形式，我们引入假设：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">rank(\boldsymbol A_k) \le d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> ，则可以分解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>=</mo><msub><mi mathvariant="bold-italic">U</mi><mi>k</mi></msub><msubsup><mi mathvariant="bold-italic">V</mi><mi>K</mi><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k = \boldsymbol U_k\boldsymbol V_K^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1643409999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> ，$ \boldsymbol U_k \in \mathbb{R}^{N \times d},\boldsymbol V_k \in \mathbb{R}^{M \times d}$，因此上式可变形为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><msub><mi mathvariant="bold-italic">U</mi><mi>k</mi></msub><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msup><mi mathvariant="bold">1</mi><mi>T</mi></msup><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mspace linebreak="newline"></mspace><mo>=</mo><msup><mi mathvariant="bold">1</mi><mi>T</mi></msup><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">w=\sum_{k=1}^C{\boldsymbol{x}_k\boldsymbol{U}_k\boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}=\sum_{k=1}^C{\boldsymbol{1}^T\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k} \\=\boldsymbol{1}^T\sum_{k=1}^C{\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊙</span></span></span></span> 代表Hadmard积，列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">1</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol 1 \in \mathbb{R}^{d \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">1</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>​因为我们要生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>×</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">s \times s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 大小的上采样核，则列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">1</mi></mrow><annotation encoding="application/x-tex">\boldsymbol 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">1</span></span></span></span></span> 可写为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>s</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol P \in \mathbb{R}^{d \times s^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，则**<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>向量化之后的采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>** 可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold-italic">w</mi><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold-italic">u</mi><mrow><mi>k</mi><mi>r</mi></mrow><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">v</mi><mrow><mi>k</mi><mi>r</mi></mrow><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">U</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">X</mi><mo fence="true">)</mo></mrow><mo>⊙</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">V</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">Y</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">P</mi><mo separator="true">,</mo><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><mrow><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">U</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">X</mi><mo fence="true">)</mo></mrow><mo>⊙</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">V</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">Y</mi><mo fence="true">)</mo></mrow></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\boldsymbol{w}=\boldsymbol{P}^T\sum_{k=1}^C{\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}=\boldsymbol{P}^T\underset{r=1}{\overset{d}{cat}}\left( \sum_{k=1}^C{\left( \boldsymbol{u}_{kr}^{T}\boldsymbol{x}_k\odot \boldsymbol{v}_{kr}^{T}\boldsymbol{y}_k \right)} \right) \\=\boldsymbol P^T \underset{r=1}{\overset{d}{cat}} \left( gconv\left( \mathcal{U}_r,\mathcal{X} \right) \odot gconv\left( \mathcal{V}_r,\mathcal{Y} \right) \right)  \\=conv\left( \mathcal{P} ,\underset{r=1}{\overset{d}{cat}}\left( { gconv\left( \mathcal{U}_r,\mathcal{X} \right) \odot gconv\left( \mathcal{V}_r,\mathcal{Y} \right) } \right) \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">u</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">v</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.118296em;vertical-align:-0.7171080000000001em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>​其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">u</mi><mrow><mi>k</mi><mi>r</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">v</mi><mrow><mi>k</mi><mi>r</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>M</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol u_{kr} \in \mathbb{R}^{N \times 1},\boldsymbol v_{kr} \in \mathbb{R}^{M \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，卷积核<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{P} \in \mathbb{R}^{d \times s^2 \times 1 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></msup><mo separator="true">,</mo><mi mathvariant="script">V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{U} \in \mathbb{R}^{d \times C \times h_1 \times w_1},\mathcal{V} \in \mathbb{R}^{d \times C \times h_2 \times w_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mi mathvariant="bold-italic">U</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup><mo separator="true">,</mo><mi mathvariant="bold-italic">V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol {P} \in \mathbb{R}^{N \times d \times 1},\boldsymbol {U} \in \mathbb{R}^{N \times d \times C},\boldsymbol {V} \in \mathbb{R}^{N \times d \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>  的reshaped tensor，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mrow><mi mathvariant="script">K</mi><mo separator="true">,</mo><mi mathvariant="script">M</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">conv(\mathcal{K,M})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal">M</span></span><span class="mclose">)</span></span></span></span> 代表在使用kernal <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">\mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span> 在feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> 上使用卷积操作，gconv代表group convolution，且 groups 的个数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，<strong>至此，我们将一个新的算子化为了能用高效的 <code>einsum</code> 操作的形式</strong></p><h5 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充：</h5><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo separator="true">,</mo><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{X},\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span> 可以选择相同也可以选择不同，本文选择 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>=</mo><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}=\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span>，这样就对应着 self attention 中的自相似性</li><li>rank <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 的范围可以在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[ 1,min(N,M)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 内选取，本文令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 就可以视为 encoding function，为了补偿低秩模型导致的参数量过小的情况，本文选取动态生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span>，它们的参数可以根据模型复杂度选择：共享参数，不共享参数，半共享参数，<strong>本文中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 的生成过程为：先通过一次平均值池化之后，在通过一次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积生成</strong></li></ul><h2 id="与下采样算子融合"><a class="markdownIt-Anchor" href="#与下采样算子融合"></a> 与下采样算子融合</h2><p>​类似于IndexNet，upsampling可以extend to downsampling，我们使用相同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U,V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 在上下采样操作中，但是使用不同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> 考虑到采样核的大小不同。即上采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">W</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{W}_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>u</mi><mn>2</mn></msubsup><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">{S_u^2} \times H \times W ,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span></span></span></span> 下采样核$\mathcal{W}_d $ 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>d</mi><mn>2</mn></msubsup><mo>×</mo><mi>H</mi><mi mathvariant="normal">/</mi><mi>r</mi><mo>×</mo><mi>W</mi><mi mathvariant="normal">/</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">{S_d^2} \times H/r \times W/r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> ，本文中令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>d</mi><mn>2</mn></msubsup><mo>=</mo><msup><mi>r</mi><mn>2</mn></msup><msub><mi>S</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">s_d^2=r^2S_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="一些经验"><a class="markdownIt-Anchor" href="#一些经验"></a> 一些经验：</h2><ul><li>high-resolution feature map（图像大的）对于提取spatial information来说更加有效</li><li>二阶的特征比一阶特征在恢复spatial details更加有效</li></ul><h2 id="网络设计"><a class="markdownIt-Anchor" href="#网络设计"></a> 网络设计：</h2><p><img src="/2023/12/01/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/A2U/2.png" alt="a2u matting"></p><p>​整个网络沿用了UNet的结构，（没看懂A2U在哪里）</p><p>Q：the pairwise similarity is damaged during upsampling?</p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IndexNet</title>
    <link href="/2023/11/18/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/Indexed%20Network/"/>
    <url>/2023/11/18/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/Indexed%20Network/</url>
    
    <content type="html"><![CDATA[<h1 id="indexed-network"><a class="markdownIt-Anchor" href="#indexed-network"></a> Indexed Network</h1><p>​卷积网络中上采样算子可以用文章中提出的索引函数（Index function）统一，说明了插值上采样与反池化操作等算子都是索引函数的特殊情况，由于在图像任务中，不同的部分图像对操作的要求不一样（比如图像边界需要提出边界信息，插值的方法就不如反最大值池化的操作；图像内部我们又需要邻域像素点的信息进行上采样的操作，这种情况下反最大值池化又不如插值方法），所以我们不能在图像中简单地用一个算子进行上采样，文章中提出了用Index function来引导采样的操作，其中Index function是一个可学习的函数（通过图像的信息学习—feature map），这样就可以根据图像的内容信息和位置信息进行不同的采样操作。</p><h3 id="index的定义与理解"><a class="markdownIt-Anchor" href="#index的定义与理解"></a> index的定义与理解</h3><p>​就是一个加权（对于图像内容的感知强度），用于进行矩阵乘法，表示对每个像素点的敏感程度。本文是由在 maxunpooling 的传递 index 的基础上提出的，所以本文作者才会称其为 indexNet ，在文章中的index都是&quot;soft index&quot;，对 index 中每个元素: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">i \in [0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><h3 id="对于每一个feature-map-large-mathscrxindexnet会产生两个index-function分别用于上采样与下采样其实就是产生两个卷积核进行采样"><a class="markdownIt-Anchor" href="#对于每一个feature-map-large-mathscrxindexnet会产生两个index-function分别用于上采样与下采样其实就是产生两个卷积核进行采样"></a> 对于每一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mi mathvariant="script">x</mi></mstyle></mrow><annotation encoding="application/x-tex">\Large \mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6200064em;vertical-align:0em;"></span><span class="mord sizing reset-size6 size8"><span class="mord mathnormal">x</span></span></span></span></span>，IndexNet会产生两个Index function分别用于上采样与下采样：其实就是产生两个卷积核进行采样：</h3><ul><li><p>下采样操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> (indexed pooling)：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 通过 IndexNet 产生的索引（由下采样前的 feature map 产生，产生的 index map 大小与下采样前的 feature map 大小相同，因此在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> 操作之后要进行一次平均值池化满足下采样后的大小要求）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">E \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 是下采样像素点的方形邻域（感受野），那么对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 进行下采样，得到的结果为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>E</mi></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}(E)=\sum_{x \in E}I(x)x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">x</span></span></span></span> ，对于每个区域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 都会经过一个 softmax 保证图像强度连续性，从这里就可以看出最大值池化和平均值池化都是IndexNet的特例了。<strong>注：这样产生的 feature map 需要乘一个常数，在下采样率为2的时候整体 feature map 乘4去补偿平均值采样</strong></p></li><li><p>上采样操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">U</mi></mrow><annotation encoding="application/x-tex">\mathcal{IU}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span></span></span></span> (indexed upsampling)：它是下采样操作的反算子，它先将上采样前低分辨率的 feature map 进行 NN 插值到和上采样后的大小，以匹配产生的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span> 的大小（这一步就相对于CARAFE不同了，它考虑了spatial information，因为信息来自于encoder）即得上采样区域，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">U</mi></mrow><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>⊗</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">\mathcal{IU}(d)=I(d) \otimes E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的定义同上面的下采样。</p></li></ul><p><img src="/2023/11/18/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/Indexed%20Network/2.png" alt="index-net"></p><h3 id="文章中还根据训练的参数量将index-function分类"><a class="markdownIt-Anchor" href="#文章中还根据训练的参数量将index-function分类"></a> 文章中还根据训练的参数量将Index function分类：</h3><ul><li>每个层通道是否共享一个Index function将Index Networks分为HINS(holistic index networks) 和 DINS(depthwise index networks)，对于原始<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H \times W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>大小的feature map，HINS会将feature map特征提取输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><msup><mi>W</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">H^{&#x27;} \times W^{&#x27;} \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>大小的Index block，而DINS会将feature map特征提取输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><msup><mi>W</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H^{&#x27;} \times W^{&#x27;} \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的Index block</li><li>再对DINS进行分类，由于输入feature map与输出Index block的通道数都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，因此我们考虑使用三维卷积还是二维卷积，即输出Index block的对通道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的每一个切片是否考虑与feature map对通道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的每一个切片一一对应，还是考虑feature map的全部层，于是将DINS分类为O2O DINS(one to one)和M2O DINS(many to one)</li><li>我们再对O2O DINS进行分类，考虑在上采样与下采样操作中，我们是否采用同一个参数的Index block，于是将O2O DINS进行分类为Modelwise O2O DINS和Stagewise O2O DINS</li><li>再对Stagewise O2O DINS进行分类，如果我们在不同阶段的采样过程中（不只是上下采样）都需要不同的Index block（即是否共享参数），我们再将Stagewise O2O DINS分类为Shared Stagewise O2O DINS和unshared Stagewise O2O DINS</li></ul><p><img src="/2023/11/18/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/Indexed%20Network/1.png" alt="catagory"></p><p>​其中M2O的效果最好，但是同时参数量也最大；HINs比DINs更加灵活，对于网络的设计来说自由度更高。</p><h3 id="indexnet与carafe的比较"><a class="markdownIt-Anchor" href="#indexnet与carafe的比较"></a> IndexNet与CARAFE的比较</h3><p><img src="/2023/11/18/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/Indexed%20Network/2.png" alt="index-net"></p><h4 id="相同点"><a class="markdownIt-Anchor" href="#相同点"></a> 相同点：</h4><ul><li><p>它们都是基于内容生成的动态的，具有可学习参数的采样核。</p></li><li><p>CARAFE是IndexNet的特殊形式：</p></li></ul><h4 id="不同点"><a class="markdownIt-Anchor" href="#不同点"></a> 不同点</h4><ul><li><p>下采样时，IndexNet产生的Index function是基于前面高分辨率的feature map产生的，这样就不会丢失空间位置信息。</p></li><li><p>CARAFE基于下采样后的低分辨率图产生，因此具有丰富的语义信息</p></li><li><p>IndexNet的下采样与上采样方式是相互作用的，而CARAFE上下采样方式毫无关系，这一点可能可以引导以后的研究！</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">HolisticIndexBlock</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, inp, use_nonlinear=<span class="hljs-literal">False</span>, use_context=<span class="hljs-literal">False</span>,</span><br><span class="hljs-params">                 use_batch_norm=<span class="hljs-literal">False</span>, ratio=<span class="hljs-number">2</span></span>):<br>        <span class="hljs-built_in">super</span>(HolisticIndexBlock, self).__init__()<br>        <span class="hljs-keyword">if</span> use_context:<br>            kernel_size, padding = <span class="hljs-number">4</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            kernel_size, padding = <span class="hljs-number">2</span>, <span class="hljs-number">0</span><br><br>        c_mid = inp * ratio<br>        c_out = ratio**<span class="hljs-number">2</span><br>        self.ratio = ratio<br><br>        <span class="hljs-keyword">if</span> use_batch_norm:<br>            BatchNorm2d = nn.BatchNorm2d<br>        <span class="hljs-keyword">else</span>:<br>            BatchNorm2d = <span class="hljs-literal">None</span><br><br>        <span class="hljs-keyword">if</span> use_nonlinear:<br>            self.indexnet = nn.Sequential(<br>                    nn.Conv2d(inp, c_mid, kernel_size=kernel_size, stride=<span class="hljs-number">2</span>,<br>                              padding=padding, bias=<span class="hljs-literal">False</span>),<br>                    BatchNorm2d(c_mid),<br>                    nn.ReLU6(inplace=<span class="hljs-literal">True</span>),<br>                    nn.Conv2d(c_mid, c_out, kernel_size=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>, bias=<span class="hljs-literal">False</span>)<br>                )<br>        <span class="hljs-keyword">else</span>:<br>            self.indexnet = nn.Conv2d(inp, c_out, kernel_size=kernel_size,<br>                                      stride=<span class="hljs-number">2</span>, padding=padding, bias=<span class="hljs-literal">False</span>)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.indexnet(x)<br>        y = F.sigmoid(x)<br>        z = F.softmax(y ,dim=<span class="hljs-number">1</span>)<br>        <span class="hljs-comment"># 可以直接使用stride=1的卷积，这样后续就不需要将通道维数补偿到图像大小上去</span><br>        idx_encoder = einops.rearrange(z, <span class="hljs-string">&#x27;b (r1 r2) h w -&gt; b 1 (h r1) (w r2)&#x27;</span>, r1=self.ratio)<br>        idx_decoder = einops.rearrange(y, <span class="hljs-string">&#x27;b (r1 r2) h w -&gt; b 1 (h r1) (w r2)&#x27;</span>, r1=self.ratio)<br>        <span class="hljs-keyword">return</span> idx_encoder, idx_decoder<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DepthwizeIndexBlock</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, inp, use_nonlinear=<span class="hljs-literal">False</span>, use_context=<span class="hljs-literal">False</span>,</span><br><span class="hljs-params">                 use_batch_norm=<span class="hljs-literal">False</span>, ratio=<span class="hljs-number">2</span>, mode=<span class="hljs-string">&#x27;O2O&#x27;</span></span>):<br>        <span class="hljs-built_in">super</span>(DepthwizeIndexBlock, self).__init__()<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;M2O&#x27;</span> <span class="hljs-keyword">in</span> mode:<br>            grp = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;O2O&#x27;</span> <span class="hljs-keyword">in</span> mode:<br>            grp = inp<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">assert</span> <span class="hljs-string">&quot;MODE ERROR&quot;</span><br>        self.ratio = ratio<br>        self.grp = grp<br><br>        self.indexnets = nn.ModuleList([<br>            self._build_index_block(inp, use_nonlinear, use_context, use_batch_norm)<br>            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ratio**<span class="hljs-number">2</span>)<br>        ])<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_build_index_block</span>(<span class="hljs-params">self, inp, use_nonlinear, use_context, use_batch_norm</span>):<br>        <span class="hljs-keyword">if</span> use_context:<br>            kernel_size, padding = <span class="hljs-number">4</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            kernel_size, padding = <span class="hljs-number">2</span>, <span class="hljs-number">0</span><br>        <br>        <span class="hljs-keyword">if</span> use_batch_norm:<br>            BatchNorm2d = nn.BatchNorm2d<br>        <span class="hljs-keyword">else</span>:<br>            BatchNorm2d = <span class="hljs-literal">None</span><br>        <br>        <span class="hljs-keyword">if</span> use_nonlinear:<br>            <span class="hljs-keyword">return</span> nn.Sequential(<br>                <span class="hljs-comment"># 输入通道被分为grp组，每组之间共享一组卷积核</span><br>                <span class="hljs-comment"># 其中每个组的通道只与同组的卷积核进行卷积操作，而不与其他组的卷积核发生作用</span><br>                nn.Conv2d(inp, inp, kernel_size=kernel_size, stride=<span class="hljs-number">2</span>, <br>                          padding=padding, groups=self.grp),<br>                BatchNorm2d(inp),<br>                nn.ReLU6(inplace=<span class="hljs-literal">True</span>),<br>                nn.Conv2d(inp, inp, kernel_size=<span class="hljs-number">1</span>, stride=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>, groups=self.grp)<br>            )<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> nn.Conv2d(inp, inp, kernel_size=kernel_size, padding=padding,<br>                             stride=<span class="hljs-number">2</span>, groups=self.grp)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x_list = [indexnet(x) <span class="hljs-keyword">for</span> indexnet <span class="hljs-keyword">in</span> self.indexnets]<br>        x = torch.cat(x_list, dim=<span class="hljs-number">1</span>)<br><br>        y = F.sigmoid(x)<br>        z = F.softmax(x, dim=<span class="hljs-number">2</span>)<br><br>        idx_en = einops.rearrange(y, <span class="hljs-string">&#x27;b (r1 r2 c) h w -&gt; b c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio, r2=self.ratio)<br>        idx_de = einops.rearrange(z, <span class="hljs-string">&#x27;b (r1 r2 c) h w -&gt; b c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio, r2=self.ratio)<br>        <span class="hljs-keyword">return</span> idx_en, idx_de<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    DIN = DepthwizeIndexBlock(<span class="hljs-number">16</span>, mode=<span class="hljs-string">&#x27;M2O&#x27;</span>)<br>    x = torch.Tensor(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>)<br>    y, z = DIN(x)<br>    <br>    x1 = torch.einsum(<span class="hljs-string">&#x27;bcij,bcij-&gt;bcij&#x27;</span>, [x,y])<br>    <span class="hljs-comment"># x = F.interpolate(x, scale_factor=0.5, mode=&#x27;area&#x27;)</span><br>    x1 = F.avg_pool2d(x1, kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>)<br>    x1 = x1*<span class="hljs-number">4</span><br><br>    x2 = F.interpolate(x1, scale_factor=<span class="hljs-number">2</span>, mode=<span class="hljs-string">&#x27;nearest&#x27;</span>)<br>    x2 = torch.einsum(<span class="hljs-string">&#x27;bcij,bcij-&gt;bcij&#x27;</span>, [x2,z])<br>    <span class="hljs-built_in">print</span>(x1.size())<br>    <span class="hljs-built_in">print</span>(x2.size())<br></code></pre></td></tr></table></figure><h3 id="代码经验"><a class="markdownIt-Anchor" href="#代码经验"></a> 代码经验：</h3><ul><li>对于一些不确定是否存在的层，将这些层设置为None就可以跳过他们，而不需要写两个<code>nn.Sequence</code></li><li>对于重复性的层，合理使用列表生成式写法减少代码量</li></ul><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://ieeexplore.ieee.org/document/9123580/">Index Networks</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CARAFE上采样算子</title>
    <link href="/2023/11/17/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/CARAFE/"/>
    <url>/2023/11/17/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/CARAFE/</url>
    
    <content type="html"><![CDATA[<h1 id="carafe"><a class="markdownIt-Anchor" href="#carafe"></a> CARAFE</h1><p>​在图像任务中，不同的部分图像对操作的要求不一样（比如图像边界需要提出边界信息，插值的方法就不如反最大值池化的操作；图像内部我们又需要邻域像素点的信息进行上采样的操作，这种情况下反最大值池化又不如插值方法），所以我们不能在图像中简单地用一个算子进行上采样，CARAFA是基于图像内容特征进行的采样方式。</p><h2 id="上采样方式"><a class="markdownIt-Anchor" href="#上采样方式"></a> 上采样方式：</h2><p><img src="/2023/11/17/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/CARAFE/1.png" alt="CARAFE net"></p><h3 id="kernel-prediction-module"><a class="markdownIt-Anchor" href="#kernel-prediction-module"></a> kernel Prediction Module</h3><p>​产生上采样算子的模块，Channel Compresser进行的一部是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">1 \times 1 \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的卷积操作，这部的目的是减少参数量，减少Computational cost。Content Encoder就是一个全卷积层，通过卷积感知邻域信息进行编码，注意卷积核的数量要符合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>×</mo><msubsup><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2 \times k_{up}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 以满足后续的上采样操作，再将得到的feature map展平为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mi>H</mi><mo>×</mo><mi>σ</mi><mi>W</mi><mo>×</mo><msubsup><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma H \times \sigma W \times k_{up}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> ，再经过一次正则化就产生了上采样算子</p><h3 id="content-aware-reassembly-module"><a class="markdownIt-Anchor" href="#content-aware-reassembly-module"></a> Content-aware Reassembly Module</h3><p>​论文中上采样操作为：对于原图像中任一个像素点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">x</mi></mrow><annotation encoding="application/x-tex">\mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span> ，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi mathvariant="script">x</mi><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(\mathscr{x}, k_{up})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">x</mi></mrow><annotation encoding="application/x-tex">\mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span> 为中心，边长为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">k_{up}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的方邻域，将原 feature map 先后进行通道压缩，内容编码，变换形状后再进行正则化操作得到上采样算子，在将原 feature map 的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi mathvariant="script">x</mi><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(\mathscr{x}, k_{up})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和上采样算子的对应点沿通道进行相乘，运算如上图所示，这样得到的feature map的大小变为了原来的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 倍，而通道数不变，这样就完成了上采样的操作。</p><h2 id="下采样方式"><a class="markdownIt-Anchor" href="#下采样方式"></a> 下采样方式：</h2><p><img src="/2023/11/17/%E7%A7%91%E7%A0%94/cv%E5%8A%A8%E6%80%81%E9%87%87%E6%A0%B7%E7%AE%97%E5%AD%90/CARAFE/2.png" alt="CARAFE_net"></p><p>​下采样的结构与上采样结构相似，只是在 Content_Encoder 部分使用了步幅为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 的卷积，以此生成对应数量的采样核，因为大小已经满足需要，后续就不需要进行 pixeL-shuffle 操作了，接下来的过程与上采样相同</p><h2 id="上下采样算子的协同使用"><a class="markdownIt-Anchor" href="#上下采样算子的协同使用"></a> 上下采样算子的协同使用：</h2><p>​论文中提到了：Experimental results show that adopting CARAFE++ in both upsampling and downsampling can consistently and substantially outperforms CARAFE on object detection, instance segmentation, semantic segmentation and image inpainting</p><p>​这启发我们再后续的工作中探讨：<strong>上下采样算子的对应关系是否会影响采样的性能，我们能不能找出一般化的上下采样算子的对应准则？即去讨论上下采样算子的协同性，以此去指导上下采样过程</strong></p><h3 id="question"><a class="markdownIt-Anchor" href="#question"></a> Question：</h3><p>文章中：Note that these spatially adaptive weights are <strong>not learned as network parameters. Instead, they are predicted on-the-fly,</strong> using a lightweight fully-convolutional module with softmax activation.</p><p>not learned bur predicted 的意思是什么?</p><p>​动态卷积核并不是在学习卷积核，如果学习的是卷积核，那么学习完成之后的卷积核依然是静态的。backward 学习的是：根据输入 feature map 而生成的生成卷积核的函数，这样卷积核就是动态生成的了。</p><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CARAFE_downsample</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, c_mid, encoder_size, ratio=<span class="hljs-number">2</span>, k_up=<span class="hljs-number">5</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        padding = <span class="hljs-number">2</span> <span class="hljs-comment"># 只允许 encoder_size=5, ratio=2</span><br>        self.ratio = ratio<br>        self.k_up = k_up<br>        self.unfold_padding = <span class="hljs-number">2</span> <span class="hljs-comment"># k_up=5, ratio=2</span><br>        self.comp = nn.Conv2d(c_in, c_mid, kernel_size=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>)<br>        self.content_encoder = nn.Conv2d(c_mid, k_up**<span class="hljs-number">2</span>, kernel_size=encoder_size,<br>                                         stride=ratio, padding=padding)<br>        <br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        _, _, _, W = x.size()<br>        y = self.comp(x)<br>        y = self.content_encoder(y)<br>        y = F.softmax(y, dim=<span class="hljs-number">1</span>)<br><br>        z = F.unfold(x, kernel_size=self.k_up, stride=self.ratio, padding=self.unfold_padding)<br>        z = einops.rearrange(z, <span class="hljs-string">&#x27;b (c k_up2) (h w) -&gt; b k_up2 c h w&#x27;</span>,<br>                             k_up2=self.k_up**<span class="hljs-number">2</span>, w=W//self.ratio)<br>        x = torch.einsum(<span class="hljs-string">&#x27;bkchw,bkhw-&gt;bchw&#x27;</span>,[z, y])<br>        <span class="hljs-keyword">return</span> x<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CARAFE_upsample</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, c_mid, encoder_size, ratio=<span class="hljs-number">2</span>, k_up=<span class="hljs-number">5</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        padding = (encoder_size-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span> <span class="hljs-keyword">if</span> encoder_size%<span class="hljs-number">2</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> encoder_size//<span class="hljs-number">2</span><br>        self.ratio = ratio<br>        self.k_up = k_up<br>        self.unfold_padding = (k_up-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span> <span class="hljs-keyword">if</span> k_up%<span class="hljs-number">2</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_up//<span class="hljs-number">2</span><br>        self.comp = nn.Conv2d(c_in, c_mid, kernel_size=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>)<br>        self.content_encoder = nn.Conv2d(c_mid, (ratio*k_up)**<span class="hljs-number">2</span>, kernel_size=encoder_size,<br>                                         padding=padding)<br>        <br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        _, _, _, W = x.size()<br>        y = self.comp(x)<br>        y = self.content_encoder(y)<br>        y = F.pixel_shuffle(y, upscale_factor=self.ratio)<br>        y = F.softmax(y, dim=<span class="hljs-number">1</span>)<br>        <br>        z = F.unfold(x, kernel_size=self.k_up, padding=self.unfold_padding)<br>        z = einops.rearrange(z, <span class="hljs-string">&#x27;b (c k_up2) (h w) -&gt; b k_up2 c h w&#x27;</span>,<br>                             k_up2=self.k_up**<span class="hljs-number">2</span>, w=W)<br>        z = einops.repeat(z, <span class="hljs-string">&#x27;b k c h w -&gt; ratio_2 b k c h w&#x27;</span>, ratio_2=self.ratio**<span class="hljs-number">2</span>)<br>        z = einops.rearrange(z, <span class="hljs-string">&#x27;(r1 r2) b k_up2 c h w -&gt; b k_up2 c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio)<br>        x = torch.einsum(<span class="hljs-string">&#x27;bkchw,bkhw-&gt;bchw&#x27;</span>,[z, y])<br>        <span class="hljs-keyword">return</span> x<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># torch.manual_seed(0)</span><br>    <span class="hljs-comment"># x = torch.Tensor(3, 16, 24, 24)</span><br>    <span class="hljs-comment"># carafe1 = CARAFE_upsample(16, 64, 5, ratio=2)</span><br>    <span class="hljs-comment"># oup = carafe1(x)</span><br>    <span class="hljs-comment"># print(oup.size())</span><br><br>    <span class="hljs-comment"># x = torch.Tensor(3, 16, 24, 24)</span><br>    <span class="hljs-comment"># carafe2 = CARAFE_downsample(16, 64, 5, ratio=2)</span><br>    <span class="hljs-comment"># oup = carafe2(x)</span><br>    <span class="hljs-comment"># print(oup.size())</span><br></code></pre></td></tr></table></figure><ul><li>CARAFE在上采样时，由于生成的卷积算子要求原图像中一个点对应 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点，这样会导致卷积核移位的速度不一样，不容易求和。所以使用 <code>F.interpolate</code> 将原图像膨胀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 倍</li><li>要求原 feature map 中每一个点的邻域时，使用 <code>F.Unfold</code> 函数可以求出每个窗口</li><li>最后一步进行 einsum 操作时，将生成的四维卷积算子升为五维，多出来的一维专门用来求和，这样求和操作就变得很方便直观</li></ul><h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h3><p><a href="https://arxiv.org/pdf/1905.02188.pdf">CARAFE: Content-Aware ReAssembly of FEatures</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
