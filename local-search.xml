<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>MMseg1</title>
    <link href="/2024/02/28/MMseg1/"/>
    <url>/2024/02/28/MMseg1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Effective Python note(2)</title>
    <link href="/2024/02/24/Eff-py2/"/>
    <url>/2024/02/24/Eff-py2/</url>
    
    <content type="html"><![CDATA[<h1 id="effective-python-note2"><a class="markdownIt-Anchor" href="#effective-python-note2"></a> Effective Python note(2)</h1><h2 id="类与继承"><a class="markdownIt-Anchor" href="#类与继承"></a> 类与继承：</h2><h3 id="尽量用辅助类来维护程序的状态而不要用字典和元组"><a class="markdownIt-Anchor" href="#尽量用辅助类来维护程序的状态而不要用字典和元组"></a> 尽量用辅助类来维护程序的状态，而不要用字典和元组</h3><p>​在Python编程中，<strong>当需要在程序中维护状态时，应该优先考虑使用自定义的辅助类（辅助类是指那些主要用于封装数据和行为的类），而不是依赖于内置的字典（<code>dict</code>）或元组（<code>tuple</code>）类型</strong>。这是因为随着程序的复杂性增加，使用字典和元组可能会导致代码难以理解和维护</p><p><strong>主要考虑两点</strong>：</p><ul><li><strong>代码的可维护性</strong>：随着需求的变化，如果使用字典和元组来维护状态，可能需要对数据结构进行复杂的修改，这会导致代码难以理解和维护</li><li><strong>辅助类的优势</strong>：使用辅助类可以提供更明确的接口和更好的封装。当状态变得复杂时，将数据结构拆解为多个辅助类，可以创建一个抽象层，使得代码更加清晰和易于维护</li></ul><p>假设我们需要管理一个学生的成绩，包括学生的名字和他们的成绩：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">grades = &#123;&#125;<br>grades[<span class="hljs-string">&#x27;Alice&#x27;</span>] = <span class="hljs-number">95</span><br>grades[<span class="hljs-string">&#x27;Bob&#x27;</span>] = <span class="hljs-number">85</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">report_grade</span>(<span class="hljs-params">name, score</span>):<br>    grades[name] = score<br><br><span class="hljs-comment"># 计算平均成绩</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">average_grade</span>():<br>    total = <span class="hljs-built_in">sum</span>(grades.values())<br>    count = <span class="hljs-built_in">len</span>(grades)<br>    <span class="hljs-keyword">return</span> total / count <span class="hljs-keyword">if</span> count <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 使用辅助类的示例</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">StudentGradebook</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.grades = &#123;&#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">add_student</span>(<span class="hljs-params">self, name, score</span>):<br>        self.grades[name] = score<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">report_grade</span>(<span class="hljs-params">self, name, score</span>):<br>        self.grades[name] = score<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">average_grade</span>(<span class="hljs-params">self</span>):<br>        total = <span class="hljs-built_in">sum</span>(self.grades.values())<br>        count = <span class="hljs-built_in">len</span>(self.grades)<br>        <span class="hljs-keyword">return</span> total / count <span class="hljs-keyword">if</span> count <span class="hljs-keyword">else</span> <span class="hljs-number">0</span><br><br><span class="hljs-comment"># 使用辅助类来管理成绩</span><br>gradebook = StudentGradebook()<br>gradebook.add_student(<span class="hljs-string">&#x27;Alice&#x27;</span>, <span class="hljs-number">95</span>)<br>gradebook.add_student(<span class="hljs-string">&#x27;Bob&#x27;</span>, <span class="hljs-number">85</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Average grade:&quot;</span>, gradebook.average_grade())<br></code></pre></td></tr></table></figure><h3 id="以-classmethod-形式的多态去通用地构建对象"><a class="markdownIt-Anchor" href="#以-classmethod-形式的多态去通用地构建对象"></a> 以 <code>@classmethod</code> 形式的多态去通用地构建对象</h3><p>​建议提倡在Python中使用<code>@classmethod</code>来实现类方法的多态性。由于Python不像C++一样，同一个类可以有不同的构造函数，Python只有<code>__init__</code>构造，因此使用<code>@classmethod</code></p><p>​<strong>通用构造器（Generic Constructor）</strong>：使用<code>@classmethod</code>定义的类方法可以作为通用构造器，它允许你为类定义一个统一的创建接口，而不需要为每个子类单独定义构造器。<strong>这在创建具有不同配置或行为的实例时特别有用</strong></p><p>​假设我们有一个<code>Shape</code>类，它是一个抽象的图形基类。我们想要创建一个通用的构造器，它可以根据不同的参数创建不同类型的子类实例，比如<code>Circle</code>和<code>Rectangle</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Shape</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name</span>):<br>        self.name = name<br><br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create_shape</span>(<span class="hljs-params">cls, shape_type, **kwargs</span>):<br>        <span class="hljs-keyword">if</span> shape_type == <span class="hljs-string">&#x27;circle&#x27;</span>:<br>            <span class="hljs-keyword">return</span> Circle(**kwargs)<br>        <span class="hljs-keyword">elif</span> shape_type == <span class="hljs-string">&#x27;rectangle&#x27;</span>:<br>            <span class="hljs-keyword">return</span> Rectangle(**kwargs)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">f&quot;Unknown shape type: <span class="hljs-subst">&#123;shape_type&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Circle</span>(<span class="hljs-title class_ inherited__">Shape</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, radius</span>):<br>        <span class="hljs-built_in">super</span>().__init__(<span class="hljs-string">&#x27;Circle&#x27;</span>)<br>        self.radius = radius<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Rectangle</span>(<span class="hljs-title class_ inherited__">Shape</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, width, height</span>):<br>        <span class="hljs-built_in">super</span>().__init__(<span class="hljs-string">&#x27;Rectangle&#x27;</span>)<br>        self.width = width<br>        self.height = height<br><br><span class="hljs-comment"># 使用通用构造器创建实例</span><br>circle = Shape.create_shape(<span class="hljs-string">&#x27;circle&#x27;</span>, radius=<span class="hljs-number">5</span>)<br>rectangle = Shape.create_shape(<span class="hljs-string">&#x27;rectangle&#x27;</span>, width=<span class="hljs-number">4</span>, height=<span class="hljs-number">6</span>)<br><br><span class="hljs-built_in">print</span>(circle.name, circle.radius)  <span class="hljs-comment"># 输出: Circle 5</span><br><span class="hljs-built_in">print</span>(rectangle.name, rectangle.width, rectangle.height)  <span class="hljs-comment"># 输出: Rectangle 4 6</span><br></code></pre></td></tr></table></figure><h3 id="继承-collectionsabc以实现自定义的容器类型"><a class="markdownIt-Anchor" href="#继承-collectionsabc以实现自定义的容器类型"></a> 继承 <code>collections.abc</code>以实现自定义的容器类型</h3><p>​需要创建自定义的容器类型时，应该继承自<code>collections.abc</code>模块中的抽象基类（Abstract Base Classes，简称ABC）。这些ABC提供了各种容器类型（如<code>Sequence</code>、<code>Mapping</code>、<code>Set</code>等）的标准接口和行为。通过继承这些ABC，你的自定义类将自动获得这些标准行为，同时确保了与Python内置容器类型相似的接口一致性。</p><ul><li><strong>自定义容器的挑战</strong>：在Python中，创建自定义容器类型通常需要实现一系列特殊的方法（如<code>__len__</code>、<code>__getitem__</code>、<code>__setitem__</code>等），这些方法定义了容器的基本行为。手动实现这些方法可能会非常繁琐，并且容易出错。</li><li><strong>利用ABC的优势</strong>：通过继承<code>collections.abc</code>中的ABC，你可以确保你的自定义类遵循了正确的接口。如果遗漏了某个方法，Python解释器会在你尝试实例化该类时抛出错误，从而帮助你发现问题。此外，一旦你的类实现了ABC要求的所有方法，它就可以被视为一个合法的容器类型，并且可以使用Python内置的函数和方法，如<code>len()</code>、<code>in</code>操作符等。</li></ul><p>​为了创建一个自定义的二叉树数据结构，并且希望它能够像Python内置的序列类型（如列表）那样被处理，我们可以继承<code>collections.abc</code>中的<code>Sequence</code>抽象基类。这样，我们的二叉树就可以使用<code>len()</code>、<code>__getitem__()</code>等内置方法，同时保持二叉树的特性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> collections.abc <span class="hljs-keyword">import</span> <span class="hljs-type">Sequence</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">TreeNode</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, value</span>):<br>        self.value = value<br>        self.left = <span class="hljs-literal">None</span><br>        self.right = <span class="hljs-literal">None</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">BinaryTree</span>(<span class="hljs-title class_ inherited__">Sequence</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, root=<span class="hljs-literal">None</span></span>):<br>        self.root = root<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span> + <span class="hljs-built_in">len</span>(self.root.left) + <span class="hljs-built_in">len</span>(self.root.right)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            <span class="hljs-keyword">raise</span> IndexError(<span class="hljs-string">&quot;Tree is empty&quot;</span>)<br>        <span class="hljs-keyword">return</span> self._get_element_at_index(index)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_element_at_index</span>(<span class="hljs-params">self, index</span>):<br>        <span class="hljs-keyword">if</span> index == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> self.root.value<br>        left_len = <span class="hljs-built_in">len</span>(self.root.left)<br>        <span class="hljs-keyword">if</span> index &lt; left_len:<br>            <span class="hljs-keyword">return</span> self.root.left._get_element_at_index(index)<br>        <span class="hljs-keyword">elif</span> index == left_len:<br>            <span class="hljs-keyword">return</span> self.root.value<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.root.right._get_element_at_index(index - left_len - <span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">insert</span>(<span class="hljs-params">self, value</span>):<br>        <span class="hljs-keyword">if</span> self.root <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            self.root = TreeNode(value)<br>        <span class="hljs-keyword">else</span>:<br>            self._insert_into_tree(self.root, value)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_insert_into_tree</span>(<span class="hljs-params">self, node, value</span>):<br>        <span class="hljs-keyword">if</span> value &lt; node.value:<br>            <span class="hljs-keyword">if</span> node.left <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                node.left = TreeNode(value)<br>            <span class="hljs-keyword">else</span>:<br>                self._insert_into_tree(node.left, value)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">if</span> node.right <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                node.right = TreeNode(value)<br>            <span class="hljs-keyword">else</span>:<br>                self._insert_into_tree(node.right, value)<br><br><span class="hljs-comment"># 使用自定义的二叉树</span><br>tree = BinaryTree()<br>tree.insert(<span class="hljs-number">5</span>)<br>tree.insert(<span class="hljs-number">3</span>)<br>tree.insert(<span class="hljs-number">7</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(tree))  <span class="hljs-comment"># 输出: 3</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">0</span>])   <span class="hljs-comment"># 输出: 5</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">1</span>])   <span class="hljs-comment"># 输出: 3</span><br><span class="hljs-built_in">print</span>(tree[<span class="hljs-number">2</span>])   <span class="hljs-comment"># 输出: 7</span><br></code></pre></td></tr></table></figure><p>​在这个例子中，<code>BinaryTree</code>类继承自<code>Sequence</code>，它提供了<code>__len__</code>和<code>__getitem__</code>方法，使得二叉树可以像序列一样被访问</p><h3 id="还有一些小建议"><a class="markdownIt-Anchor" href="#还有一些小建议"></a> 还有一些小建议：</h3><ul><li>只在使用 Mix-in 组件制作工具类时进行多重继承</li><li>多用 public 属性(<code>_name</code>)，少用 private 属性(<code>__name</code>)</li><li>用<code>super</code>去初始化父类</li></ul><h2 id="元类及属性"><a class="markdownIt-Anchor" href="#元类及属性"></a> 元类及属性：</h2><p>​又复杂又难看又用不着，以后有时间再更</p>]]></content>
    
    
    <categories>
      
      <category>booknotes</category>
      
      <category>Effective Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Effective Python note(1)</title>
    <link href="/2024/02/23/Eff-py1/"/>
    <url>/2024/02/23/Eff-py1/</url>
    
    <content type="html"><![CDATA[<h1 id="effective-python-note1"><a class="markdownIt-Anchor" href="#effective-python-note1"></a> Effective Python note(1)</h1><h2 id="pythonic"><a class="markdownIt-Anchor" href="#pythonic"></a> Pythonic：</h2><h3 id="pep8-的一些重要规范"><a class="markdownIt-Anchor" href="#pep8-的一些重要规范"></a> PEP8 的一些重要规范：</h3><ul><li>每行字符数不超过79</li><li>长表达式换行时，首行后每行额外缩进4个空格</li><li>文件中函数与类间用两个空行分隔</li><li>同一类内各方法间用一个空行隔开</li><li>函数、变量及属性命名使用小写字母并以下划线相连，如 <code>lowercase_underscore</code></li><li>受保护实例属性以单下划线开头，例如 <code>_leading_underscore</code></li><li>私有实例属性以双下划线开头，例如 <code>__double_leading_underscore</code></li><li>类与异常名采用每个单词首字母大写的格式，例如 <code>CapitalizedWord</code></li><li>模块级别常量全用大写字母拼写，单词间以下划线连接，如 <code>ALL_CAPS</code></li><li>类方法首个参数应命名为 <code>cls</code> 表示该类自身</li><li>如必须相对导入，则明确书写：<code>from . import foo</code></li><li>文件中的import语句按顺序分为三部分：标准库模块、第三方模块和自定义模块。各部分内部按照模块名称字母顺序排列import语句</li><li>检查<code>somelist</code>是否为非空值（如[1]或’hi’）时，遵循此原则；非空值在条件判断中默认视为True</li><li>用<code>zip</code>函数同时遍历两个迭代器</li></ul><p><a href="www.python.org/dev/peps/pep-0008">更多规范查询官方手册，最好全部都看一遍</a></p><h3 id="bytes-和-str区别与操作"><a class="markdownIt-Anchor" href="#bytes-和-str区别与操作"></a> bytes 和 str区别与操作</h3><ol><li><strong>类型本质</strong>：<ul><li><code>str</code>（字符串）：表示文本数据，存储的是Unicode编码的字符序列。Python 3中所有文本字符串默认都是Unicode编码的</li><li><code>bytes</code>（字节串）：表示二进制数据，存储的是一个8位字节的序列。它通常用于网络传输、磁盘文件读写等场景，可能包含图像、音频等原始非文本数据</li></ul></li><li><strong>内容形式</strong>：<ul><li><code>str</code> 类型的数据由一系列Unicode码点组成，每个码点对应一个字符</li><li><code>bytes</code> 类型的数据是由一连串的整数（0-255）组成的序列，这些整数代表了原始字节值</li></ul></li><li><strong>操作方式</strong>：<ul><li><code>str</code> 字符串可以进行各种文本操作，如连接、查找、替换等，并支持多语言字符</li><li><code>bytes</code> 字节串不能直接进行文本处理操作，但可以执行二进制操作，如按字节切片、比较等</li></ul></li><li><strong>转换关系</strong>：<ul><li>从文本到二进制：通过编码（encoding），将 <code>str</code> 转换为 <code>bytes</code>，例如使用 <code>my_str.encode('utf-8')</code> 将文本转换成UTF-8编码的字节串</li><li>从二进制到文本：通过解码（decoding），将 <code>bytes</code> 转换为 <code>str</code>，例如使用 <code>my_bytes.decode('utf-8')</code> 将UTF-8编码的字节串转换回文本</li></ul></li></ol><p>​<strong>Python 3 不允许隐式地混合 <code>str</code> 和 <code>bytes</code> 数据，比如你不能拼接字符串和字节流，也不能在字节串里搜索字符串，必须显式地进行类型转换后才能进行相应的操作。编写Python程序时，一定要先把编码和解码操作放在界面外围，程序的核心部分使用<code>str</code>数据类型，且不要对编码做任何假设</strong></p><p>例如我们需要编写接受<code>str</code>或<code>bytes</code>，并总是返回<code>str</code> 的 方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">to_str</span>(<span class="hljs-params">Cbytes_or_str</span>):<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bytes_or_str，<span class="hljs-built_in">bytes</span>) :<br>Value = bytes_or_str.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>Value = bytes_or_str<br><span class="hljs-keyword">return</span> value<br></code></pre></td></tr></table></figure><h3 id="合理利用try-except-else-finally结构中的每个代码块"><a class="markdownIt-Anchor" href="#合理利用try-except-else-finally结构中的每个代码块"></a> 合理利用<code>try except else finally</code>结构中的每个代码块</h3><ul><li><p><strong>try</strong> 块用于测试一段代码是否存在错误</p></li><li><p><strong>except</strong> 块用于处理错误</p></li><li><p><strong>else</strong> 块用于在没有错误时执行代码</p></li><li><p><strong>finally</strong> 块用于无论 <strong>try</strong> 和 <strong>except</strong> 块的结果如何都要执行的代码</p></li></ul><p>​不论<code>try</code>块是否发生异常，均可通过<code>try/finally</code>复合语句中的<code>finally</code>块执行清理工作。若在成功执行<code>try</code>块后，希望在<code>finally</code>块的清理代码之前执行某些操作，则可将这些操作置于<code>else</code>块中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">divide_json</span>(<span class="hljs-params">Cpath</span>):<br>    handle = <span class="hljs-built_in">open</span>(Cpath, <span class="hljs-string">&quot;r+&quot;</span>)<br>    <span class="hljs-comment"># 可能引发 IOError</span><br>    <span class="hljs-keyword">try</span>:<br>        data = handle.read()        <span class="hljs-comment"># 可能引发 UnicodeDecodeError</span><br>        op = json.loads(data) <span class="hljs-comment"># 可能引发 ValueError</span><br>        value = op[<span class="hljs-string">&#x27;numerator&#x27;</span>] / op[<span class="hljs-string">&#x27;denominator&#x27;</span>] <span class="hljs-comment"># 可能引发 ZeroDivisionError</span><br>    <span class="hljs-keyword">except</span> ZeroDivisionError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-keyword">return</span> UNDEFINED<br>    <span class="hljs-keyword">else</span>:<br>        op[<span class="hljs-string">&#x27;result&#x27;</span>] = value<br>        result = json.dumps(op)<br>        handle.seek(<span class="hljs-number">0</span>)<br>        handle.write(result)  <span class="hljs-comment"># 可能引发 IOError</span><br>    <span class="hljs-keyword">finally</span>:<br>        handle.close()  <span class="hljs-comment"># 总会执行</span><br>    <span class="hljs-keyword">return</span> value<br></code></pre></td></tr></table></figure><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数：</h2><ul><li>尽量使用异常来表示特殊情况，而不是返回None</li><li>慎用<code>nonlocal</code>语句，因为它像<code>global</code>那样容易被滥用。建议仅在非常简单的函数中使用这种机制。<code>nonlocal</code>的副作用很难追踪</li><li>考虑使用生成器来改写直接返回列表的函数</li><li>使用只能以关键字形式指定的参数，以确保代码明晰</li></ul><h3 id="args与kargs参数使用"><a class="markdownIt-Anchor" href="#args与kargs参数使用"></a> <code>*args</code>与<code>**kargs</code>参数使用：</h3><ul><li>令函数接受可选的位置参数（由于这种参数习惯上写作<code>*args</code>，所以又被称为<code>star args</code>或星号参数），能够使代码更加清晰，并减少 visual noise</li><li>尽量只在函数参数个数少的情况下使用这两个可变长参数</li><li>在已经接受<code>*args</code>参数的函数上面继续添加位置参数，可能会产生难以排查的bug</li></ul><p>例如，要定义一个<code>log</code>函数以便打印一些调试信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">message, *values</span>):<br>    <span class="hljs-comment"># 如果没有values，直接打印message</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> values:<br>        <span class="hljs-built_in">print</span>(message)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 将values中的元素转换为字符串并用逗号连接</span><br>        values_str = <span class="hljs-string">&#x27;, &#x27;</span>.join(<span class="hljs-built_in">str</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> values)<br>        <span class="hljs-comment"># 打印message和values_str</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;message&#125;</span>: <span class="hljs-subst">&#123;values_str&#125;</span>&#x27;</span>)<br><br><span class="hljs-comment"># 使用示例</span><br>log(<span class="hljs-string">&#x27;My numbers are&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br>log(<span class="hljs-string">&#x27;Hi there&#x27;</span>)<br>&gt;&gt;&gt;<br>My numbers are: <span class="hljs-number">1</span>, <span class="hljs-number">2</span><br>Hi there<br></code></pre></td></tr></table></figure><p>在这个例子中，<code>log</code>函数通过<code>*values</code>参数可以接受任意数量的额外参数，这些参数在打印时会被格式化为一个列表。这种使用<code>*args</code>的方式使得函数调用更加灵活，同时也提高了代码的可读性</p><p>​但是这种参数会带来两个问题：</p><ul><li>变长参数在传给函数时，总是要先转化成元组（tuple）。这意味着，如果用带有 * 操作符的生成器作为参数来调用这种函数，那么 Python 就必须要先把该生成器完整地迭代一轮，并将生成器所生成的每一个值都存储起来。这可能会消耗大量内存，并导致程序崩溃</li><li>如果以后要给函数添加新的可选位置参数，那就必须修改原来调用该函数的那些旧代码。若是只给参数列表前方添加新的可选位置参数，而不更新现有的调用代码，那么可能会产生难以调试的错误</li></ul><p>​对于第二个问题，我们可以使用<code>**kargs</code>参数或者<code>*</code>符号解决：</p><p>​在Python3中，定义<strong>的参数之间加上<code>*</code>，它表示在该位置之前的所有参数必须是位置参数，而<code>*</code>之后的所有参数必须是关键字参数</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_function</span>(<span class="hljs-params">positional_arg1, positional_arg2, *, keyword_arg1, keyword_arg2</span>):<br>    <span class="hljs-built_in">print</span>(positional_arg1, positional_arg2, keyword_arg1, keyword_arg2)<br><br><span class="hljs-comment"># 调用函数时，positional_arg1 和 positional_arg2 是位置参数，</span><br><span class="hljs-comment"># keyword_arg1 和 keyword_arg2 是关键字参数。</span><br>my_function(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, keyword_arg1=<span class="hljs-string">&#x27;c&#x27;</span>, keyword_arg2=<span class="hljs-string">&#x27;d&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>booknotes</category>
      
      <category>Effective Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-glob</title>
    <link href="/2024/02/21/Python-glob/"/>
    <url>/2024/02/21/Python-glob/</url>
    
    <content type="html"><![CDATA[<h1 id="python-标准库glob-模块"><a class="markdownIt-Anchor" href="#python-标准库glob-模块"></a> <code>Python</code> 标准库——<code>glob</code> 模块</h1><p><code>glob</code> 是 Python 标准库中的一个模块，它提供了一种简单的方式来查找符合特定模式的文件路径。这个模块特别适用于在文件系统中搜索文件，它支持多种通配符：</p><ul><li><code>*</code>：匹配任意数量（包括零个）的字符</li><li><code>?</code>：匹配任意单个字符</li><li><code>[]</code>：匹配指定范围内的字符，例如 <code>[a-z]</code> 匹配任意小写字母，<code>[0-9]</code> 匹配任意数字</li><li><code>[!...]</code>：匹配不在指定范围内的字符</li></ul><h2 id="glob-模块的具体使用"><a class="markdownIt-Anchor" href="#glob-模块的具体使用"></a> <code>glob</code> 模块的具体使用</h2><h3 id="glob模块方法属性"><a class="markdownIt-Anchor" href="#glob模块方法属性"></a> glob模块方法属性：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">dir</span>(glob)<br>[<span class="hljs-string">&#x27;__all__&#x27;</span>, <span class="hljs-string">&#x27;__builtins__&#x27;</span>, <span class="hljs-string">&#x27;__cached__&#x27;</span>, <span class="hljs-string">&#x27;__doc__&#x27;</span>, <span class="hljs-string">&#x27;__file__&#x27;</span>, <span class="hljs-string">&#x27;__loader__&#x27;</span>,<br><span class="hljs-string">&#x27;__name__&#x27;</span>, <span class="hljs-string">&#x27;__package__&#x27;</span>, <span class="hljs-string">&#x27;__spec__&#x27;</span>, <span class="hljs-string">&#x27;_glob0&#x27;</span>, <span class="hljs-string">&#x27;_glob1&#x27;</span>, <span class="hljs-string">&#x27;_glob2&#x27;</span>, <span class="hljs-string">&#x27;_iglob&#x27;</span>,<br><span class="hljs-string">&#x27;_ishidden&#x27;</span>, <span class="hljs-string">&#x27;_isrecursive&#x27;</span>, <span class="hljs-string">&#x27;_iterdir&#x27;</span>, <span class="hljs-string">&#x27;_rlistdir&#x27;</span>, <span class="hljs-string">&#x27;escape&#x27;</span>, <span class="hljs-string">&#x27;fnmatch&#x27;</span>,<br><span class="hljs-string">&#x27;glob&#x27;</span>, <span class="hljs-string">&#x27;glob0&#x27;</span>, <span class="hljs-string">&#x27;glob1&#x27;</span>, <span class="hljs-string">&#x27;has_magic&#x27;</span>, <span class="hljs-string">&#x27;iglob&#x27;</span>, <span class="hljs-string">&#x27;magic_check&#x27;</span>,<br><span class="hljs-string">&#x27;magic_check_bytes&#x27;</span>, <span class="hljs-string">&#x27;os&#x27;</span>, <span class="hljs-string">&#x27;re&#x27;</span>]<br>&gt;&gt;&gt;<br></code></pre></td></tr></table></figure><p>glob模块常用的两个方法有： <code>glob.glob() &amp; glob.iglob</code>，下面详细介绍</p><ol><li><p><code>glob.glob(pathname, *, recursive=False)</code>： 这个函数返回一个列表，包含了与 <code>pathname</code> 参数指定的模式匹配的所有文件路径。如果不指定 <code>recursive</code> 参数或者将其设置为 <code>False</code>，则只匹配当前目录下的文件。如果设置为 <code>True</code>，则会递归地搜索所有子目录</p><p>参数解释：</p><ul><li><code>pathname</code>：要匹配的文件路径模式，可以包含通配符</li><li><code>recursive</code>（可选）：布尔值，指定是否递归搜索子目录。默认为 <code>False</code></li></ul><p>返回值：</p><ul><li>一个列表，包含了所有匹配的文件路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> glob<br><span class="hljs-comment"># 匹配当前目录下所有以 &#x27;.txt&#x27; 结尾的文件</span><br>txt_files = glob.glob(<span class="hljs-string">&#x27;*.txt&#x27;</span>)<br><span class="hljs-comment"># 在路径模式 &#x27;data/**/*.csv&#x27; 中，第一个 * 匹配 data 目录下的任何文件或子目录，而 ** 则指示 glob 继续在这些子目录中递归搜索，直到找到所有 .csv 文件，如果采用这写法，recursive=True可以不写</span><br>csv_files = glob.glob(<span class="hljs-string">&#x27;data/**/*.csv&#x27;</span>, recursive=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure></li><li><p><code>glob.iglob(pathname, *, recursive=False)</code>： 这个函数与 <code>glob.glob()</code> 类似，但它返回的是一个迭代器，而不是一个列表。这在处理大量文件时非常有用，因为它不需要一次性加载所有匹配的文件路径，从而节省内存。</p><p>参数和返回值与 <code>glob.glob()</code> 相同，只是返回的是一个迭代器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> glob<br><span class="hljs-comment"># 使用迭代器递归匹配 &#x27;data&#x27; 目录下所有 &#x27;.csv&#x27; 文件</span><br><span class="hljs-keyword">for</span> csv_file <span class="hljs-keyword">in</span> glob.iglob(<span class="hljs-string">&#x27;data/**/*.csv&#x27;</span>, recursive=<span class="hljs-literal">True</span>):<br>    <span class="hljs-built_in">print</span>(csv_file)<br></code></pre></td></tr></table></figure></li></ol><p>配合 Python 中 str 加法的语法糖，这两个函数可以用得十分简洁高效，例如加载所有保存的上下采样为 B 和 A 的 <code>A+B.pth</code> 模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">down_sampling = [<span class="hljs-string">&quot;avg-pooling&quot;</span>, <span class="hljs-string">&quot;max-pooling&quot;</span>, <span class="hljs-string">&quot;dysample&quot;</span>]<br>up_sampling = [<span class="hljs-string">&quot;bilinear&quot;</span>, <span class="hljs-string">&quot;max-unpooling&quot;</span>, <span class="hljs-string">&quot;dysample&quot;</span>]<br><span class="hljs-keyword">for</span> down <span class="hljs-keyword">in</span> down_sampling:<br>    <span class="hljs-keyword">for</span> up <span class="hljs-keyword">in</span> up_sampling:<br>        model = torch.load(down + <span class="hljs-string">&quot;+&quot;</span> + up + <span class="hljs-string">&quot;.pth&quot;</span>)<br>        <span class="hljs-comment"># inference...</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch多GPU并行</title>
    <link href="/2024/02/21/Pytorch-multiGPU/"/>
    <url>/2024/02/21/Pytorch-multiGPU/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch多gpu并行"><a class="markdownIt-Anchor" href="#pytorch多gpu并行"></a> Pytorch多GPU并行</h1><p>​在PyTorch中，多GPU并行确实可以分为数据并行（Data Parallelism）和模型并行（Model Parallelism），这两种并行策略针对不同的并行化需求</p><ol><li>数据并行（Data Parallelism）： 数据并行是最常见的并行策略，它通过将数据集分割成多个小batch，然后在多个GPU上并行处理这些部分。每个GPU上运行相同的模型副本，独立地计算前向传播和反向传播，最后将结果汇总。在PyTorch中，这可以通过<code>torch.nn.DataParallel</code>或<code>torch.nn.parallel.DistributedDataParallel</code>（DDP）来实现</li><li>模型并行（Model Parallelism）： 模型并行是将模型的不同部分分配到不同的GPU上。这种方法适用于模型太大，单个GPU无法容纳整个模型的情况。模型的不同层或模块被放置在不同的GPU上，每个GPU负责计算模型的一部分。这种方法需要更复杂的通信机制来协调不同GPU之间的计算。在PyTorch中，模型并行可以通过自定义的通信逻辑来实现，或者使用专门的库如<code>fairseq</code></li></ol><p>数据并行又主要分为三种方式：</p><ol><li>DP（Data Parallel）：在单个机器上的多个GPU上并行训练模型，这种方法适用于模型大小适中，单个GPU可以容纳整个模型的情况。</li><li>DDP（Distributed Data Parallel）：用于在多台机器上进行数据并行训练的高级API。这种方法适用于需要大规模分布式训练的场景，如大型模型或大数据集</li><li>FSDP（Fully Sharded Data Parallel）： Fully Sharded Data Parallel（FSDP）是Facebook AI Research (FAIR) 提出的一种新的并行策略，旨在解决DDP在大规模分布式训练中的通信瓶颈问题。FSDP通过将模型的权重分成多个部分（shards），并在不同的GPU上进行训练，从而减少了通信开销</li></ol><p>​平时用的对多的就是DP和DDP方式，同时，<strong>在Pytorch官方网站上已经推荐使用DDP去全面取代DP方式</strong>，即使在单个机器上，DDP运行效率仍然比DP要高。下面简单介绍一下DP与DDP的使用：</p><h2 id="数据并行dp"><a class="markdownIt-Anchor" href="#数据并行dp"></a> 数据并行(DP):</h2><p>​DP最大的好处就是简单，平时在小数据集和小模型实验的时候方便，默认情况下，<code>nn.DataParallel</code>会使用所有可用的GPU，用法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.nn.DataParallel(module, device_ids=<span class="hljs-literal">None</span>, output_device=<span class="hljs-literal">None</span>, dim=<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>device_ids</code>（可选）：一个整数列表，指定了要使用的 GPU 设备的 ID。如果为 <code>None</code>（默认值），则使用所有可用的 GPU</li><li><code>output_device</code>（可选）：指定输出结果应该被发送到哪个设备。如果为 <code>None</code>（默认值），则使用 <code>device_ids</code> 中的第一个设备</li><li><code>dim</code>（可选）：指定在哪个维度上进行数据并行。默认为 <code>0</code>，即在批次维度上进行并行</li></ul><p>返回值：</p><ul><li>返回一个 <code>DataParallel</code> 对象，它封装了传入的 <code>module</code>。这个对象可以像普通模块一样使用，但它会在多个 GPU 上并行执行模型的前向和后向传播。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-comment"># 设置有哪些GPU是&quot;可见&quot;的，然后下面使用这些所有的可见GPU</span><br><span class="hljs-comment"># 第一个编号代表着主卡的编号</span><br>os.environ[<span class="hljs-string">&quot;CUDA_VISIBLE_DEVICES&quot;</span>] = <span class="hljs-string">&quot;0,1,2,3&quot;</span><br><span class="hljs-keyword">import</span> torch<br><br>model = CreateModel(*args)<br><span class="hljs-keyword">if</span> torch.cuda.device_count() &gt; <span class="hljs-number">1</span>: <span class="hljs-comment"># 值为4</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Let&#x27;s us &quot;</span>, torch.cuda.device_count(), <span class="hljs-string">&quot;GPUs&quot;</span>)<br><span class="hljs-comment"># 使用DP:</span><br>    model = nn.DataParallel(model)<br>    <br>    <span class="hljs-comment"># 保存的是model.module而不是model。因为model其实是DDP model</span><br>    <span class="hljs-comment"># 参数是被`model=DDP(model)包起来的</span><br>    torch.save(model.module)<br></code></pre></td></tr></table></figure><p>​注意：<code>os.environ['CUDA_VISIBLE_DEVICES']</code> 必须在<code>import [torch]</code>之前，否则设置是无法生效的！</p><h2 id="分布式数据并行ddp"><a class="markdownIt-Anchor" href="#分布式数据并行ddp"></a> 分布式数据并行(DDP):</h2><p>​DDP通信算法是一个名为环形通信算法，他不需要等待每个GPU全部都计算完成，他没有主卡的概念，这使得计算过程中没有&quot;bubble&quot;，更专业的内容查看李沐的动手深度学习</p><p>​先看几个概念：</p><ul><li><p>world：代表全部计算设备，world_size就是全部GPU的数量</p></li><li><p>node：物理节点，就是一台机器（一个服务器），节点内部可以有多个GPU(一台机器有多卡)</p></li><li><p>rank &amp; local_rank：用于表示进程的序号，用于进程间通信。每一个进程对应了一个rank，rank=0的进程就是master进程</p></li></ul><p>​例如有两台服务器，第一台服务器有4卡，第二台服务器有3卡，那么<code>world_size=5  node=1,2  rank=[0,1,2,3,4,5,6]  local_rank=[0,1,2,3],[0,1,2]</code></p><p>​DDP的用法如下：</p><h4 id="1首先进行ddp初始化"><a class="markdownIt-Anchor" href="#1首先进行ddp初始化"></a> 1.首先进行DDP初始化：</h4><p><code>torch.distributed.init_process_group</code> 是分布式训练中用于初始化进程组的函数。这个函数设置了分布式环境，允许不同的进程之间进行通信</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.distributed.init_process_group(backend, init_method=<span class="hljs-literal">None</span>, timeout=datetime.timedelta(seconds=<span class="hljs-number">1800</span>), world_size=<span class="hljs-literal">None</span>, rank=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>参数解释：</p><ul><li><code>backend</code>：指定分布式通信的后端，如 <code>'nccl'</code>（用于多GPU环境）、<code>'gloo'</code>（用于CPU或单GPU环境）或 <code>'mpi'</code></li><li><code>init_method</code>（可选）：指定初始化方法的URL或文件路径。默认为 <code>None</code>，表示使用环境变量 <code>MASTER_ADDR</code> 和 <code>MASTER_PORT</code> 来初始化</li><li><code>timeout</code>（可选）：设置初始化过程的超时时间，默认为1800秒（30分钟）</li><li><code>world_size</code>（可选）：参与分布式训练的总进程数。默认为 <code>-1</code>，表示从环境变量中自动获取</li><li><code>rank</code>（可选）：当前进程的排名。默认为 <code>-1</code>，表示从环境变量中自动获取</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch.distributed <span class="hljs-keyword">as</span> dist<br><br>dist.init_process_group(backend=<span class="hljs-string">&#x27;nccl&#x27;</span>, init_method=<span class="hljs-string">&#x27;env://&#x27;</span>, world_size=num_processes, rank=process_rank)<br></code></pre></td></tr></table></figure><h4 id="2准备数据dataloader和sampler需要在ddp初始化之后进行"><a class="markdownIt-Anchor" href="#2准备数据dataloader和sampler需要在ddp初始化之后进行"></a> 2.准备数据dataloader和sampler，需要在DDP初始化之后进行：</h4><p>​<code>DistributedSampler</code> 是一个特殊的采样器（Sampler），它用于确保在多个进程（通常是多个 GPU 或多个节点）之间均匀且不重叠地分配数据集。这样，每个进程只处理数据集的一个子集，从而实现数据的并行处理，因此将原先的<code>dataloader</code>换为<code>DistributedSampler</code>即可，<strong>注意：batch_size指的是每个进程下的batch_size</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">train_sampler = torch.utils.data.distributed.DistributedSampler(my_trainset)<br></code></pre></td></tr></table></figure><h4 id="3构造model模型"><a class="markdownIt-Anchor" href="#3构造model模型"></a> 3.构造model模型：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 获取当前进程的 GPU 排名（local_rank）</span><br>local_rank = dist.get_rank()<span class="hljs-comment"># 是当前进程！！！</span><br><span class="hljs-comment"># 设置当前进程使用的 GPU</span><br>torch.cuda.set_device(local_rank)<br><span class="hljs-comment"># 创建模型并移动到对应的 GPU</span><br>model = model.to(local_rank)<br></code></pre></td></tr></table></figure><h4 id="4如果需要load模型则要在构造ddp模型之前且只需要在master上加载就行了"><a class="markdownIt-Anchor" href="#4如果需要load模型则要在构造ddp模型之前且只需要在master上加载就行了"></a> 4.如果需要Load模型，则要在构造DDP模型之前，且只需要在master上加载就行了：</h4><p>​“master” 通常指的是负责初始化分布式环境和协调其他进程的进程。在分布式训练中，所有进程（或称为 “workers”）需要协同工作，而 “master” 进程则扮演着启动和配置这些进程的角色，<strong>注意是主进程不是主机，没有主机</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> ckpt_path <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>    model.load_state_dict(torch.load(ckpt_path))<br></code></pre></td></tr></table></figure><h4 id="5构造ddp-model-模型"><a class="markdownIt-Anchor" href="#5构造ddp-model-模型"></a> 5.构造DDP model 模型：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">model = DDP(model, device_ids=[local_rank], output_device=local_rank)<br></code></pre></td></tr></table></figure><h4 id="6要在构造ddp-model之后才能用model初始化optimizer"><a class="markdownIt-Anchor" href="#6要在构造ddp-model之后才能用model初始化optimizer"></a> 6.要在构造DDP model之后，才能用model初始化optimizer：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">optimizer = torch.optim.SGD(model.parameters(), lr=<span class="hljs-number">0.001</span>)<br></code></pre></td></tr></table></figure><h4 id="7loss-函数也要转到指定设备"><a class="markdownIt-Anchor" href="#7loss-函数也要转到指定设备"></a> 7.loss 函数也要转到指定设备：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">loss_func = nn.CrossEntropyLoss().to(local_rank)<br></code></pre></td></tr></table></figure><h4 id="8网络训练"><a class="markdownIt-Anchor" href="#8网络训练"></a> 8.网络训练：</h4><p>​设置DDP sampler的epoch，<code>DistributedSampler</code>需要这个来指定shuffle方式，通过维持各个进程之间的相同随机数种子使不同进程能获得同样的shuffle效果。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">trainloader.sampler.set_epoch(epoch)<br></code></pre></td></tr></table></figure><h4 id="9保存模型"><a class="markdownIt-Anchor" href="#9保存模型"></a> 9.保存模型：</h4><p>​保存模型的时候，<strong>和DP模式一样，有一个需要注意的点：保存的是<code>model.module</code>而不是<code>model</code>。因为model其实是DDP model，参数是被<code>model=DDP(model)</code>包起来的。并且只需要在进程0上保存一次就行了，避免多次保存重复的东西</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span>:<br>    torch.save(model.module.state_dict(), <span class="hljs-string">&quot;%d.ckpt&quot;</span> % epoch)<br></code></pre></td></tr></table></figure><h2 id="ddp代码示例"><a class="markdownIt-Anchor" href="#ddp代码示例"></a> DDP代码示例：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torchvision<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-comment"># 新增：</span><br><span class="hljs-keyword">import</span> torch.distributed <span class="hljs-keyword">as</span> dist<br><span class="hljs-keyword">from</span> torch.nn.parallel <span class="hljs-keyword">import</span> DistributedDataParallel <span class="hljs-keyword">as</span> DDP<br><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ToyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(ToyModel, self).__init__()<br>        self.conv = nn.Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">return</span> self.conv(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_dataset</span>():<br>    transform = torchvision.transforms.Compose([<br>        torchvision.transforms.ToTensor(),<br>        torchvision.transforms.Normalize((<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>), (<span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>, <span class="hljs-number">0.5</span>))<br>    ])<br>    my_trainset = torchvision.datasets.CIFAR10(root=<span class="hljs-string">&#x27;./data&#x27;</span>, train=<span class="hljs-literal">True</span>, <br>        download=<span class="hljs-literal">True</span>, transform=transform)<br><br>    train_sampler = torch.utils.data.distributed.DistributedSampler(my_trainset)<br>    <span class="hljs-comment"># batch_size指的是每个进程下的batch_size</span><br>    trainloader = torch.utils.data.DataLoader(my_trainset, <br>        batch_size=<span class="hljs-number">16</span>, num_workers=<span class="hljs-number">2</span>, sampler=train_sampler)<br>    <span class="hljs-keyword">return</span> trainloader<br>    <br>parser = argparse.ArgumentParser()<br>parser.add_argument(<span class="hljs-string">&quot;--local_rank&quot;</span>, default=-<span class="hljs-number">1</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>)<br>FLAGS = parser.parse_args()<br>local_rank = FLAGS.local_rank<br><br><span class="hljs-comment"># DDP backend初始化</span><br>torch.cuda.set_device(local_rank)<br>dist.init_process_group(backend=<span class="hljs-string">&#x27;nccl&#x27;</span>)  <span class="hljs-comment"># nccl是GPU设备上最快、最推荐的后端</span><br><br>trainloader = get_dataset()<br>model = ToyModel().to(local_rank)<br><br>ckpt_path = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> ckpt_path <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>    model.load_state_dict(torch.load(ckpt_path))<br><br>    <br>model = DDP(model, device_ids=[local_rank], output_device=local_rank)<br><br><span class="hljs-comment"># 要在构造DDP model之后，才能用model初始化optimizer</span><br>optimizer = torch.optim.SGD(model.parameters(), lr=<span class="hljs-number">0.001</span>)<br>loss_func = nn.CrossEntropyLoss().to(local_rank)<br><br>model.train()<br>iterator = tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>))<br><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> iterator:<br>    <span class="hljs-comment"># DDP：设置sampler的epoch，</span><br>    <span class="hljs-comment"># DistributedSampler需要这个来指定shuffle方式，</span><br>    <span class="hljs-comment"># 通过维持各个进程之间的相同随机数种子使不同进程能获得同样的shuffle效果。</span><br>    trainloader.sampler.set_epoch(epoch)<br>    <span class="hljs-comment"># 这部分与原来完全一致了。</span><br>    <span class="hljs-keyword">for</span> data, label <span class="hljs-keyword">in</span> trainloader:<br>        data, label = data.to(local_rank), label.to(local_rank)<br>        optimizer.zero_grad()<br>        prediction = model(data)<br>        loss = loss_func(prediction, label)<br>        loss.backward()<br>        iterator.desc = <span class="hljs-string">&quot;loss = %0.3f&quot;</span> % loss<br>        optimizer.step()<br><br>    <span class="hljs-keyword">if</span> dist.get_rank() == <span class="hljs-number">0</span>:<br>        torch.save(model.module.state_dict(), <span class="hljs-string">&quot;%d.ckpt&quot;</span> % epoch)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Segformer(2)</title>
    <link href="/2024/02/18/Segformer-2/"/>
    <url>/2024/02/18/Segformer-2/</url>
    
    <content type="html"><![CDATA[<h1 id="segformer-论文详解"><a class="markdownIt-Anchor" href="#segformer-论文详解"></a> Segformer 论文详解：</h1><p>​在SegFormer提出时，transformer已经开始在图像领域展露头角。在此之前，SETR最早将transformer结构引入到了语义分割任务中。SETR采用ViT作为backbone，并结合多个CNN decoder来放大特征分辨率。但是SETR具有两个局限性：</p><ul><li>没有利用 multi-scale 特征</li><li>具有非常高的计算消耗</li></ul><p>为了解决上述问题，pyramid vision Transformer (PVT) 被提出。PVT 具有金字塔结构，使得分割结果有进一步的提升。但是包括 PVT、Swin、Twins 等新兴方法都是在改进 encoder，但是忽略了 decoder 的改进。</p><p>与以前的方法相比，SegFormer 同时考虑了效率、准确性和鲁棒性，在三个数据集上取得了 SOTA 的效果，作者重新设计了 encoder 和 decoder，主要创新点包括：</p><ul><li>利用多尺度特征图的同时，提出了一种新型的**无位置编码（position-encoding-free）**分层变压器编码器（position-encoding-free 带来了将模型变为 end-to-end 的好处，即不用将输入图片插值以符合固定大小的尺寸）</li><li>一种轻量级的 All-MLP（多层感知机） decoder设计，不仅结合了多尺度的特征信息，而且简单高效</li></ul><h2 id="网络设计"><a class="markdownIt-Anchor" href="#网络设计"></a> 网络设计：</h2><p><img src="/2024/02/18/Segformer-2/1.png" alt="Segformer网络"></p><p>​整个网络结构使用了经典的 encoder-decoder 设计，从整体结构看，将 encoder 各个阶段产生的不同尺度的特征图经过不同倍数的上采样后 concat 到一起去，这样网络极像经典的 FCN 网络（是否也能提出像 UNET 的 Segformer 呢?）。下面详解网络各个部分</p><h3 id="overlap-patch-embedding"><a class="markdownIt-Anchor" href="#overlap-patch-embedding"></a> Overlap Patch Embedding：</h3><p>Encoder 部分由一连串的 Mix Transformer encoders (MiT) 模块构成，Transformer encoder layer 本质上是 Effecient Self-Attention+Norm+MixFFN 的组合。作者设计了从 MiT-B0 到 MiT-B5 多个 encoder，每个 encoder 结构相同但是大小不同。</p><p>与 ViT 不同，SegFormer 的 encoder 部分可以生成 multi-scale 的特征，提高了语义分割的性能。给定一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">H×W×3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 的图像输入，会得到一系列不同分辨率大小的特征: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>H</mi><msup><mn>2</mn><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><mfrac><mi>H</mi><msup><mn>2</mn><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msup></mfrac><mo>×</mo><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\frac{H}{2^{i+1}} \times \frac{H}{2^{i+1}} \times C_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7570857142857143em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C_i \in \{1,2,3,4\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">}</span></span></span></span> ,且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">C_{i+1}&gt;C_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>encoder 中大量采用了多头自注意力模块，也就是： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi>K</mi><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>Q</mi><msup><mi>K</mi><mi>T</mi></msup></mrow><msqrt><msub><mi>d</mi><mrow><mi>h</mi><mi>e</mi><mi>a</mi><mi>d</mi></mrow></msub></msqrt></mfrac><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">Attention(Q,K,V)=Softmax(\frac{QK^T}{\sqrt{d_{head}}})V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.627473em;vertical-align:-0.538em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.089473em;"><span style="top:-2.5864385em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8622307142857143em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8222307142857144em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17776928571428574em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">Q</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.538em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span> 。其中还Q、K、V有同样的大小N×C，N=H×W。在此基础上，作者添加了如下的改进：通过reshape+Linear层的方式减小了特征的长度，也就是N。其中一个主要的参数就是R。公式如下：</p><p>这样做的主要目的就是为了减小<strong>计算复杂度。</strong></p><p>为了获取multi-scale的多层特征，例如将特征 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>4</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>4</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_1(\frac{H}{4}\times\frac{W}{4}\times C_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 转化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mi>H</mi><mn>8</mn></mfrac><mo>×</mo><mfrac><mi>W</mi><mn>8</mn></mfrac><mo>×</mo><msub><mi>C</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F_2(\frac{H}{8}\times\frac{W}{8}\times C_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> ，作者设计了一种overlapped的patch merge方法。之所以patch之间要存在overlap，主要是为了保证空间上的语意连贯性。这个模块可以简单的通过一个Kernel=7，Stride=4，Padding=3的卷积层实现。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>segformer(1)</title>
    <link href="/2024/02/17/segformer-1/"/>
    <url>/2024/02/17/segformer-1/</url>
    
    <content type="html"><![CDATA[<h1 id="segformer-代码结构分析"><a class="markdownIt-Anchor" href="#segformer-代码结构分析"></a> Segformer 代码结构分析</h1><h2 id="mmsegmentation-算法库的整体框架"><a class="markdownIt-Anchor" href="#mmsegmentation-算法库的整体框架"></a> MMSegmentation 算法库的整体框架</h2><p>​MMSegmentation 是 OpenMMLab 开源的基于 PyTorch 实现的功能强大的语义分割工具箱，MMSegmentation 的主要特性如下：</p><ul><li>丰富的语义分割模型： 已支持 11 种主干网络和 34 种算法，例如常用模型 FCN， PSPNet 和 DeepLabV3；Transformer 模型，Swin Transformer、Segmenter 和 SegFormer； Real-Time 实时分割模型， ICNet、BiSeNet 和 STDC 等；以及最近流行的网络 ConvNeXt 和 MAE。</li><li>大量开箱即用的模型权重：在 16 个常用的语义分割数据集上提供了 590 个训练好的模型。</li><li>统一的性能评估框架：优化和统一了训练和测试的流程，方便公平比较各个模型在特定任务上的表现。</li></ul><h3 id="mmsegmentation-目录结构"><a class="markdownIt-Anchor" href="#mmsegmentation-目录结构"></a> MMSegmentation 目录结构</h3><p>按照代码目录下的文件夹，MMSegmentation 代码库主要可以包含四个部分：</p><p>（1）<code>./tools</code> 包括了调用 MMSegmentation 作为训练和测试入口的 <code>./tools/train.py</code> 和 <code>./tools/test.py</code>，<strong>预训练模型和数据集准备的转换脚本，以及部署和可视化相关的脚本</strong></p><p>详细介绍可见 Github 里的<a href="https://github.com/open-mmlab/mmsegmentation/blob/master/docs/zh_cn/useful_tools.md">文档</a></p><p>（2） <code>./configs</code> 包括了各个算法的配置文件、存放常用的数据集配置、基础模型以及训练策略的基配置文件 <code>./configs/_base_</code></p><p>（3）<code>./mmseg</code> 里面是 MMSegmentation 的算法库，包括核心组件、数据集处理、分割模型代码和面向用户的 API 接口</p><p>（4）<code>./data</code> 指的是存放数据集的路径，在原本的代码库中没有这个文件夹。用户只需指定正确的文件夹路径即可使用数据</p><p>下面是详细的 MMSegmentation 的算法库目录结构：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># MMSegmentation 算法库目录结构的主要部分 </span><br>mmsegmentation <br>   | <br>   |- configs                        <span class="hljs-comment"># 配置文件 </span><br>   |     |- _base_                   <span class="hljs-comment">## 基配置文件 </span><br>   |     |     |- datasets             <span class="hljs-comment">### 数据集相关配置文件 </span><br>   |     |     |- models               <span class="hljs-comment">### 模型相关配置文件 </span><br>   |     |     |- schedules            <span class="hljs-comment">### 训练日程如优化器，学习率等相关配置文件 </span><br>   |     |     |- default_runtime.py   <span class="hljs-comment">### 运行相关的默认的设置 </span><br>   |     |- swin                     <span class="hljs-comment">## 各个分割模型的配置文件，会引用 _base_ 的配置并做修改  </span><br>   |     |- ...                         <br>   |- data                           <span class="hljs-comment"># 原始及转换后的数据集文件 </span><br>   |- mmseg  <br>   |     |- core                     <span class="hljs-comment">## 核心组件 </span><br>   |     |     |- evaluation           <span class="hljs-comment">### 评估模型性能代码 </span><br>   |     |- datasets                 <span class="hljs-comment">## 数据集相关代码 </span><br>   |     |     |- pipelines            <span class="hljs-comment">### 数据预处理 </span><br>   |     |     |- samplers             <span class="hljs-comment">### 数据集采样代码 </span><br>   |     |     |- ade.py               <span class="hljs-comment">### 各个数据集准备需要的代码 </span><br>   |     |     |- ... <br>   |     |- models                    <span class="hljs-comment">## 分割模型具体实现代码 </span><br>   |     |     |- backbones             <span class="hljs-comment">### 主干网络 </span><br>   |     |     |- decode_heads          <span class="hljs-comment">### 解码头 </span><br>   |     |     |- losses                <span class="hljs-comment">### 损失函数 </span><br>   |     |     |- necks<br>   |     |     |- segmentors            <span class="hljs-comment">### 构建完整分割网络的代码 </span><br>   |     |     |- utils                 <span class="hljs-comment">### 构建模型时的辅助工具 </span><br>   |     |- apis                      <span class="hljs-comment">## high level 用户接口，在这里调用 ./mmseg/ 内各个组件 </span><br>   |     |     |- train.py              <span class="hljs-comment">### 训练接口（侧重 python 编程式训练）</span><br>   |     |     |- test.py               <span class="hljs-comment">### 测试接口 </span><br>   |     |     |- ... <br>   |     |- ops                       <span class="hljs-comment">## cuda 算子（即将迁移到 mmcv 中）</span><br>   |     |- utils                     <span class="hljs-comment">## 辅助工具 </span><br>   |- tools <br>   |     |- model_converters          <span class="hljs-comment">## 各个主干网络预训练模型转 key 脚本 </span><br>   |     |- convert_datasets          <span class="hljs-comment">## 各个数据集准备转换脚本</span><br>   |     |- train.py                  <span class="hljs-comment">## 训练脚本（侧重 python 命令行式训练）</span><br>   |     |- test.py                   <span class="hljs-comment">## 测试脚本</span><br>   |     |- ...                       <br>   |- ... <br></code></pre></td></tr></table></figure><p>MMSegmentation 的算法库有 3 个关键组件：</p><p>1.<code>./mmseg/apis/</code>，用于训练和测试的接口</p><p>2.<code>./mmseg/models/</code>，用于分割网络模型的具体实现</p><p>3.<code>./mmseg/datasets/</code>，用于数据集处理</p><p>本文我们主要介绍算法模型相关的代码，因此<strong>涉及内容主要在 <code>./mmseg/models</code> 里面</strong></p><h3 id="mmsegmentation-模型实现"><a class="markdownIt-Anchor" href="#mmsegmentation-模型实现"></a> MMSegmentation 模型实现</h3><p>MMSegmentation 中将语义分割模型定义为 <strong>segmentor</strong>， 一般包括 <strong>backbone、neck、head、loss</strong>4 个核心组件（ 4 个组件不是每个算法都需要的），每个模块的功能如下：</p><p>MMSegmentation 里面的<strong>分割器框架可以分为 “Encoder Decoder” 结构和 “Cascade Encoder Decoder” 结构</strong>。 “Cascade Encoder Decoder” 的解码部分不是单独的解码头，而是<strong>级联式的 2 个或多个解码头，前一个解码头的输出作为后一个解码头的输入。</strong></p><p>关于分割器 segmentor 的训练和测试的基本逻辑，以语义分割经典的 “Encoder Decoder” 结构为例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">EncoderDecoder</span>(<span class="hljs-title class_ inherited__">BaseSegmentor</span>): <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">...</span>): <br>        <span class="hljs-comment"># 构建 backbone、neck 和 head </span><br>        self.backbone = build_backbone(backbone) <br>        <span class="hljs-keyword">if</span> neck <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>: <br>            self.neck = build_neck(neck) <br>        self._init_decode_head(decode_head) <br>        self._init_auxiliary_head(auxiliary_head) <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_train</span>(<span class="hljs-params">...</span>):  <br>        <span class="hljs-comment"># 利用 backbone+neck 进行特征提取 </span><br>        x = self.extract_feat(img) <br>        losses = <span class="hljs-built_in">dict</span>() <br>        <span class="hljs-comment"># decode head 输出预测特征图并计算出 loss </span><br>        loss_decode = self._decode_head_forward_train(x, img_metas, <br>                                                      gt_semantic_seg) <br>        losses.update(loss_decode) <br>        <span class="hljs-comment"># auxiliary heads 输出预测特征图并计算出 loss </span><br>        <span class="hljs-keyword">if</span> self.with_auxiliary_head: <br>            loss_aux = self._auxiliary_head_forward_train( <br>                x, img_metas, gt_semantic_seg) <br>            losses.update(loss_aux) <br>        <span class="hljs-keyword">return</span> losses <br> <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">simple_test</span>(<span class="hljs-params">...</span>): <br>        <span class="hljs-comment"># 调用 inference 函数，对输入图片做全图或者滑动窗口的推理，得到 logits 值</span><br>        seg_logit = self.inference(img, img_meta, rescale) <br>        <span class="hljs-comment"># 做 argmax 得到预测的 prediction mask </span><br>        seg_pred = seg_logit.argmax(dim=<span class="hljs-number">1</span>) <br> <br>   <span class="hljs-keyword">def</span> <span class="hljs-title function_">aug_test</span>(<span class="hljs-params">...</span>): <br>        ... <br></code></pre></td></tr></table></figure><p><code>EncoderDecoder</code> 里面分别定义了训练和测试的接口，训练时调用 <code>forward_train()</code> 返回一个 dict，包含各种 loss ，测试时则会调用 <code>simple_test()</code> 或者测试时数据增广的 <code>aug_test()</code>，只返回预测的分割结果。</p><p>训练时预测结果并计算 loss 的主要逻辑是在 <code>_decode_head_forward_train</code> 中实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">_decode_head_forward_train</span>(<span class="hljs-params">...</span>): <br>    <span class="hljs-comment"># 调用每个 head 自身的 forward_train 方法, 并计算出 loss </span><br> losses = <span class="hljs-built_in">dict</span>() <br>    loss_decode = self.decode_head.forward_train(x, img_metas, <br>                                                 gt_semantic_seg, <br>                                                 self.train_cfg) <br> <br>    losses.update(add_prefix(loss_decode, <span class="hljs-string">&#x27;decode&#x27;</span>)) <br>    <span class="hljs-comment"># 返回 </span><br>    <span class="hljs-keyword">return</span> losses <br></code></pre></td></tr></table></figure><p>对于不同的 head，都可以抽象为：<code>seg_logits = self.forward(inputs)</code> ，即：<strong>网络前传得到预测的 logtis 值，然后再计算各个 head 的对应 loss</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_train</span>(<span class="hljs-params">...</span>): <br> seg_logits = self.forward(inputs) <br>    losses = self.losses(seg_logits, gt_semantic_seg) <br>    <span class="hljs-keyword">return</span> losses <br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">losses</span>(<span class="hljs-params">self, seg_logit, seg_label</span>): <br> loss = <span class="hljs-built_in">dict</span>() <br>    seg_logit = resize( <span class="hljs-comment"># 将预测得到的 logits 值 resize 成原图大小 </span><br>        <span class="hljs-built_in">input</span>=seg_logit, <br>        size=seg_label.shape[<span class="hljs-number">2</span>:], <br>        mode=<span class="hljs-string">&#x27;bilinear&#x27;</span>, <br>        align_corners=self.align_corners) <br>    .... <br>    <span class="hljs-keyword">for</span> loss_decode <span class="hljs-keyword">in</span> losses_decode: <span class="hljs-comment"># 分别计算这个 decode head 中的各个 loss </span><br>        <span class="hljs-keyword">if</span> loss_decode.loss_name <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> loss: <br>            loss[loss_decode.loss_name] = loss_decode( <br>                seg_logit, <br>                seg_label, <br>                weight=seg_weight, <br>                ignore_index=self.ignore_index) <br>        <span class="hljs-keyword">else</span>: <br>            loss[loss_decode.loss_name] += loss_decode( <br>                seg_logit, <br>                seg_label, <br>                weight=seg_weight, <br>                ignore_index=self.ignore_index) <br>    .... <br>    <span class="hljs-keyword">return</span> loss <br></code></pre></td></tr></table></figure><p>接下来，我们详细介绍分割器 segmentor 里4 个核心组件：backbone， neck，head，和 loss</p><h4 id="backbone"><a class="markdownIt-Anchor" href="#backbone"></a> <strong>Backbone</strong></h4><p>目前 MMSegmengtation 中已经集成了大部分主干网络，具体见文件 <code>./mmseg/models/backbones/</code>、</p><p>**通常定义的&quot;主干网络&quot; 是指从上游任务（如 ImageNet ）预训练，然后用于多个下游任务（如目标检测、实例分割、语义分割、姿态估计）中的网络，**而在 <code>./mmseg/models/backbones</code> 里主干网络的定义有所不同，会把一些分割算法的网络结构也作为&quot;主干网络&quot;，如 UNet、 FastSCNN、CGNet、ICNet、BiSeNetV1/V2、ERFNet、STDC</p><p>其中最常用的是 ResNet v1c 系列和 Vision Transformer 系列。如果你需要对骨架进行扩展，可以继承上述网络，然后通过注册器机制注册使用。一个典型用法为 <code>./configs/_base_/models/segmenter_vit-b16_mask.py</code> 里面的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">checkpoint = <span class="hljs-string">&#x27;https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/segmenter/vit_base_p16_384_20220308-96dfe169.pth&#x27;</span>  <span class="hljs-comment"># noqa </span><br><span class="hljs-comment"># model settings </span><br>model = <span class="hljs-built_in">dict</span>( <br>    <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;EncoderDecoder&#x27;</span>, <br>    pretrained=checkpoint, <span class="hljs-comment"># 加载的预训练模型，这里为 Google Research提供的由 JAX 训练框架得到的 Vision Transformer </span><br>    backbone=<span class="hljs-built_in">dict</span>( <br>        <span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;VisionTransformer&#x27;</span>, <span class="hljs-comment"># 骨架类名，后面的参数都是该类的初始化参数 </span><br>        img_size=(<span class="hljs-number">512</span>, <span class="hljs-number">512</span>), <br>        patch_size=<span class="hljs-number">16</span>, <br>        in_channels=<span class="hljs-number">3</span>, <br>        embed_dims=<span class="hljs-number">768</span>, <br>        num_layers=<span class="hljs-number">12</span>, <br>        num_heads=<span class="hljs-number">12</span>, <br>        drop_path_rate=<span class="hljs-number">0.1</span>, <br>        attn_drop_rate=<span class="hljs-number">0.0</span>, <br>        drop_rate=<span class="hljs-number">0.0</span>, <br>        final_norm=<span class="hljs-literal">True</span>, <br>        norm_cfg= <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">type</span>=<span class="hljs-string">&#x27;LN&#x27;</span>, eps=<span class="hljs-number">1e-6</span>, requires_grad=<span class="hljs-literal">True</span>), <br>        with_cls_token=<span class="hljs-literal">True</span>, <br>        interpolate_mode=<span class="hljs-string">&#x27;bicubic&#x27;</span>, <br>    ), <br></code></pre></td></tr></table></figure><p>这里使用了 MMCV 中的<a href="https://link.zhihu.com/?target=https%3A//github.com/open-mmlab/mmcv/blob/master/docs/zh_cn/understand_mmcv/registry.md">模块注册机制</a>，通过修改配置文件的 type ，可以使用在 MMSegmentation 已经实现的 backbone 模型。此外，还可以使用 MMClassification 里面的更多主干网络，如 ShuffleNet、EfficientNet 等，可根据 <code>./configs/convnext</code> 里面 ConvNeXt 的实现方式，详细的方式可以参考： <a href="https://zhuanlan.zhihu.com/p/436865195">MMDet居然能用MMCls的Backbone？论配置文件的打开方式</a></p><p>​backbone， neck，head，和 loss可以同理解读</p><p>​如果把这东西看成一个库的话，会感觉这东西很难用，我想要自定义自己的模型的话，按照官方教程的说法，我需要在mmseg的底层代码中增加文件，创建一个新的文件 mmseg/models/backbones/mobilenet.py，这意味着我每次开发一个新模型都需要把整个mmseg文件包带上，而不能直接import底层的代码调用api，而且不能让我自己实例化模型，训练推理。<a href="http://xn--train-2b3hw13edzh593cq3cvx3k.xn--pytest-j76j.py">必须使用它的train.py和test.py</a>…</p><p>​因此不应该把它视为一个库，而是一种代码模板，从这点来看，它的整个框架结构和可拓展性都是很好的，下面我们去看Segformer论文代码：</p><h2 id="segformer-官方论文代码"><a class="markdownIt-Anchor" href="#segformer-官方论文代码"></a> Segformer 官方论文代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash">├─ configs<br>│    ├─ _base_<br>│    │    ├─ datasets<br>│    │    ├─ models<br>│    │    ├─ schedules<br>│    │    └─ default_runtime.py<br>│    ├─ dmnet<br>│    ├─ dnlnet<br>│    └─ fastscnn<br>│  ... <br>├─ demo<br>├─ docker<br>├─ docs<br>│   └─ tutorials<br>├─ local_configs<span class="hljs-comment"># 稍微特殊的目录，用于覆盖 configs 中对应部分的配置</span><br>│    ├─ segformer<br>│    │    ├─ B0<br>│    │    ├─ B1<br>│    │    ...<br>│    │    └─ B5<br>│    └─ _base_<br>│       ├─ datasets<br>│       ├─ models<br>│       └─ schedules<br>├─ mmseg<br>│    ├─ apis<br>│    │    ├─ inference.py<br>│    │    ├─ test.py<br>│    │    └─ train.py<br>│    ├─ core<br>│    │    ├─ evaluation<br>│    │    ├─ seg<br>│    │    │  └─ sampler<br>│    │    └─ utils<br>│    ├─ datasets<br>│    │    ├─ pipelines<br>│    │    ├─ ...<br>│    │    └─ ade.py<br>│    ├─ models<br>│    │    ├─backbones<br>│    │    ├─decode_heads<br>│    │    ├─losses<br>│    │    ├─necks<br>│    │    ├─segmentors<br>│    │    └─utils<br>│    ├─ops<br>│    └─utils<br>├─ requirements<br>├─ resources<br>├─ tests<br>│    ├─test_data<br>│    ├─test_models<br>│    └─test_utils<br>└─ tools<br>     └─convert_datasets<br></code></pre></td></tr></table></figure><p>​可以看出来这个目录就是按照上面 mmseg 目录模板来进行的，每个部分的功能都可以参照上面 mmseg 目录注释部分。特别的这里有一个 <code>local_configs</code> 文件夹值得一提，它的存在是如下考虑的：</p><p>​在实际使用中，用户可能会从<code>configs</code>文件夹中复制一个预定义的配置文件到<code>local_configs</code>文件夹，并根据需要进行修改。这样，用户可以保留原始的默认配置，同时在 <code>local_configs</code> 中进行个性化设置，而不会影响到原始的配置文件。<code>local_configs</code> 文件夹中的内容通常会覆盖 <code>configs</code> 文件夹中的对应配置。在许多深度学习框架和项目中，<code>local_configs</code>用于存放本地用户自定义的配置文件，这些文件允许用户根据自己的需求对模型的训练、推理或其他相关参数进行调整</p><p>​当项目运行时，它会首先查找<code>local_configs</code>文件夹中的配置文件，如果找到了与项目运行相关的配置文件，那么这些文件中的设置会优先被使用。如果<code>local_configs</code>中没有相应的配置文件，或者用户想要使用默认的配置，那么项目会回退到<code>configs</code>文件夹中的默认配置</p><h2 id="segformer-程序复现"><a class="markdownIt-Anchor" href="#segformer-程序复现"></a> Segformer 程序复现：</h2><p>先参照论文官方 github 仓库将代码copy下来，再安装依赖库：详情查看 <code>requirements.txt</code> 文档，mmcv 安装参照：<a href="https://github.com/open-mmlab/mmcv">open-mmlab/mmcv: OpenMMLab Computer Vision Foundation</a></p><h3 id="程序修改"><a class="markdownIt-Anchor" href="#程序修改"></a> 程序修改：</h3><p>​根据上面对各个部分内容作用的分析，我们只需要修改 <code>mmseg/datasets/corresponding_daaset.py  tools  locol_configs</code> 这三个部分即可：</p><ul><li><p>本文我采用原论文中ADE20K数据集进行训练，于是修改 <code>mmseg/datasets/voc.py</code> 的步骤就可以省略了，不过也可以按照 ADE20K 数据集中 <code>objects.txt</code> 文档检查一下 <code>SegFormer-master/mmseg/datasets/ade.py</code> 中配置信息是否正确：<img src="/2024/02/17/segformer-1/image-20240217160404076.png" alt="image-20240217160404076" style="zoom:50%;"></p></li><li><p>如果是单卡训练，需要修改在 <code>mmseg/models/decode_heads/segformer_head.py</code> 中BatchNorm 方式</p></li><li><p>训练过程为了减少训练 epoch 的次数，采用了再预训练模型上继续训练的方式进行，</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>progressive-bar</title>
    <link href="/2024/02/09/progressive-bar/"/>
    <url>/2024/02/09/progressive-bar/</url>
    
    <content type="html"><![CDATA[<h1 id="python-进度条模块"><a class="markdownIt-Anchor" href="#python-进度条模块"></a> Python 进度条模块</h1><p>​过年水一篇</p><p>​Python 中有几个流行的进度条模块，它们可以帮助在执行长时间运行的任务时提供进度反馈。一些常用的进度条模块有 tqdm，progress，alive-pprogress，PySimpleGUI 等。本篇文章主要整理一下 tqdm 的使用方法：</p><h2 id="tqdmrangei-使用"><a class="markdownIt-Anchor" href="#tqdmrangei-使用"></a> <code>tqdm(range(i))</code> 使用：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>)):<br>    time.sleep(<span class="hljs-number">.01</span>)   <span class="hljs-comment">#进度条每0.01s前进一次，总时间为1000*0.01=10s </span><br><span class="hljs-comment"># ---------------运行结果------------------</span><br><span class="hljs-number">100</span>%|██████████| <span class="hljs-number">1000</span>/<span class="hljs-number">1000</span> [<span class="hljs-number">00</span>:<span class="hljs-number">10</span>&lt;<span class="hljs-number">00</span>:<span class="hljs-number">00</span>, <span class="hljs-number">93.21</span>it/s]  <br></code></pre></td></tr></table></figure><p><strong><code>tqdm</code> 的 <code>trange</code> 方法</strong>： <code>trange</code> 是 <code>tqdm</code> 提供的一个方便函数，它返回一个迭代器， <code>trange(i)</code> 等价于 <code>tqdm(range(i))</code></p><p>当然有更好看的进度条，使用 <code>from tqdm.rich import tqdm</code> 可以得到一个彩色的美化过的进度条，<code>from tqdm.tk import tqdm</code> 可以得到一个基于 tkiter 的进度条</p><h2 id="面向对象的-tqdm"><a class="markdownIt-Anchor" href="#面向对象的-tqdm"></a> 面向对象的 tqdm：</h2><ol><li><p><strong>创建 <code>tqdm</code> 对象</strong>： 你可以创建一个 <code>tqdm</code> 对象，<strong>传入你想要迭代的可迭代对象</strong>，并可选地提供一些参数，如总迭代次数、描述信息等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 创建一个进度条对象</span><br>pbar = tqdm(<span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>), desc=<span class="hljs-string">&quot;Processing&quot;</span>)<br><span class="hljs-comment"># 创建一个进度条对象，包装一个范围对象，使用 trange 函数</span><br>pbar = tqdm.trange(<span class="hljs-number">100</span>, desc=<span class="hljs-string">&quot;Counting&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p><strong>迭代 <code>tqdm</code> 对象</strong>： 你可以像迭代普通迭代器一样迭代 <code>tqdm</code> 对象，进度条会自动更新。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pbar:<br>    <span class="hljs-comment"># 在这里执行你的任务</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure></li><li><p><strong>更新进度条</strong>： 如果你需要手动更新进度条，可以使用 <code>update</code> 方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> tqdm(total=<span class="hljs-number">100</span>) <span class="hljs-keyword">as</span> pbar:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>        <span class="hljs-comment"># 执行一些耗时的操作</span><br>        time.sleep(<span class="hljs-number">0.1</span>)<br>        pbar.update(<span class="hljs-number">10</span>)  <span class="hljs-comment"># 更新进度条，每次增加10</span><br></code></pre></td></tr></table></figure></li><li><p><strong>设置进度条描述</strong>： 你可以在迭代过程中动态设置进度条的描述信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> tqdm(total=<span class="hljs-number">100</span>) <span class="hljs-keyword">as</span> pbar:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        <span class="hljs-comment"># 执行任务</span><br>        pbar.set_description(<span class="hljs-string">f&quot;Processing <span class="hljs-subst">&#123;i+<span class="hljs-number">1</span>&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure></li><li><p><strong>使用 <code>tqdm</code> 的其他方法</strong>： <code>tqdm</code> 提供了一些其他方法，如 <code>update</code>（更新进度条）、<code>refresh</code>（刷新进度条）、<code>close</code>（关闭进度条）等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">pbar.update(<span class="hljs-number">10</span>)  <span class="hljs-comment"># 更新进度条</span><br>pbar.refresh()  <span class="hljs-comment"># 刷新进度条</span><br>pbar.close()     <span class="hljs-comment"># 关闭进度条</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>coding tricks</category>
      
    </categories>
    
    
    <tags>
      
      <tag>coding tricks</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CAM可视化</title>
    <link href="/2024/02/07/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <url>/2024/02/07/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch-grad-cam-特征可视化"><a class="markdownIt-Anchor" href="#pytorch-grad-cam-特征可视化"></a> Pytorch-grad-cam 特征可视化：</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介：</h2><p><code>Pytorch-grad-cam</code>是一个用于PyTorch的库，它提供了多种类激活映射（Class Activation Mapping, CAM）方法，用于可视化卷积神经网络（CNN）的特征。这些方法可以帮助我们理解模型在进行预测时关注的输入图像的哪些区域。<code>pytorch-grad-cam</code>库支持多种CAM方法，包括但不限于：</p><ul><li>GradCAM：通过权重激活映射来可视化模型的注意力区域</li><li>GradCAM++：在GradCAM的基础上使用二阶梯度</li><li>XGradCAM：类似于GradCAM，但通过归一化激活来缩放梯度</li><li>AblationCAM：通过关闭激活并测量输出下降来可视化</li><li>ScoreCAM：通过扰动图像并测量输出下降来可视化</li><li>EigenCAM：使用主成分分析来可视化</li><li>LayerCAM：通过正梯度加权激活来可视化</li></ul><p>这个库还支持对象检测和语义分割任务，并且提供了一些高级功能，如图像增强和性能评估指标。其实上面几个方法可视化效果大同小异，<strong>用的时候随便选一个 GradCAM++ 就行了</strong></p><h2 id="使用方式"><a class="markdownIt-Anchor" href="#使用方式"></a> 使用方式：</h2><p>先介绍两个函数：</p><h3 id="pytorch_grad_camgradcamplusplus-函数"><a class="markdownIt-Anchor" href="#pytorch_grad_camgradcamplusplus-函数"></a> <code>pytorch_grad_cam.GradCAMPlusPlus</code> 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cam = pytorch_grad_cam.GradCAMPlusPlus(model, target_layers，reshape_transform=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><ul><li>model：为需要可视化的模型，把先前训练好的模型实例传入就好</li><li>target_layers：需要可视化的层，类型是 <code>List[torch.nn.Module]</code>，可以传入单个或者多个层，如果传入多个层，<strong>CAM 的注意力会在这些层之间平均，这样会在你不知道哪个层表现最好的时候很有用</strong></li><li>reshape_transform：看不懂是什么参数，平时也不用，不管</li><li>返回值 cam：<strong>一个 callabel，他也是一个神经网络，使用时输入和 model 一样的数据，返回 batch 大小的注意力灰度图</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pytorch_grad_cam<br><span class="hljs-comment"># from pytorch_grad_cam.utils.model_targets import ClassifierOutputTarget</span><br>cam = pytorch_grad_cam.GradCAMPlusPlus(model=resnet18, target_layers=target_layers)<br><span class="hljs-comment"># 指定可视化索引为386类别的注意力</span><br><span class="hljs-comment"># targets = [ClassifierOutputTarget(386),ClassifierOutputTarget(386)]</span><br>grayscale_cam = cam(net_input, targets=targets)<br>grayscale_cam = grayscale_cam[<span class="hljs-number">0</span>, :]<br><span class="hljs-built_in">print</span>(grayscale_cam.shape)<br></code></pre></td></tr></table></figure><p>其中 <code>cam(net_input, targets=targets)</code> 的 targets 是指定哪种预测类别注意力使用的，如果没有指定 targets，该函数会自动选用预测概率最大的类别进行可视化，该函数还可以传入 <code>aug_smooth=True and eigen_smooth=True</code> 来进行图像平滑操作</p><h3 id="show_cam_on_image-方法"><a class="markdownIt-Anchor" href="#show_cam_on_image-方法"></a> <code>show_cam_on_image</code> 方法</h3><p><code>show_cam_on_image</code> 方法用于在单个图像上显示 CAM 结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pytorch_grad_cam.utils.image <span class="hljs-keyword">import</span> show_cam_on_image<br>visualization_img = show_cam_on_image(img: np.ndarray, mask: np.ndarray, use_rgb: <span class="hljs-built_in">bool</span>=<span class="hljs-literal">False</span>, colormap: <span class="hljs-built_in">int</span>=cv2.COLORMAP_JET, image_weight: <span class="hljs-built_in">float</span>)<br></code></pre></td></tr></table></figure><ul><li>img：网络输入图像，即需要可视化注意力的图像</li><li>mask：注意力灰度图，就是上面返回的 <code>grayscale_cam</code></li><li>use_rgb：告诉传入的 img 使用 RGB 图像还是 BGR 图像</li><li>colormap：类似于 matplotlib 库中的 cmap</li><li>返回值 visualization_img：<strong>返回传入层 target layers 平均注意力的灰度图</strong>，用于可视化的 RGB 图像</li></ul><h2 id="应用实例查看-resnet-各个层的注意力"><a class="markdownIt-Anchor" href="#应用实例查看-resnet-各个层的注意力"></a> 应用实例：查看 resnet 各个层的注意力</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">import</span> torchvision.transforms <span class="hljs-keyword">as</span> transforms<br><br><span class="hljs-keyword">import</span> pytorch_grad_cam <br><span class="hljs-keyword">from</span> pytorch_grad_cam.utils.image <span class="hljs-keyword">import</span> show_cam_on_image<br><br><br>resnet18 = models.resnet18(pretrained=<span class="hljs-literal">True</span>)<br>resnet18.<span class="hljs-built_in">eval</span>()<br>target_layers = [resnet18.layer1[<span class="hljs-number">1</span>].bn2, resnet18.layer2[<span class="hljs-number">1</span>].bn2, resnet18.layer3[<span class="hljs-number">1</span>].bn2, resnet18.layer4[<span class="hljs-number">1</span>].bn2]<br>rgb_img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./1.jpg&#x27;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br><br><br>trans = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Resize(<span class="hljs-number">224</span>, antialias=<span class="hljs-literal">True</span>),<br>    transforms.CenterCrop(<span class="hljs-number">224</span>)<br>])<br>crop_img = trans(rgb_img)<br>net_input = transforms.Normalize((<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>), (<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>))(crop_img).unsqueeze(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment"># 将裁剪后的Tensor格式的图像转为numpy格式</span><br>canvas_img = (crop_img*<span class="hljs-number">255</span>).byte().numpy().transpose(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>)<br>src_img = np.float32(canvas_img) / <span class="hljs-number">255</span><br><br><br>fig, axes = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>)<br>axes[<span class="hljs-number">0</span>].imshow(src_img)<br><br><span class="hljs-keyword">for</span> cnt, layer <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(target_layers, <span class="hljs-number">1</span>):<br>    cam = pytorch_grad_cam.GradCAMPlusPlus(model=resnet18, target_layers=[layer])<br>    grayscale_cam = cam(net_input)<br>    grayscale_cam = grayscale_cam[<span class="hljs-number">0</span>, :]<br>    visualization_img = show_cam_on_image(src_img, grayscale_cam, use_rgb=<span class="hljs-literal">True</span>)<br>    axes[cnt].imshow(visualization_img)<br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/2024/02/07/CAM%E5%8F%AF%E8%A7%86%E5%8C%96/1.png" alt="resnet各个层的注意力"></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch-hook</title>
    <link href="/2024/02/05/Pytorch-hook/"/>
    <url>/2024/02/05/Pytorch-hook/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch-的-hook-机制"><a class="markdownIt-Anchor" href="#pytorch-的-hook-机制"></a> Pytorch 的 hook 机制：</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介：</h2><p>在PyTorch中，hook机制是一种强大的工具，它允许开发者在不修改模型原始结构的情况下，插入自定义函数来访问、记录或修改模型运行过程中的中间层输出（forward pass）和梯度（backward pass）。</p><p>具体来说，在<code>torch.nn.Module</code>及其包含的<code>torch.Tensor</code>对象上可以注册hook。通过调用<code>.register_forward_hook()</code>或<code>.register_backward_hook()</code>方法，可以在前向传播结束时或反向传播过程中执行特定的回调函数：</p><ul><li><code>register_forward_hook(hook_function)</code>：当模块的前向传播完成时，会调用这个hook函数，它可以访问到该模块的输入和输出张量。</li><li><code>register_backward_hook(hook_function)</code>：当模块接收到关于其输出的反向传播信号时，这个hook函数会被调用，它能够访问到模块输出的梯度以及输入的梯度。</li></ul><p>Hook常用于以下场景：</p><ol><li><strong>可视化中间层特征图</strong></li><li>监控和记录网络训练过程中的中间变量和梯度信息</li><li>对模型训练进行干预，如正则化或其他动态调整策略</li><li>实现元学习中的特殊计算需求</li><li>保存特定层的输出用于后续分析或微调</li></ol><p>使用hook时需要注意释放资源，因为在每次迭代结束后，如果不手动保存这些中间结果，它们通常会被自动清理以节省内存。</p><p>PyTorch中的hook机制分为针对Tensor和Module（模型）的两种类型：</p><ol><li><p><strong>Tensor Hook</strong>：</p><ul><li><code>torch.Tensor.register_hook(hook_function)</code>：这是一个作用在张量上的钩子函数，当该张量<strong>参与反向传播计算梯度时</strong>，会调用你注册的<code>hook_function</code>。这个函数接收一个参数，即该张量对应的梯度(<code>grad</code>)，并且允许你在梯度计算完成后对其进行修改或观察，<strong>这种情况用得少，几乎只能用于修改反向传播的梯度值</strong></li></ul></li><li><p><strong>Module Hooks</strong>：</p><ul><li><p><code>torch.nn.Module.register_forward_hook(hook_function)</code>：当你需要监控或者修改模块执行前向传播过程时使用的钩子。在模块完成其<code>forward()</code>方法并生成输出后，<code>hook_function</code>会被调用，它接受三个参数：当前模块实例、模块接收到的输入以及模块计算出的输出。</p></li><li><p><code>torch.nn.Module.register_forward_pre_hook(hook_function)</code>：与<code>register_forward_hook</code>类似，但会在模块执行前向传播之前调用，此时输入尚未经过模块处理。</p></li><li><p><code>torch.nn.Module.register_backward_hook(hook_function)</code>：用于监控或修改模块在反向传播阶段的行为。当模块的输出梯度计算完毕后，<code>hook_function</code>会被调用，它接收四个参数：当前模块实例、输入梯度、输出梯度以及输出自身</p></li><li><p>如果希望对整个模型或特定层的所有输入和输出张量添加hooks，可以<strong>使用模块级别的hook</strong>，例如：</p><ul><li><code>nn.Module.register_forward_hook(hook_function)</code></li><li><code>nn.Module.register_backward_hook(hook_function)</code></li><li><code>nn.Module.register_full_backward_hook(hook_function)</code></li></ul><p>这些接口将允许在模型前向传播或反向传播的不同阶段添加自定义处理逻辑</p></li></ul></li></ol><h2 id="torchtensorregister_hookhook_function-用法"><a class="markdownIt-Anchor" href="#torchtensorregister_hookhook_function-用法"></a> <code>torch.Tensor.register_hook(hook_function)</code> 用法</h2><h3 id="函数签名"><a class="markdownIt-Anchor" href="#函数签名"></a> <strong>函数签名：</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">tensor.grad_fn.register_hook(hook: <span class="hljs-type">Callable</span>[[Tensor], <span class="hljs-literal">None</span>]) -&gt; torch.utils.hooks.RemovableHandle<br></code></pre></td></tr></table></figure><h3 id="参数说明"><a class="markdownIt-Anchor" href="#参数说明"></a> <strong>参数说明：</strong></h3><ul><li><code>hook: Callable[[Tensor], None]</code><ul><li>这是一个接受一个张量作为输入的可调用对象（通常为函数）</li><li>输入的张量是该操作在反向传播过程中产生的梯度，即当计算当前张量的上游梯度时，传递给<code>hook_function</code>的是当前张量的梯度</li><li><code>hook</code>函数没有返回值要求，其目的是为了让你能够监控或者修改这个张量的梯度</li><li>对于 <code>grad_fn=True</code> 的 Tensor，<strong>可以直接使用 <code>tensor.register_hook</code> 而不需要显式地先指向 <code>grad_fn</code> 属性</strong></li></ul></li></ul><h3 id="返回值"><a class="markdownIt-Anchor" href="#返回值"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><p>注意：尽量<strong>不要在动态图的中间节点的hook函数中使用某个节点的 grad_fn 的 inplace 操作</strong>，比如 <code>c=a+b</code> 如果在 b 的 hook 中原地改变 b 的梯度，则 a 的梯度也会一样改变，因为 Pytorch 的底层机制，反向传播过程中发现 a 和 b 的梯度相同，就直接将 b 的梯度信息复制过去了！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br>a = torch.tensor(<span class="hljs-number">2.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>b = torch.tensor(<span class="hljs-number">3.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>c = a * b<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">c_hook</span>(<span class="hljs-params">grad</span>):<br>    <span class="hljs-built_in">print</span>(grad)<br>    <span class="hljs-keyword">return</span> grad + <span class="hljs-number">2</span><br><br>c.register_hook(c_hook)<br>c.register_hook(<span class="hljs-keyword">lambda</span> grad: <span class="hljs-built_in">print</span>(grad))<br>c.retain_grad()<br><br>d = torch.tensor(<span class="hljs-number">4.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>d.register_hook(<span class="hljs-keyword">lambda</span> grad: grad + <span class="hljs-number">100</span>)<br><br>e = c * d<br>e.retain_grad()<br>e.register_hook(<span class="hljs-keyword">lambda</span> grad: grad * <span class="hljs-number">2</span>)<br>e.retain_grad() <span class="hljs-comment"># second-time retain_grad() is NOP (NOP:空操作)</span><br><br>e.backward()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;a.grad <span class="hljs-subst">&#123;a.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;b.grad <span class="hljs-subst">&#123;b.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c.grad <span class="hljs-subst">&#123;c.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;d.grad <span class="hljs-subst">&#123;d.grad&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;e.grad <span class="hljs-subst">&#123;e.grad&#125;</span>&#x27;</span>)<br><span class="hljs-comment">#---------运行结果---------</span><br>tensor(<span class="hljs-number">8.</span>)<br>tensor(<span class="hljs-number">10.</span>)<br>a.grad <span class="hljs-number">30.0</span><br>b.grad <span class="hljs-number">20.0</span><br>c.grad <span class="hljs-number">10.0</span><br>d.grad <span class="hljs-number">112.0</span><br>e.grad <span class="hljs-number">2.0</span><br></code></pre></td></tr></table></figure><p><img src="/2024/02/05/Pytorch-hook/1.png" alt="代码解释"></p><h2 id="register_forward_hookhook_function-用法"><a class="markdownIt-Anchor" href="#register_forward_hookhook_function-用法"></a> <code>register_forward_hook(hook_function)</code> 用法：</h2><h3 id="函数签名-2"><a class="markdownIt-Anchor" href="#函数签名-2"></a> <strong>函数签名</strong>：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">nn.Module.register_forward_hook(hook)<br></code></pre></td></tr></table></figure><h3 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> <strong>参数</strong>：</h3><ul><li><code>hook</code>：类型为 <code>Callable[[Module, Tensor, Tensor], None]</code> 的函数对象。这个函数需要<strong>接受三个参数，并且不返回任何值</strong>（因为返回了值也没什么用）<ul><li><code>module</code>（类型: <code>torch.nn.Module</code>）：触发钩子的模块实例。</li><li><code>input</code>（<strong>类型: <code>Tuple[Tensor, ...]</code> 或单个 <code>Tensor</code></strong>）：传递给模块执行前向传播操作时的输入数据，如果模块接收多个输入，则是一个包含所有输入张量的元组。</li><li><code>output</code>（<strong>类型: <code>Tensor</code> 或 <code>Tuple[Tensor, ...]</code></strong>）：模块执行完前向传播后生成的输出数据，根据模块的具体输出，可以是单个张量或多张量组成的元组</li></ul></li></ul><h3 id="返回值-2"><a class="markdownIt-Anchor" href="#返回值-2"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SumNet</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(SumNet, self).__init__()<br><br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">a, b, c</span>):<br>        d = a + b + c<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward():&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    a:&#x27;</span>, a)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    b:&#x27;</span>, b)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    c:&#x27;</span>, c)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    d:&#x27;</span>, d)<br>        <span class="hljs-keyword">return</span> d<br><span class="hljs-comment"># forward_pre_hook在调用forward函数前自动调用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_pre_hook</span>(<span class="hljs-params">module, input_positional_args</span>):<br>    a, b = input_positional_args<br>    new_input_positional_args = a + <span class="hljs-number">10</span>, b<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward_pre_hook():&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    module:&#x27;</span>, module)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    input_positional_args:&#x27;</span>, input_positional_args)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    new_input_positional_args:&#x27;</span>, new_input_positional_args)<br>    <span class="hljs-keyword">return</span> new_input_positional_args<br><span class="hljs-comment"># forward_hook在调用forward函数后自动调用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_hook</span>(<span class="hljs-params">module, input_positional_args, output</span>):<br>    new_output = output + <span class="hljs-number">100</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;forward_hook():&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    module:&#x27;</span>, module)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    input_positional_args:&#x27;</span>, input_positional_args)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    output:&#x27;</span>, output)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;    new_output:&#x27;</span>, new_output)<br><span class="hljs-comment">#    return new_output</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sum_net = SumNet()<br>    sum_net.register_forward_pre_hook(forward_pre_hook)<br>    sum_net.register_forward_hook(forward_hook)<br><br>    a = torch.tensor(<span class="hljs-number">1.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    b = torch.tensor(<span class="hljs-number">2.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    c = torch.tensor(<span class="hljs-number">3.0</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;start\n&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a:&#x27;</span>, a)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;b:&#x27;</span>, b)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c:&#x27;</span>, c)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;before model&#x27;</span>)<br>    d = sum_net(a, b, c=c)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;after model&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;d:&#x27;</span>, d)<br><span class="hljs-comment">#--------------------------</span><br>start:<br>a: tensor(<span class="hljs-number">1.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>b: tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>c: tensor(<span class="hljs-number">3.</span>, requires_grad=<span class="hljs-literal">True</span>)<br><br>before model:<br>forward_pre_hook():<br>    module: SumNet()<br>    input_positional_args: (tensor(<span class="hljs-number">1.</span>, requires_grad=<span class="hljs-literal">True</span>), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>    new_input_positional_args: (tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>forward():<br>    a: tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;)<br>    b: tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    c: tensor(<span class="hljs-number">3.</span>, requires_grad=<span class="hljs-literal">True</span>)<br>    d: tensor(<span class="hljs-number">16.</span>, grad_fn=&lt;AddBackward0&gt;)<br>forward_hook():<br>    module: SumNet()<br>    input_positional_args: (tensor(<span class="hljs-number">11.</span>, grad_fn=&lt;AddBackward0&gt;), tensor(<span class="hljs-number">2.</span>, requires_grad=<span class="hljs-literal">True</span>))<br>    output: tensor(<span class="hljs-number">16.</span>, grad_fn=&lt;AddBackward0&gt;)<br>    new_output: tensor(<span class="hljs-number">116.</span>, grad_fn=&lt;AddBackward0&gt;)<br><br>after model:<br>d: tensor(<span class="hljs-number">116.</span>, grad_fn=&lt;AddBackward0&gt;)<br></code></pre></td></tr></table></figure><h2 id="register_backward_hook-用法"><a class="markdownIt-Anchor" href="#register_backward_hook-用法"></a> <code>register_backward_hook()</code> 用法</h2><h3 id="函数签名-3"><a class="markdownIt-Anchor" href="#函数签名-3"></a> <strong>函数签名：</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">nn.Module.register_backward_hook(hook)<br></code></pre></td></tr></table></figure><h3 id="参数说明-2"><a class="markdownIt-Anchor" href="#参数说明-2"></a> <strong>参数说明：</strong></h3><ul><li>hook：类型为 <code>Callable[[Module, Tensor, Tensor], None]</code> 的函数对象<ul><li><code>module</code> (类型: <code>torch.nn.Module</code>)：当前注册 hook 的模块实例</li><li><code>grad_input</code> (类型: <code>tuple[Tensor, ...]</code>)：输入张量的梯度元组，每个元素对应模块正向传播接收到的一个输入张量的梯度</li><li><code>grad_output</code> (类型: <code>tuple[Tensor, ...]</code>)：输出张量的梯度元组，每个元素对应模块正向传播生成的一个输出张量的梯度</li></ul></li></ul><h3 id="返回值-3"><a class="markdownIt-Anchor" href="#返回值-3"></a> <strong>返回值</strong>：</h3><ul><li>无直接返回值，但会返回一个 <code>torch.utils.hooks.RemovableHandle</code> 对象。通过该对象加上 <code>.remove()</code> 可以随时移除之前注册的钩子函数</li></ul><p>使用是同理的，通过使用 <code>register_backward_hook()</code>，开发者可以监视和/或修改模块在反向传播过程中的梯度信息，这对于调试、监控训练动态以及实现一些高级算法如梯度裁剪、正则化等非常有用</p><p><strong>技巧：如果前向传播和反向传播的hook都有时，可以用一个类去封装hook使代码模块化</strong></p><h2 id="hook-应用实例特征图提取特征可视化"><a class="markdownIt-Anchor" href="#hook-应用实例特征图提取特征可视化"></a> hook 应用实例：特征图提取特征可视化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torchvision.models <span class="hljs-keyword">as</span> models<br><span class="hljs-keyword">from</span> torchvision.transforms <span class="hljs-keyword">import</span> transforms<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>vgg16_pretrained = models.vgg16(pretrained=<span class="hljs-literal">True</span>)<br>_, axes = plt.subplots(<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, figsize=(<span class="hljs-number">12</span>, <span class="hljs-number">5</span>))<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyModel</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>(MyModel, self).__init__()<br>        self.encoder1 = vgg16_pretrained.features[:<span class="hljs-number">5</span>]<br>        self.encoder2 = vgg16_pretrained.features[<span class="hljs-number">5</span>:<span class="hljs-number">10</span>]<br>        self.encoder3 = vgg16_pretrained.features[<span class="hljs-number">10</span>:<span class="hljs-number">17</span>]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.encoder1(x)<br>        x = self.encoder2(x)<br>        x = self.encoder3(x)<br>        <span class="hljs-keyword">return</span> x<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">visualize</span>(<span class="hljs-params">activation, cnt</span>):<br>    axes[cnt].imshow(activation[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, :, :].detach().numpy(), cmap=<span class="hljs-string">&#x27;gray&#x27;</span>)<br>    axes[cnt].set_title(<span class="hljs-string">f&#x27;Encoder: <span class="hljs-subst">&#123;cnt&#125;</span>&#x27;</span>)<br><br><br>mymodel = MyModel()<br>mymodel.encoder1.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">1</span>))<br>mymodel.encoder2.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">2</span>))<br>mymodel.encoder3.register_forward_hook(<span class="hljs-keyword">lambda</span> mymodel, <span class="hljs-built_in">input</span>, output: visualize(output, <span class="hljs-number">3</span>))<br><br>input_image = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./1.jpg&quot;</span>).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>transforms = transforms.Compose([<br>    transforms.ToTensor(),<br>    transforms.Normalize([<span class="hljs-number">0.485</span>, <span class="hljs-number">0.456</span>, <span class="hljs-number">0.406</span>], [<span class="hljs-number">0.229</span>, <span class="hljs-number">0.224</span>, <span class="hljs-number">0.225</span>])<br>])<br>input_image = transforms(input_image).unsqueeze(<span class="hljs-number">0</span>)<br>axes[<span class="hljs-number">0</span>].imshow(input_image.permute(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>).squeeze(<span class="hljs-number">0</span>), cmap=<span class="hljs-string">&#x27;gray&#x27;</span>)<br>axes[<span class="hljs-number">0</span>].set_title(<span class="hljs-string">&#x27;input&#x27;</span>)<br><span class="hljs-built_in">print</span>(input_image.shape)<br>_ = mymodel(input_image)<br>plt.show()<br><br></code></pre></td></tr></table></figure><p><img src="/2024/02/05/Pytorch-hook/2.png" alt="visualize"></p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://github.com/elliotwaite/pytorch-hooks-tutorial">elliotwaite/pytorch-hooks-tutorial: Examples of using PyTorch hooks, as covered in my YouTube tutorial video. (github.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>curl和wget命令</title>
    <link href="/2024/02/03/curl%E5%92%8Cwget%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/02/03/curl%E5%92%8Cwget%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="wget-命令"><a class="markdownIt-Anchor" href="#wget-命令"></a> wget 命令：</h1><h2 id="wget-简介"><a class="markdownIt-Anchor" href="#wget-简介"></a> wget 简介</h2><p>​Linux wget是一个下载文件的工具，它用在命令行下。对于Linux用户是必不可少的工具，尤其对于网络管理员，经常要下载一些软件或从远程服务器恢复备份到本地服务器。如果我们使用虚拟主机，处理这样的事务我们只能先从远程服务器下载到我们电脑磁盘，然后再用ftp工具上传到服务器。这样既浪费时间又浪费精力，那不没办法的事。而到了Linux VPS，它则可以直接下载到服务器而不用经过上传这一步。wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单</p><h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget [选项]... [URL]...<br></code></pre></td></tr></table></figure><h2 id="常用参数"><a class="markdownIt-Anchor" href="#常用参数"></a> 常用参数：</h2><ol><li><p><code>-O</code> 或 <code>--output-document</code>：指定下载文件的保存位置和名称。如果文件名以斜杠（/）开头，<code>wget</code> 会将文件保存到指定的目录。</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">wget -O <span class="hljs-keyword">filename</span> <span class="hljs-keyword">http</span>://example.com/<span class="hljs-keyword">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-c</code> 或 <code>--continue</code> ：wget 的最大优势之一：断点下载</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">wget -c <span class="hljs-keyword">filename</span> <span class="hljs-keyword">http</span>://example.com/<span class="hljs-keyword">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-r</code> 或 <code>--recursive</code>：递归下载整个网站。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">wget -r http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>-k</code> 或 <code>--convert-links</code>：将相对链接转换为绝对链接。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">wget -k http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>-nc</code> 或 <code>--no-clobber</code>：如果本地文件存在且不比远程文件旧，不下载文件。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">wget -nc <span class="hljs-keyword">http</span>://example.com/<span class="hljs-built_in">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-q</code> 或 <code>--quiet</code>：静默模式，不显示下载进度和日志信息。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">wget -q <span class="hljs-keyword">http</span>://example.com/<span class="hljs-built_in">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>--limit-rate</code>：限制下载速度。</p><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs hsp">wget --<span class="hljs-keyword">limit</span>-rate=<span class="hljs-number">100</span>k http:<span class="hljs-comment">//example.com/file.zip</span><br></code></pre></td></tr></table></figure></li><li><p><code>--limit-rate</code>：限制并发连接数。</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">wget --<span class="hljs-built_in">max</span>-connections=<span class="hljs-number">5</span> http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>--user</code> 和 <code>--password</code>：用于 FTP 或 HTTP 认证。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">wget <span class="hljs-params">--user=username</span> <span class="hljs-params">--password=password</span> http:<span class="hljs-string">//example.com</span><br></code></pre></td></tr></table></figure></li></ol><p>其实最常用的也只有 <code>-o -c -q</code> 三个参数，一般下载就直接使用：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">wget -q -c <span class="hljs-keyword">http</span>://example.com/<span class="hljs-built_in">file</span>.zip<br></code></pre></td></tr></table></figure><h1 id="curl-命令"><a class="markdownIt-Anchor" href="#curl-命令"></a> curl 命令</h1><h2 id="curl-简介"><a class="markdownIt-Anchor" href="#curl-简介"></a> curl 简介：</h2><p>curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思（就是 linux 在终端里面的浏览器）。它的功能非常强大，命令行参数多达几十种。如果熟练的话，完全可以取代 Postman 这一类的图形界面工具。</p><p>curl 的语法和 wget 相同，比如在终端中查看网页（没有参数就是 <code>-G</code> 参数）：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">curl</span> www.bing.com<br></code></pre></td></tr></table></figure><h2 id="常用参数-2"><a class="markdownIt-Anchor" href="#常用参数-2"></a> 常用参数：</h2><ol><li><p><code>-G</code> 或 <code>-get</code>：使用 GET 请求发送数据。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl -G -d <span class="hljs-string">&quot;param1=value1&amp;param2=value2&quot;</span> http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>-u</code> 或 <code>--user</code>：用于 HTTP 基本认证。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl -u username:password http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>-o</code> 或 <code>--output</code>：指定文件保存位置。</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">curl -o <span class="hljs-keyword">filename</span> <span class="hljs-keyword">http</span>://example.com/<span class="hljs-keyword">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-O</code>：保存文件时使用服务器上的文件名。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">curl -O <span class="hljs-keyword">http</span>://example.com/<span class="hljs-built_in">file</span>.zip<br></code></pre></td></tr></table></figure></li><li><p><code>-v</code> 或 <code>--verbose</code>：显示详细的输出信息。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl -v http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li><li><p><code>-s</code> 或 <code>-silent</code>：静默模式，不输出错误和进度信息。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">curl -s http:<span class="hljs-comment">//example.com</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>图像分割评价指标</title>
    <link href="/2024/01/31/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
    <url>/2024/01/31/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h1 id="图像分割评价指标"><a class="markdownIt-Anchor" href="#图像分割评价指标"></a> 图像分割评价指标</h1><p><strong>图像分割的（包括语义分割，实例分割，以及全景分割），它们的评价指标都是一样的</strong>。常用的图像分割指标有：</p><ul><li><strong>像素准确率（Pixel Accuracy，PA）</strong></li><li><strong>类别像素准确率（Class Pixel Accuray，CPA）</strong></li><li><strong>类别平均像素准确率（Mean Pixel Accuracy，MPA）</strong></li><li><strong>交并比（Intersection over Union，IoU）</strong></li><li>*<strong>平均交并比（Mean Intersection over Union，MIoU）*</strong></li></ul><h2 id="混淆矩阵"><a class="markdownIt-Anchor" href="#混淆矩阵"></a> 混淆矩阵：</h2><p>混淆矩阵（confusion matrix）也叫错误矩阵（error matrix），混淆矩阵是以模型预测的类别数量统计信息为横轴，真实标签的数量统计信息为纵轴画出的矩阵，以二分类问题为例，混淆矩阵由四个部分构成：True Positive，False Positive，False Negative，False Negative，True Negative 四类，如下图所示：</p><p><img src="/2024/01/31/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/1.png" alt="table"></p><p>由此可以将这个矩阵推广到多维的情况，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">confusion_matrix</span>(<span class="hljs-params">y_true, y_pred</span>):<br>    label_pairs = np.ravel_multi_index((label_img, pred_label_img), <br>                                        dims=(num_classes, num_classes))<br>    confs_matrix = np.bincount(label_pairs, minlength=num_classes**<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">return</span> confs_matrix<br></code></pre></td></tr></table></figure><h2 id="pixel-accuracy准确率"><a class="markdownIt-Anchor" href="#pixel-accuracy准确率"></a> Pixel  Accuracy（准确率）:</h2><p>​accuracy指的是正确预测的样本数占总预测样本数的比值，公式表示为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">PA = \frac{\sum_{i=0}^n p_{ii}}{\sum_{i=0}^n \sum_{j=0}^n p_{ij}} = \frac{TP+TN}{TP+TN+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6241120000000002em;vertical-align:-1.1301100000000002em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494002em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>后面的等号在二分类情况下成立</p><ul><li>n : 类别总数，包括背景的话就是n+1</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> : 真实像素类别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 的像素被预测为类别 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的总数量</li><li>TP： 真阳性数，在label中为阳性，在预测值中也为阳性的个数</li><li>TN： 真阴性数， 在label中为阴性，在预测值中也为阴性的个数</li><li>FP： 假阳性数， 在label中为阴性，在预测值中为阳性的个数</li><li>FN： 假阴性数， 在label中为阳性，在预测值中为阴性的个数</li></ul><p>PA 看上去是一个很好的评价指标，但是在下面情况下，即使把整张图片都预测为背景都有很高的准确率，但这显然是不符合要求的</p><p><img src="/2024/01/31/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/2.png" alt="example"></p><p>同理与其相似的还有 Precision（查准率）Recall （查全率）</p><h2 id="交并比-iou"><a class="markdownIt-Anchor" href="#交并比-iou"></a> 交并比 IoU</h2><p>​上面的评价指标用的都不多，Intersection-Over-Union (IoU)，也称为 Jaccard 指数，是语义分割中最常用的指标之一，IoU 是预测分割和标签之间的重叠区域除以预测分割和标签之间的联合区域（两者的交集/两者的并集）。该指标的范围为 0–1 (0–100%)，其中 0 表示没有重叠，1 表示完全重叠分割。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>o</mi><mi>U</mi><mo>=</mo><mfrac><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo fence="true">∣</mo></mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∪</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IoU=\frac{\left| A\cap B \right|}{\left| A\cup B \right|}=\frac{TP}{TP+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>注意：IoU 在多分类中每个值只能应用于单个类别类别，多分类任务中每个类别都有一个 IoU 值，mIoU ( mean Intersection over union ) 是 IoU 的平均值，它们代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">IoU</span>(<span class="hljs-params">confs_matrix</span>):<br>    IoU_matrix = np.diag(confs_matrix) / (confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>) +<br>                    confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">0</span>) - np.diag(confs_matrix))<br>    mIoU = IoU_matrix.mean()<br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&#x27;IoU matrix&#x27;</span>:IoU_matrix, <span class="hljs-string">&#x27;mIoU&#x27;</span>: mIoU&#125;<br></code></pre></td></tr></table></figure><h2 id="dice-coefficientf1-score"><a class="markdownIt-Anchor" href="#dice-coefficientf1-score"></a> Dice coefficient，F1-score</h2><p>​定义： Dice系数定义为两倍的交集除以像素和，也叫F1 score。Dice 系数与 IoU 非常相似，<strong>Dice 常用于医学影像分割，其他情况下的图像分割评价指标一般选择 mIoU</strong></p><p>​F1-score是为了能够评价不同算法的优劣，在 Precision 和 Recall 的基础上提出了F1值的概念，来对 Precision 和 Recall 进行整体评价。F1-score（均衡平均数）是综合考虑了模型查准率和查全率的计算结果，取值更偏向于取值较小的那个指标。F1的定义如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><msup><mrow><mo fence="true">(</mo><mfrac><mrow><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><msup><mi>l</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><msup><mi>n</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><mn>2</mn></mfrac><mo fence="true">)</mo></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>2</mn><mtext> </mtext><mfrac><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>×</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mn>2</mn><mtext> </mtext><mfrac><mrow><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><mrow><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow></mfrac><mo>=</mo><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mn>2</mn><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_1 = \left( \frac{recall^{-1} + precision^{-1}}{2} \right)^{-1} = 2\  \frac{precision \times recall}{precision + recall} \\=2 \ \frac{\frac{TP}{TP + FP} \times \frac{TP}{TP + FN}}{\frac{TP}{TP + FP} + \frac{TP}{TP + FN}} = = \frac{TP}{2TP+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.6451460000000004em;vertical-align:-0.95003em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6951160000000003em;"><span style="top:-3.944008em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord">2</span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.8313240000000004em;vertical-align:-1.165662em;"></span><span class="mord">2</span><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6656620000000002em;"><span style="top:-2.237669em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7933310000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.165662em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.1296600000000003em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Dice</span>(<span class="hljs-params">confs_matrix</span>):<br>    Dice_score = <span class="hljs-number">2</span>* np.diag(confs_matrix) / (confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>) +<br>                    confs_matrix.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">0</span>) + np.diag(confs_matrix))<br>    <span class="hljs-keyword">return</span> Dice_score<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>魔术方法</title>
    <link href="/2024/01/26/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/"/>
    <url>/2024/01/26/%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="python魔术方法"><a class="markdownIt-Anchor" href="#python魔术方法"></a> Python魔术方法</h1><p>​在Python中，所有以双下划线<code>__</code>包起来的方法，统称为<strong>Magic Method（魔术方法）</strong>，它是一种的特殊方法，普通方法需要调用，而魔术方法不需要调用就可以自动执行。</p><p>​魔术方法在类或对象的某些事件出发后会自动执行，让类具有神奇的“魔力”。如果希望根据自己的程序定制自己特殊功能的类，那么就需要对这些方法进行重写。</p><p>​魔术方法有上百种，只有很小的一部分我们才会使用，大部分魔术方法我们只需要了解即可</p><h2 id="常见魔术方法"><a class="markdownIt-Anchor" href="#常见魔术方法"></a> 常见魔术方法</h2><h3 id="1初始化方法__init__"><a class="markdownIt-Anchor" href="#1初始化方法__init__"></a> 1.初始化方法<code>__init__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">触发机制：实例化对象之后立即触发<br>参数：至少有一个self，接收当前对象，其他参数根据需要进行定义<br>返回值：无<br>作用：初始化对象的成员<br></code></pre></td></tr></table></figure><p>用得太多了</p><h3 id="2构造方法__new__"><a class="markdownIt-Anchor" href="#2构造方法__new__"></a> 2.构造方法<code>__new__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机： 实例化对象时自动触发（在__init__之前触发）<br>参数：至少一个cls 接收当前类，其他参数根据初始化方法参数决定<br>返回值：必须返回一个对象实例，没有返回值，则实例化对象的结果为None<br>作用：实例化对象<br>注意：实例化对象是Object类底层实现，其他类继承了Object的__new__才能够实现实例化对象。<br></code></pre></td></tr></table></figure><p><code>__new__</code> 方法用得很少，它用于建立一个类，几乎只有客制化类的时候才需要使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__new__</span>(<span class="hljs-params">cls, x</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;__new__&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>().__new__(cls)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x</span>):<br>        self.x = x<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;__init__&#x27;</span>)<br><br>o = A(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="3析构方法__del__"><a class="markdownIt-Anchor" href="#3析构方法__del__"></a> 3.析构方法<code>__del__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：当该类对象被销毁时，自动触发<br>参数：一个self，接受当前对象<br>返回值：无<br>作用：关闭或释放对象创建时资源<br>注意：del不一定会触发当前方法，只有当前对象没有任何变量引用时才会触发<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__del__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__del__&quot;</span>)<br><br>o = A(<span class="hljs-number">1</span>)<br>x = o<br><span class="hljs-keyword">del</span> o<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;done&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="4__call__"><a class="markdownIt-Anchor" href="#4__call__"></a> 4.<code>__call__</code></h3><p>​<strong>callable是指能够当成函数调用的对象</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">调用对象的魔术方法<br>触发时机:将对象当作函数调用时触发,方式： 对象()<br>参数:至少一个self接收对象，其余根据调用时参数决定<br>返回值：根据情况而定<br>作用：可以将复杂的步骤进行合并操作，减少调用的步骤，方便使用<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Multiplier</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, mul</span>):<br>        self.mul = mul<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, arg</span>):<br>        <span class="hljs-keyword">return</span> self.mul * arg<br><br>o = Multiplier(<span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(o(<span class="hljs-number">4</span>))<br></code></pre></td></tr></table></figure><h3 id="5__len__"><a class="markdownIt-Anchor" href="#5__len__"></a> 5.<code>__len__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：使用len(对象) 的时候触发<br>参数：一个参数self<br>返回值：必须是一个整型<br>作用：可以设置为检测对象成员个数，但是也可以进行其他任意操作<br>注意：返回值必须必须是整数，否则语法报错，另外该要求是格式要求。<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):<br>        self._data = data<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self._data)<br><br>x = MyList([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(x))<br></code></pre></td></tr></table></figure><h3 id="6__getitem__"><a class="markdownIt-Anchor" href="#6__getitem__"></a> 6.<code>__getitem__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机:使用对象[i]的时候触发<br>参数：一个self和索引<br>同理可以知道__setitem__，__delitem__，__reversed__（由reverse()函数触发）等方法的用法<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):<br>        self._data = data<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, key</span>):<br>        <span class="hljs-keyword">return</span> self._data[key]<br><br>x = MyList([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(x[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h3 id="7__repr__"><a class="markdownIt-Anchor" href="#7__repr__"></a> 7.<code>__repr__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机:在使用repr(对象)的时候触发<br>参数：一个self接收对象<br>返回值：必须是字符串<br>作用：将对象转使用repr化为字符串时使用，也可以用于快捷操作<br></code></pre></td></tr></table></figure><h3 id="8__format__"><a class="markdownIt-Anchor" href="#8__format__"></a> 8.<code>__format__</code></h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">触发时机：使用字符串.format(对象)时候触发<br>参数：一个self接收对象，一个参数接收format的&#123;&#125;中的格式，例如:&gt;5<br>返回值:必须是字符串<br>作用：设置对象可以作为format的参数，并且自定义对象格式化的规则<br>注意：无<br></code></pre></td></tr></table></figure><h2 id="魔术方法重载运算符"><a class="markdownIt-Anchor" href="#魔术方法重载运算符"></a> 魔术方法重载运算符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> math <span class="hljs-keyword">import</span> hypot,sqrt<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):<br>        self.x = x<br>        self.y = y<br>    <br>    <span class="hljs-comment">#__str__方法，会在打印变量时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Vector(%r,%r)&#x27;</span> %(self.x, self.y)<br>    <br>    <span class="hljs-comment">#__abs__函数会在调用abs()函数时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__abs__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment">#hypot(x,y) 返回欧几里得范数 sqrt(x*x + y*y)</span><br>        <span class="hljs-keyword">return</span> hypot(self.x, self.y)<br>        <br>    <span class="hljs-comment">#__bool__函数会在调用bool()函数时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__bool__</span>(<span class="hljs-params">self</span>): <br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">bool</span>(<span class="hljs-built_in">abs</span>(self))<br>        <br>    <span class="hljs-comment"># 执行a + b时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__add__</span>(<span class="hljs-params">self, other</span>):<br>        x = self.x + other.x<br>        y = self.y + other.y<br>        <span class="hljs-keyword">return</span> Vector(x,y)<br>    <br>    <span class="hljs-comment"># 执行a+=b时，自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iadd__</span>(<span class="hljs-params">self, other</span>):<br>        <span class="hljs-keyword">return</span> self + other<br>    <br>    <span class="hljs-comment"># 执a * b的时候，会自动调用</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mul__</span>(<span class="hljs-params">self, scalar</span>):<br>        <span class="hljs-keyword">return</span> Vector(self.x * scalar,self.y * scalar)<br>    <br>    <span class="hljs-comment"># 求-a时，自动调用    </span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__neg__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> Vector(-self.x,-self.y)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__matmul__</span>():<br>        <span class="hljs-keyword">pass</span><br>v1 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">4</span>)<br>v2 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(v1 + v2)<br>v = Vector(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">abs</span>(v))<br><span class="hljs-built_in">print</span>(v * <span class="hljs-number">3</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">abs</span>(v * <span class="hljs-number">3</span>))<br><span class="hljs-built_in">print</span>(-v)<br>v1 += v2<br><span class="hljs-built_in">print</span>(v1)<br></code></pre></td></tr></table></figure><h2 id="其它魔术方法"><a class="markdownIt-Anchor" href="#其它魔术方法"></a> 其它魔术方法：</h2><h3 id="比较运算相关魔术方法"><a class="markdownIt-Anchor" href="#比较运算相关魔术方法"></a> 比较运算相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">__ lt__(self, other)：<br>定义小于号的行为：x &lt; y 调用 x.lt(y)<br>__ le__(self, other)：<br>定义小于等于号的行为：x &lt;= y 调用 x.le(y)<br>__ eq__(self, other) ：<br>定义等于号的行为：x == y 调用 x.eq(y)<br>__ ne__(self, other)：<br>定义不等号的行为：x != y 调用 x.ne(y)<br>__ gt__(self, other)：<br>定义大于号的行为：x &gt; y 调用 x.**gt(y)<br>__ ge__(self, other) ：<br>定义大于等于号的行为：x &gt;= y 调用 x.ge(y)<br></code></pre></td></tr></table></figure><h3 id="赋值运算相关魔术方法"><a class="markdownIt-Anchor" href="#赋值运算相关魔术方法"></a> 赋值运算相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs text">__iadd__(self, other)             定义赋值加法的行为：+=<br>__isub__(self, other)             定义赋值减法的行为：-=<br>__imul__(self, other)             定义赋值乘法的行为：=<br>__itruediv__(self, other)         定义赋值真除法的行为：/=<br>__ifloordiv__(self, other)        定义赋值整数除法的行为：//=<br>__imod__(self, other)             定义赋值取模算法的行为：%=<br>__ipow__(self, other[, modulo])   定义赋值幂运算的行为：**=<br>__ilshift__(self, other)          定义赋值按位左移位的行为：&lt;&lt;=<br>__irshift__(self, other)          定义赋值按位右移位的行为：&gt;&gt;=<br>__iand__(self, other)             定义赋值按位与操作的行为：&amp;=<br>__ixor__(self, other)             定义赋值按位异或操作的行为：^=<br>__ior__(self, other)              定义赋值按位或操作的行为：|=<br></code></pre></td></tr></table></figure><h3 id="类型转换相关魔术方法"><a class="markdownIt-Anchor" href="#类型转换相关魔术方法"></a> 类型转换相关魔术方法</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">__complex__(self)      定义当被 complex() 调用时的行为（需要返回恰当的值）<br>__int__(self)          定义当被 int() 调用时的行为（需要返回恰当的值）<br>__float__(self)        定义当被 float() 调用时的行为（需要返回恰当的值）<br>__round__(self[, n])   定义当被 round() 调用时的行为（需要返回恰当的值）<br>__index(self)__        1. 当对象是被应用在切片表达式中时，实现整形强制转换<br>                       2. 如果你定义了一个可能在切片时用到的定制的数值型,你应该定义 index<br>                       3. 如果 index 被定义，则 int 也需要被定义，且返回相同的值<br></code></pre></td></tr></table></figure><h3 id="上下文管理相关魔术方法with"><a class="markdownIt-Anchor" href="#上下文管理相关魔术方法with"></a> 上下文管理相关魔术方法(with)</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">__enter__` 和 `__exit__<br>__enter__(self)<br>    1. 定义当使用 with 语句时的初始化行为<br>    2. enter 的返回值被 with 语句的目标或者 as 后的名字绑定<br><br>__exit__(self, exctype, excvalue, traceback)<br>    1. 定义当一个代码块被执行或者终止后上下文管理器应该做什么<br>    2. 一般被用来处理异常，清除工作或者做一些代码块执行完毕之后的日常工作<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>coding tricks</category>
      
    </categories>
    
    
    <tags>
      
      <tag>coding tricks</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python装饰器</title>
    <link href="/2024/01/24/decorator/"/>
    <url>/2024/01/24/decorator/</url>
    
    <content type="html"><![CDATA[<h1 id="python装饰器用法"><a class="markdownIt-Anchor" href="#python装饰器用法"></a> Python装饰器用法：</h1><h2 id="闭包"><a class="markdownIt-Anchor" href="#闭包"></a> 闭包</h2><p>​首先要了解一个概念，闭包一句话说就是，在函数中再嵌套一个函数，并且引用外部函数的变量，这就是一个闭包了：</p><h2 id="函数装饰器"><a class="markdownIt-Anchor" href="#函数装饰器"></a> 函数装饰器</h2><p>​装饰器就是一个闭包，装饰器是闭包的一种应用。<strong>python装饰器就是接受待装饰的函数的函数</strong>，用于拓展原来函数功能的一种函数（给函数加上装饰），<strong>这个函数的特殊之处在于它的返回值也是一个函数，使用python装饰器的好处就是在不用更改原函数的代码前提下给函数增加新的功能</strong>。使用时，再需要的函数前加上@demo即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">debug</span>(<span class="hljs-params">func</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[DEBUG]: enter &#123;&#125;()&quot;</span>.<span class="hljs-built_in">format</span>(func.__name__))<br>        <span class="hljs-keyword">return</span> func()<br>    <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@debug</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>():<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>)<br><br>hello()<br>-----------------------------<br>&gt;&gt;&gt;[DEBUG]: enter hello()<br>&gt;&gt;&gt;hello<br></code></pre></td></tr></table></figure><p>​例子中的装饰器给函数加上一个进入函数的debug模式，这时候调用 <code>hello()</code> 完全等价于没有装饰器时候使用 <code>bebug(hello)</code>，不用修改原函数代码就完成了这个功能，可以说是很方便了。</p><h2 id="带参数的装饰器"><a class="markdownIt-Anchor" href="#带参数的装饰器"></a> 带参数的装饰器</h2><p>​装饰器可以通过加一些参数拓展功能，这时候还需要再在外层加装一层函数以接受装饰器的参数，第二层函数才接受被装饰的函数，即装饰器共有三层函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">logging</span>(<span class="hljs-params">level</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">outwrapper</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[&#123;0&#125;]: enter &#123;1&#125;()&quot;</span>.<span class="hljs-built_in">format</span>(level, func.__name__))<br>            <span class="hljs-keyword">return</span> func(*args, **kwargs)<br>        <span class="hljs-keyword">return</span> wrapper<br>    <span class="hljs-keyword">return</span> outwrapper<br><br><span class="hljs-meta">@logging(<span class="hljs-params">level=<span class="hljs-string">&quot;INFO&quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">a, b, c</span>):<br>    <span class="hljs-built_in">print</span>(a, b, c)<br><br>hello(<span class="hljs-string">&quot;hello,&quot;</span>,<span class="hljs-string">&quot;good&quot;</span>,<span class="hljs-string">&quot;morning&quot;</span>)<br>-----------------------------<br>&gt;&gt;&gt;[INFO]: enter hello()<br>&gt;&gt;&gt;hello, good morning<br></code></pre></td></tr></table></figure><p>​上面例子中，装饰器中可以传入参数，先形成一个完整的装饰器，然后再来装饰函数，当然<strong>函数如果需要传入参数也是可以的，用不定长参数符号就可以接收</strong>。这里调用 <code>hello()</code> 等价于使用没有装饰器时的 <code>outwrapper = logging(&quot;hello&quot;), wrapper = outwrapper(&quot;outwrapper&quot;) hello = wrapper(&quot;good&quot;,&quot;morning&quot;)</code></p><h2 id="装饰器类"><a class="markdownIt-Anchor" href="#装饰器类"></a> 装饰器类</h2><p>​装饰器类仍然是以函数为参数的闭包，仍然可以用传入函数参数来理解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, func</span>):<br>        self.func = func<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, *args, **kwargs</span>):<br>        start = time.time()<br>        ret = self.func(*args, **kwargs)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time:<span class="hljs-subst">&#123;time.time() - start&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> ret<br><br><span class="hljs-meta">@Timer</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> a + b<br><span class="hljs-comment"># 等价于</span><br>add = Timer(add)<br><span class="hljs-built_in">print</span>(add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>))<br>-----------------------------<br>&gt;&gt;&gt;Time: <span class="hljs-number">1.192e-6</span><br>&gt;&gt;&gt;<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>就等价于通过 <code>add</code> 实例化了一个 <code>Timer</code> 对象</p><h2 id="进阶带参数的装饰器类"><a class="markdownIt-Anchor" href="#进阶带参数的装饰器类"></a> 进阶：带参数的装饰器类</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, prefix</span>):<br>        self.prefix = prefix<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            start = time.time()<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time:<span class="hljs-subst">&#123;time.time() - start&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br><br><span class="hljs-meta">@Timer(<span class="hljs-params">prefix=<span class="hljs-string">&quot;curr_time: &quot;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">return</span> a + b<br><span class="hljs-comment"># 等价于</span><br>add = Timer(prefix=<span class="hljs-string">&quot;curr_time: &quot;</span>)(add)<br><span class="hljs-built_in">print</span>(add(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>))<br></code></pre></td></tr></table></figure><p>​此时仍然可以类比上面的带参数的函数装饰器，也可以视为三层函数，第一层函数由 <code>__init__</code> 函数承担</p><h2 id="类装饰器"><a class="markdownIt-Anchor" href="#类装饰器"></a> 类装饰器</h2><p>​为什么类还能装饰函数？从Python底层来看，函数和类都是对象，函数既然能修饰类，类就能修饰函数（不过这个用得少，看看就行）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_str</span>(<span class="hljs-params">cls</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">str</span>(self.__dict__)<br>    <span class="hljs-comment"># 把cls的__str__给替换为了__str__</span><br>    cls.__str__ = __str__<br>    <span class="hljs-keyword">return</span> cls<br><br><span class="hljs-meta">@add_str</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyObject</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, a, b</span>):<br>        self.a = a<br>        self.b = b<br><br><span class="hljs-comment"># 等价于</span><br>MyObject = add_str(MyObject)<br><br>o = MyObject(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(o)    <span class="hljs-comment">#自动调用__str__魔术方法</span><br></code></pre></td></tr></table></figure><p>上面的代码本质就是重载了一下 <code>__str__</code> 函数</p><h2 id="类里面的装饰器"><a class="markdownIt-Anchor" href="#类里面的装饰器"></a> 类里面的装饰器</h2><p>​把装饰器挪到类里面，本质上就相当于把一个函数变成类的方法，最容易想到的类里面的装饰器如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">self, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br>d = Decorators()<br><span class="hljs-meta">@d.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>但这样写我们是很不爽的，首先，为了调用这个装饰器我们还需要实例化这个类，这样写太麻烦了；其次，装饰器里面的 <code>self</code> 参数我们压根就没有用到它。于是Python有了一个 classmethod，<strong>把只能用对象调用的方法变成了类可以调用的方法</strong>，代码可改为如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @classmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">cls, func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">@Decorators.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>但是这个 classmethod 里面第一个参数 cls 我们依然没有使用，如果我们只想把装饰器放在类里面封装，而和类和对象都无关的时候，装饰器可以使用 staticmethod，直接把第一个参数删掉，其他都不变：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">@Decorators.log_function</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">n</span>):<br>    <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> fib(n-<span class="hljs-number">1</span>) + fib(n-<span class="hljs-number">2</span>)<br><br>fib(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h3 id="一个新的问题"><a class="markdownIt-Anchor" href="#一个新的问题"></a> 一个新的问题</h3><p>​如果我们想用类里面的装饰器去装饰类里面的方法怎么办？我们的自然想法是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">    @log_function</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">self, n</span>):<br>        <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> self.fib(n-<span class="hljs-number">1</span>) + self.fib(n-<span class="hljs-number">2</span>)<br>d = Decorators()<br>d.fib(<span class="hljs-number">3</span>)<br><br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">3</span>)<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">2</span>)<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">1</span>)<br>function end!<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">0</span>)<br>function end!<br>function end!<br>function start!<br>args: (&lt;__main__.Decorators <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002132CEE6320</span>&gt;, <span class="hljs-number">1</span>)<br>function end!<br>function end!<br></code></pre></td></tr></table></figure><p>​虽然这样确实能够正常运行，但没有人在Python中这样写代码，我们非常不习惯在 class 内部有着没有 self 参数的函数</p><p>​值得一提的是，在 class 之外，我们不能通过 <code>d.log_function() </code> 调用函数，而只能使用<code>Decorators.log_function()</code> 调用（原因很底层，我不知道）</p><p>最终问题是：我们想把这个装饰器和方法全部在类里面封装，即装饰器只能在类里面正常使用，而在类之外，只能通过类和对象正常使用怎么办？答案是在 log_function 后加上 <code>log_function = staticmethod(log_function)</code> 这一行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Decorators</span>(<span class="hljs-title class_ inherited__">object</span>):<br><span class="hljs-meta">    @staticmethod</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">log_function</span>(<span class="hljs-params">func</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">wrapper</span>(<span class="hljs-params">*args, **kwargs</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function start!&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;args: <span class="hljs-subst">&#123;args&#125;</span>&quot;</span>)<br>            ret = func(*args, **kwargs)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;function end!&quot;</span>)<br>            <span class="hljs-keyword">return</span> ret<br>        <span class="hljs-keyword">return</span> wrapper<br>    <br><span class="hljs-meta">    @log_function</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fib</span>(<span class="hljs-params">self, n</span>):<br>        <span class="hljs-keyword">if</span> n&lt;=<span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>        <span class="hljs-keyword">return</span> self.fib(n-<span class="hljs-number">1</span>) + self.fib(n-<span class="hljs-number">2</span>)<br>    log_function = <span class="hljs-built_in">staticmethod</span>(log_function)<br></code></pre></td></tr></table></figure><h2 id="补充classmethod和staticmethod区别"><a class="markdownIt-Anchor" href="#补充classmethod和staticmethod区别"></a> 补充：classmethod和staticmethod区别</h2><p>声明时：</p><ul><li>classmethod的第一个参数为类本身(cls)，正如实例方法的第一个参数为对象本身(self);</li><li>staticmethod第一个参数不需要传入cls或self，故staticmethod中是无法访问类和对象的数据的。</li></ul><p>调用时：</p><ul><li>都可用类名直接调用</li><li>也可用实例对象调用（不推荐，没必要）</li></ul>]]></content>
    
    
    <categories>
      
      <category>coding tricks</category>
      
    </categories>
    
    
    <tags>
      
      <tag>coding tricks</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>F.grid_sample详解</title>
    <link href="/2024/01/20/grid-sample/"/>
    <url>/2024/01/20/grid-sample/</url>
    
    <content type="html"><![CDATA[<h1 id="fgrid_sample-计算细节"><a class="markdownIt-Anchor" href="#fgrid_sample-计算细节"></a> <code>F.grid_sample</code> 计算细节</h1><p>​该采样函数的接口声明如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.nn.functional.grid_sample(<span class="hljs-built_in">input</span>, grid, mode=‘bilinear’, padding_mode=‘zeros’, align_corners=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><p>函数内部先回将根据特征图 input 的大小将坐标规范化到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，规范化坐标如下图所示，可以发现：<strong>特征图的坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span> 对应的是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(w,h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span>，这点和 Opencv 的规定相同，而不是按数学上的矩阵索引规律</strong></p><p><img src="/2024/01/20/grid-sample/1.png" alt="归一化坐标"></p><p>​因此使用 <code>torch.meshgird</code> 生成网格坐标的时候，要使用 <code>indexing='xy'</code> 或者 <code>transpose()</code> 方法（以两倍上采样为例）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">h = torch.linspace(-h/<span class="hljs-number">2</span> + <span class="hljs-number">0.5</span>, h/<span class="hljs-number">2</span> - <span class="hljs-number">0.5</span>, h) / (h/<span class="hljs-number">2</span>)<br>w = torch.linspace(-w/<span class="hljs-number">2</span> + <span class="hljs-number">0.5</span>, w/<span class="hljs-number">2</span> - <span class="hljs-number">0.5</span>, w) / (w/<span class="hljs-number">2</span>)<br>init_pos = torch.stack(torch.meshgrid(w, h, indexing=<span class="hljs-string">&#x27;xy&#x27;</span>))<br><span class="hljs-built_in">print</span>(init_pos)<br><br>```<br>init_pos:<br>tensor([[[[-<span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.7500</span>], <br>          [-<span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.7500</span>], <br>          [ <span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.7500</span>], <br>          [ <span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.7500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.2500</span>], <br>          [-<span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.2500</span>, -<span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.7500</span>, -<span class="hljs-number">0.2500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.2500</span>], <br>          [-<span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.2500</span>], <br>          [ <span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.2500</span>]],<br><br>         [[-<span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.7500</span>],<br>          [-<span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.7500</span>],<br>          [ <span class="hljs-number">0.2500</span>,  <span class="hljs-number">0.7500</span>],<br>          [ <span class="hljs-number">0.7500</span>,  <span class="hljs-number">0.7500</span>]]]])<br>```<br></code></pre></td></tr></table></figure><p>​上面计算过程又引出一个问题：h 和 w为什么是那样计算的？</p><p><img src="/2024/01/20/grid-sample/2.png" alt="格点和网点"></p><p>​如上图所示，<code>F.grid_sample</code> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 处坐标对应着图像的正中心（上右图中的中心红点），右上角的绿点的坐标对应着才是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，如果我们要生成 target pixel 的坐标，那么图上的情形为 h = w = 8，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-1,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span> 区间内对应有 4 个点，归一化前每个点间隔为1，则归一化前右上角坐标为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>4</mn><mo separator="true">,</mo><mo>−</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-4, -4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">4</span><span class="mclose">)</span></span></span></span>，最右上角 target source 坐标 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>3.5</mn><mo separator="true">,</mo><mo>−</mo><mn>3.5</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-3.5,-3.5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">3</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，归一化后为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>0.875</mn><mo separator="true">,</mo><mn>0.875</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-0.875,0.875)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">7</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">8</span><span class="mord">7</span><span class="mord">5</span><span class="mclose">)</span></span></span></span>，同样的方法可以解释上面的代码和结果</p><p>​注：padding_mode 参数会对结果造成影响，在 dysample 中选用 <code>padding_mode='border'</code></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pytorch可复现性</title>
    <link href="/2024/01/19/Pytorch%E5%8F%AF%E5%A4%8D%E7%8E%B0%E6%80%A7/"/>
    <url>/2024/01/19/Pytorch%E5%8F%AF%E5%A4%8D%E7%8E%B0%E6%80%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch结果可复现性问题"><a class="markdownIt-Anchor" href="#pytorch结果可复现性问题"></a> Pytorch结果可复现性问题</h1><p>​在我比较不同的采样过程对评价指标的影响时，发现由于计算机的随机性对评价指标有着很大的影响，这种影响带来的不确定性在下游任务中大到根本分辨不出来哪种采样过程效果更好。这篇文章专门用于解决控制 Pytorch 中的随机性问题</p><h2 id="随机性的产生"><a class="markdownIt-Anchor" href="#随机性的产生"></a> 随机性的产生：</h2><ol><li><strong>非确定性操作：</strong> 有些操作在 GPU 上可能是非确定性的，即使设置了随机种子也无法完全确保结果的一致性。一些涉及CUDA加速的操作，比如某些优化算法，可能会引入不确定性</li><li><strong>数据加载过程：</strong> 如果在数据加载过程中存在随机性，即使设置了随机种子，每次加载的数据顺序或样本可能仍然不同。确保你的数据加载过程是确定性的，或者在设置种子的同时使用相同的数据加载方式</li><li><strong>多线程操作：</strong> 如果你的代码中使用了多线程或多进程，这可能导致并发操作的非确定性。确保在设置种子的同时，对多线程或多进程进行适当的同步和控制，以避免不一致的结果</li><li><strong>PyTorch版本差异：</strong> PyTorch 的不同版本可能会有微小的实现差异，可能会影响结果的一致性。确保在相同的PyTorch版本下运行代码</li></ol><p>我在之前简单任务中使用 CPU 实验的时候，只需要设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">set_seed</span>(<span class="hljs-params">seed</span>):<br>    random.seed(seed)<br>    np.random.seed(seed)<br>    torch.manual_seed(seed)<br></code></pre></td></tr></table></figure><p>就可以保证结果的可复现性了，但是如果在 GPU 上进行实验，GPU 会引入新的随机性，这就产生了新的问题，即在 GPU 上如何保证结果可复现性</p><h2 id="在gpu上保证可复现性"><a class="markdownIt-Anchor" href="#在gpu上保证可复现性"></a> 在GPU上保证可复现性：</h2><h3 id="方法一将线程数设置为0"><a class="markdownIt-Anchor" href="#方法一将线程数设置为0"></a> 方法一：将线程数设置为0</h3><p>​GPU 引入随机性的原因来源于它的并行计算和 cuda 的随机优化算法，如果我们将它设置为 <code>num_workers = 0</code> 和禁止使用 cuda 随机优化，就可以保证结果可复现，但是这样运行速度就太慢了，失去了 GPU 的意义</p><h3 id="方法二设置cuda的种子"><a class="markdownIt-Anchor" href="#方法二设置cuda的种子"></a> 方法二：设置cuda的种子</h3><p>​事实上，GPU 也可以设置随机种子，我们需要把随机种子设置中加上一些 cuda 的种子和禁止 cuda 进行不可复现的算法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup_seed</span>(<span class="hljs-params">seed</span>):<br>   torch.manual_seed(seed)<br>   os.environ[<span class="hljs-string">&#x27;PYTHONHASHSEED&#x27;</span>] = <span class="hljs-built_in">str</span>(seed)<br>   torch.cuda.manual_seed(seed)<br>   torch.cuda.manual_seed_all(seed)<br>   np.random.seed(seed)<br>   random.seed(seed)<br>   torch.backends.cudnn.benchmark = <span class="hljs-literal">False</span><br>   torch.backends.cudnn.deterministic = <span class="hljs-literal">True</span><br>   torch.backends.cudnn.enabled = <span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><p>​这样也会导致运行速度很慢</p><h3 id="方法三使用pytorch-lightning"><a class="markdownIt-Anchor" href="#方法三使用pytorch-lightning"></a> 方法三：使用Pytorch-lightning</h3><p>​Pytorch-lightning 是对 Pytorch 的封装，省去很多繁琐的中间过程，使用起来非常方便。为了确保可复现性，pl 提供了设置接口，非常简洁方便</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> lightning.pytorch <span class="hljs-keyword">import</span> Trainer, seed_everything<br>seed_everything(<span class="hljs-number">42</span>, workers=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># sets seeds for numpy, torch and python.random.</span><br>trainer = Trainer(deterministic=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>​设置 workers=True 会确保在dataloader中的多线程的可复现性, 并且确保各线程得到各自独特的不会重复的种子，避免因为相同的种子导致相同的数据增强</p><p>​deterministic决定pytorch是否使用确定性算法，默认False, 设置True会使pytorch使用确定性算法</p><p><strong>通过上述pl设置，主要有以下优点（重点！）：</strong></p><ul><li><strong>保证了可复现的同时，没有牺牲任何训练速度</strong></li><li><strong>设置非常简单方便</strong></li></ul><h3 id="方法四pytorch检验可复现性"><a class="markdownIt-Anchor" href="#方法四pytorch检验可复现性"></a> 方法四：Pytorch检验可复现性</h3><p>​Pytorch 2.1 版本以后都支持 <code>torch.use_deterministic_algorithms</code> 这一检验可复现性的函数，它如果检验到在算法中存在不确定性就会弹出 RuntimeError 的错误，下面是一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-comment"># Set the seed for generating random numbers</span><br>torch.manual_seed(<span class="hljs-number">0</span>)<br><span class="hljs-comment"># Enable deterministic algorithms</span><br>torch.use_deterministic_algorithms(<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># Create a tensor with random values</span><br>x = torch.randn(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<br><span class="hljs-comment"># Perform an operation that is non-deterministic</span><br>y = x.view(-<span class="hljs-number">1</span>)<br><span class="hljs-comment"># This will raise a RuntimeError because `view()` is non-deterministic</span><br></code></pre></td></tr></table></figure><p>​如果需要使用 <code>view()</code> 函数，可以使用 <code>torch.reshape()</code> 函数来代替，因为 <code>torch.reshape()</code> 是确定性的，这是因为 <code>view()</code> 函数只适用于连续的张量，而<code>reshape()</code>函数可以用于连续和不连续的张量。这是因为 <code>view()</code> 函数的实现依赖于张量的步幅（stride），而步幅是在张量的存储中定义的。如果张量不是连续的，则步幅可能会发生变化，从而导致 <code>view()</code> 函数的结果不确定。相反，<code>reshape()</code> 函数不依赖于步幅，因此可以用于连续和不连续的张量，具有更好的鲁棒性</p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pytorch项目经验</title>
    <link href="/2023/12/13/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/"/>
    <url>/2023/12/13/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="pytorch项目经验"><a class="markdownIt-Anchor" href="#pytorch项目经验"></a> Pytorch项目经验</h1><h2 id="一些通用目录结构"><a class="markdownIt-Anchor" href="#一些通用目录结构"></a> 一些通用目录结构：</h2><ul><li><p><code>utils</code> 目录：（<strong>utility functions</strong>）一般存放通用的文件，工具，例如 <a href="http://gpu.py">gpu.py</a>，<a href="http://dataset.py">dataset.py</a>，<a href="http://tools.py">tools.py</a></p></li><li><p><code>tools</code> 目录：：类似 utils 目录，也存放辅助工具或组件，相较于 utils 工具更具针对性</p></li><li><p><code>config</code> 目录：存放配置文件，**当训练需要设置的参数很多时，要习惯通过文件导入参数。**此时参数文件就可以存放在 config 目录中</p></li><li><p><code>local_config</code> 目录：<strong>存放个人配置文件</strong>，用于客制化配置信息</p></li><li><p><code>weight/pretrained</code> 目录：存放模型训练文件，训练好的模型参数等数据就保存在这个文件夹</p></li><li><p><code>model</code> 目录：存放网络设计文件，例如将网络划分为特征提取，特征融合，预测等几个部分，这写部分就可以在 model 目录下再新建目录存放，例如 <code>neck backbone head</code></p></li><li><p><code>data</code> 目录：顾名思义存放训练数据，注意数据存放条理，不同数据分为几个文件夹下保存</p></li><li><p><code>eval/evaluation</code> 目录：用于存放评估模型的各种指标的程序，例如评估模型的 AP 指标等</p></li><li><p><code>demo</code> 目录：用于进行 inference（推理）操作，使用预训练好的模型进行前向传播</p></li><li><p>最外面一般放置总的程序入口文件，通过这个入口逐级网上查看代码可以迅速理解整个项目的结果</p></li><li><p>如果一个文件夹内程序需要调用另外一个同级或上级文件夹内的程序时，可以使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br>sys.path.append(<span class="hljs-string">&quot;..&quot;</span>)<br><span class="hljs-keyword">import</span> config.YOLO_config.py <span class="hljs-keyword">as</span> cfg<br></code></pre></td></tr></table></figure></li></ul><h2 id="一些特殊的目录和文件"><a class="markdownIt-Anchor" href="#一些特殊的目录和文件"></a> 一些特殊的目录和文件：</h2><h2 id="pycharm上传服务器训练"><a class="markdownIt-Anchor" href="#pycharm上传服务器训练"></a> Pycharm上传服务器训练</h2><ul><li>配置项目解释器时，在设置里面选择添加解释器–SSH–现有的解释器，<strong>不要随便选择创建虚拟解释器！选择本地解释器</strong></li><li>数据集较大的时候，将数据集压缩再上传（<strong>这时候不要选择自动同步本地与服务器了</strong>），传递完成之后本地甚至不需要数据集</li><li>想要上传或者下载目标文件夹或者文件时，只需要在左侧的目录树中对着相应的文件或文件夹右键，选择部署再选择上传还是下载即可</li><li>在 Tools 中选择部署–浏览远程主机可以对远程服务器文件进行操作（或者在右侧工具栏中直接有一个选项是“远程主机”），选择对应的文件右键可以选择上传或者下载相应的文件，也可以直接操作远程服务器文件，例如将一个文件复制到另一个路径（<strong>右键点击的是哪个路径目录，而不是在那个路径里面点击</strong>）</li></ul>]]></content>
    
    
    <categories>
      
      <category>deep learnin</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yolo</title>
    <link href="/2023/12/13/yolo/"/>
    <url>/2023/12/13/yolo/</url>
    
    <content type="html"><![CDATA[<h1 id="yolo网络"><a class="markdownIt-Anchor" href="#yolo网络"></a> YOLO网络</h1><h2 id="yolov3"><a class="markdownIt-Anchor" href="#yolov3"></a> YOLOV3：</h2>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>networks</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>einops</title>
    <link href="/2023/12/10/einops/"/>
    <url>/2023/12/10/einops/</url>
    
    <content type="html"><![CDATA[<h1 id="einops-和-einsum-的使用einops"><a class="markdownIt-Anchor" href="#einops-和-einsum-的使用einops"></a> <code>einops</code> 和 <code>einsum</code> 的使用——einops</h1><p>​einops 库操作可以替代全部的张量形状变换操作，注：类似于 Pytorch 中 <code>torch.nn</code> 和 <code>torch.nn.function</code> 的关系，如果像把 <code>rearrange</code> 操作放在 <code>__init__</code> 中就规定，可以使用 <code>einops.layers.torch</code> 模块中的 <code>Rearrange</code> 函数</p><h2 id="einopsrearrange"><a class="markdownIt-Anchor" href="#einopsrearrange"></a> einops.rearrange</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ims = numpy.load(<span class="hljs-string">&#x27;./test_images.npy&#x27;</span>, allow_pickle=<span class="hljs-literal">False</span>)<br><span class="hljs-comment"># ims中有六张图片，分别为einops的RGB图像</span><br></code></pre></td></tr></table></figure><p>ims 张量的形状为 (6, 96, 96, 3)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.imshow(ims[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/1.png" alt="png"></p><p>下面使用einops表示操作过程</p><h3 id="矩阵转置"><a class="markdownIt-Anchor" href="#矩阵转置"></a> 矩阵转置：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> einops <span class="hljs-keyword">import</span> rearrange, reduce, repeat<br>img=rearrange(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; w h c&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/2.png" alt="png"><br>​</p><h2 id="将维度融合操作"><a class="markdownIt-Anchor" href="#将维度融合操作"></a> 将维度融合操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># [6, 96, 96, 3] -&gt; [96, (6 * 96), 3]</span><br>rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; h (b w) c&#x27;</span>).shape<br></code></pre></td></tr></table></figure><p>融合之后的大小为 (96, 576, 3) ，这里 b,w 的顺序很重要，后面进行解释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># rearrange 不仅仅可以只对一维进行融合操作</span><br>rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; (b h w c)&#x27;</span>).shape<br></code></pre></td></tr></table></figure><h3 id="维度拆分操作"><a class="markdownIt-Anchor" href="#维度拆分操作"></a> 维度拆分操作</h3><p>​<strong>我们将源文件的后三维压缩，视为一张张图片个体，图片在平面中的排列（位置关系）代表着第一维的信息</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 下面操作使将图片的第一维拆分</span><br>rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; b1 b2 h w c &#x27;</span>, b1=<span class="hljs-number">2</span>).shape<br>(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">96</span>, <span class="hljs-number">96</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><h4 id="将文件的第一维拆分并融入到-h-和-w-维中"><a class="markdownIt-Anchor" href="#将文件的第一维拆分并融入到-h-和-w-维中"></a> 将文件的第一维拆分并融入到 h 和 w 维中</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b1 h) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/3.png" alt="png"><br>​</p><p>​<strong>注意这里b1 b2的位置和对应关系很重要，类似于我们的数字表示法，（b1, b2）代表着是在第一维中，每b1个小图片为一个小batch，这些小batch总共会有b2个，那么在上面的例子中，由于顺序是 einops 每三个分组就是 ein 和 ops，再将它们嵌入高宽里面，（b1, h）同样代表着小batch是 h，总共有2个小batch，因此竖着看会有两张图片（把b1嵌入到 h 的维度中去了）；同理（b2， w）的情况</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这种分割方式就是两个图片为一个小batch（哪个b1 b2方向在后面就从哪个嵌入的维度开始排）</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b2 b1) h w c -&gt; (b1 h) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/4.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 同理将b2 b1在后方交换的情况</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b2 h) (b1 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/5.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这里在输出中将h放在b1的前面，那么可以看做每张图像的像素每一行互相嵌入 </span><br>img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (h b1) (b2 w) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/6.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 一个稍微特殊的情况，将图片的宽嵌入到了高里面，相当于把图像拉伸</span><br>img =rearrange(ims, <span class="hljs-string">&#x27;b h (w w2) c -&gt; (h w2) (b w) c&#x27;</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/7.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># w2位于w前，一列共有两个图像（把一个图像密切再重排，这里两个图片只是看起来像，它们拼起来才是原图片）</span><br>img =rearrange(ims, <span class="hljs-string">&#x27;b h (w w2) c -&gt; (w2 h) (b w) c&#x27;</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/8.png" alt="png"><br>​</p><h2 id="einopsreduce"><a class="markdownIt-Anchor" href="#einopsreduce"></a> einops.reduce</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 在原np操作中，若要对最后一位进行求平均操作要使用x.mean(-1)</span><br><span class="hljs-comment"># 可以代替为</span><br>reduce(x, <span class="hljs-string">&#x27;b h w c -&gt; b h w&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># average over batch</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; h w c&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>)<br><span class="hljs-comment"># ims.mean(axis=0)</span><br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/9.png" alt="png"><br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 还同时对两个维度进行降维：</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; h w&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/10.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 甚至可以通过reduce函数进行平均值池化（可以看出reduce里面内置了rearrange函数）</span><br>img = reduce(ims, <span class="hljs-string">&#x27;b (h h2) (w w2) c -&gt; h (b w) c&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>, h2=<span class="hljs-number">2</span>, w2=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/11.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 压缩通道的例子</span><br>img = reduce(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (b2 h) (b1 w)&#x27;</span>, <span class="hljs-string">&#x27;mean&#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/12.png" alt="png"></p><h2 id="添加或者缩减维度"><a class="markdownIt-Anchor" href="#添加或者缩减维度"></a> 添加或者缩减维度</h2><p>​类似于<code>unsqueeze()</code>操作，在目标张量的某一维中添加维度，可以使用1或者（）来进行操作，<strong>( ) 表示在新的维度上不显式指明大小</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = rearrange(ims, <span class="hljs-string">&#x27;b h w c -&gt; b 1 h w 1 c&#x27;</span>) <span class="hljs-comment"># functionality of numpy.expand_dims</span><br><span class="hljs-built_in">print</span>(x.shape)<br><span class="hljs-built_in">print</span>(rearrange(x, <span class="hljs-string">&#x27;b 1 h w 1 c -&gt; b h w c&#x27;</span>).shape) <span class="hljs-comment"># functionality of numpy.squeeze</span><br></code></pre></td></tr></table></figure><pre><code class="hljs">(6, 1, 96, 96, 1, 3)(6, 96, 96, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 先将每张图片最大像素值显现出来，让后转化回去，将其余像素填0 </span><br>x = reduce(ims, <span class="hljs-string">&#x27;b h w c -&gt; b () () c&#x27;</span>, <span class="hljs-string">&#x27;max&#x27;</span>) - ims<br><span class="hljs-comment"># 上面的一步没有将维度降下去！！！因为后面与ims进行了计算</span><br><span class="hljs-comment"># x = reduce(ims, &#x27;b h w c -&gt; b () () c&#x27;, &#x27;max&#x27;) 维度变为(6,1,1,3)</span><br><span class="hljs-comment"># x = x - ims 维度变为(6,96,96,3)利用了广播操作</span><br>img = rearrange(x, <span class="hljs-string">&#x27;b h w c -&gt; h (b w) c&#x27;</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/13.png" alt="png"></p><h2 id="repeating-elements"><a class="markdownIt-Anchor" href="#repeating-elements"></a> Repeating elements</h2><p>​<code>repeat</code> 用于在某个维度上重复，感觉和 <code>np.repeat</code> 差得不多，没有前面的好用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># repeat along a new axis. New axis can be placed anywhere</span><br>repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h new_axis w c&#x27;</span>, new_axis=<span class="hljs-number">5</span>).shape<br>(<span class="hljs-number">96</span>, <span class="hljs-number">5</span>, <span class="hljs-number">96</span>, <span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># shortcut</span><br>repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h 5 w c&#x27;</span>).shape<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 同样的repeat中内置了rearrange函数，下面的用法和rearrange一样</span><br>img = repeat(ims[<span class="hljs-number">0</span>], <span class="hljs-string">&#x27;h w c -&gt; h (w repeat) c&#x27;</span>, repeat=<span class="hljs-number">3</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/14.png" alt="png"></p><h2 id="reduce-repeat"><a class="markdownIt-Anchor" href="#reduce-repeat"></a> Reduce ⇆ repeat</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">repeated = repeat(ims, <span class="hljs-string">&#x27;b h w c -&gt; b h new_axis w c&#x27;</span>, new_axis=<span class="hljs-number">2</span>)<br>reduced = reduce(repeated, <span class="hljs-string">&#x27;b h new_axis w c -&gt; b h w c&#x27;</span>, <span class="hljs-string">&#x27;min&#x27;</span>)<br><span class="hljs-keyword">assert</span> numpy.array_equal(ims, reduced)<br></code></pre></td></tr></table></figure><h2 id="帮助理解的例子"><a class="markdownIt-Anchor" href="#帮助理解的例子"></a> 帮助理解的例子</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">img = rearrange(ims, <span class="hljs-string">&#x27;(b1 b2) h w c -&gt; (h b1) (w b2) c &#x27;</span>, b1=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/15.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 一个复杂的例子：</span><br>img = rearrange(ims, <span class="hljs-string">&#x27;b (h1 h2 h3) (w1 w2 w3) c -&gt; (h1 w2 h3) (b w1 h2 w3) c&#x27;</span>, h2=<span class="hljs-number">2</span>, w2=<span class="hljs-number">2</span>, w3=<span class="hljs-number">2</span>, h3=<span class="hljs-number">2</span>)<br>plt.imshow(img)<br></code></pre></td></tr></table></figure><p><img src="/2023/12/10/einops/16.png" alt="png"><br>​</p><h1 id="summary"><a class="markdownIt-Anchor" href="#summary"></a> Summary</h1><ul><li><code>rearrange</code> doesn’t change number of elements and covers different numpy functions (like <code>transpose</code>, <code>reshape</code>, <code>stack</code>, <code>concatenate</code>,  <code>squeeze</code> and <code>expand_dims</code>)</li><li><code>reduce</code> combines same reordering syntax with reductions (<code>mean</code>, <code>min</code>, <code>max</code>, <code>sum</code>, <code>prod</code>, and any others)</li><li><code>repeat</code> additionally covers repeating and tiling</li><li>composition and decomposition of axes are a corner stone, they can and should be used together</li></ul>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>einsum</title>
    <link href="/2023/12/10/einsum/"/>
    <url>/2023/12/10/einsum/</url>
    
    <content type="html"><![CDATA[<h1 id="einops-和-einsum-的使用einsum"><a class="markdownIt-Anchor" href="#einops-和-einsum-的使用einsum"></a> <code>einops</code> 和 <code>einsum</code> 的使用——einsum</h1><p>einsum是一个强大的执行爱因斯坦求和约定的函数，他几乎可以进行张量的所有运算，加上改变张量形状的einops库，它们可以使代码更加易读。它们的主要区别如下：</p><ol><li><strong>表达能力：</strong><ul><li><code>einops</code> 提供了更广泛的张量操作，包括但不限于求和。它可以用于重排、合并、拆分等各种操作，使得代码更具灵活性</li><li><code>einsum</code> 主要用于执行张量的求和操作，虽然可以通过合适的字符串表示式执行其他操作，但相对而言，其表达能力不如 <code>einops</code> 多样</li></ul></li><li><strong>直观性：</strong><ul><li><code>einops</code> 的语法更加直观，它使用一些关键词来描述张量操作，使得代码更易读。</li><li><code>einsum</code> 使用字符串表示式，这种表示方式相对于<code>einops</code>比较难懂</li></ul></li><li><strong>性能：</strong><ul><li>在一些情况下，<code>einops</code> 可能在性能上稍逊于 <code>einsum</code>。<code>einsum</code> 的实现经过了高度优化，特别是在使用NumPy等库时，它可以通过C语言加速执行，因此在某些情况下可能更快</li></ul></li><li><strong>使用场景：</strong><ul><li><code>einops</code> 更适合需要进行各种复杂张量操作的情况，特别是需要频繁改变张量形状的情况</li><li><code>einsum</code> 更适合执行相对简单的张量求和操作，尤其是对于数学上常见的张量运算。</li></ul></li></ol><h2 id="einsum的用法"><a class="markdownIt-Anchor" href="#einsum的用法"></a> <code>einsum</code>的用法：</h2><p>einsum实现矩阵乘法的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.rand(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>b = torch.rand(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br>c = torch.einsum(<span class="hljs-string">&quot;ik,kj-&gt;ij&quot;</span>, [a, b])<br><span class="hljs-comment"># 等价操作 torch.mm(a, b)</span><br></code></pre></td></tr></table></figure><p>einsum 的第一个参数 “ik,kj-&gt;ij”，该字符串（下文以 equation 表示）表示了输入和输出张量的维度。equation 中的箭头左边表示输入张量，以逗号分割每个输入张量，箭头右边则表示输出张量。<strong>表示维度的字符只能是26个英文字母 ‘a’ - ‘z’</strong>。</p><p>而 einsum 的第二个参数表示实际的输入张量列表，其数量要与 equation 中的输入数量对应。同时对应每个张量的 子 equation 的字符个数要与张量的真实维度对应，比如 “ik,kj-&gt;ij” 表示输入和输出张量都是两维的。</p><h3 id="基本规则"><a class="markdownIt-Anchor" href="#基本规则"></a> 基本规则：</h3><ul><li>规则一，equation 箭头左边，在不同输入之间重复出现的索引表示，把输入张量沿着该维度做乘法操作，以上面矩阵乘法为例， “ik,kj-&gt;ij”，k 在输入中重复出现，所以就是把 a 和 b 沿着 k 这个维度作相乘操作</li><li>规则二，只出现在 equation 箭头左边的索引，表示中间计算结果需要在这个维度上求和，也就是上面提到的求和索引</li><li>规则三，equation 箭头右边的索引顺序可以是任意的，比如上面的 “ik,kj-&gt;ij” 如果写成 “ik,kj-&gt;ji”，那么就是<strong>返回输出结果的转置</strong>，用户只需要定义好索引的顺序，转置操作会在 einsum 内部完成</li></ul><h3 id="特殊规则"><a class="markdownIt-Anchor" href="#特殊规则"></a> <strong>特殊规则</strong></h3><p>特殊规则有两条：</p><ul><li>equation <strong>可以不写包括箭头在内的右边部分（不推荐）</strong>，那么在这种情况下，输出张量的维度会根据默认规则推导。就是把输入中只出现一次的索引取出来，然后按字母表顺序排列，比如上面的矩阵乘法 “ik,kj-&gt;ij” 也可以简化为 “ik,kj”，根据默认规则，输出就是 “ij” 与原来一样；</li><li>equation 中支持 “…” <strong>省略号（不推荐），用于表示并不关心的索引</strong>，比如只对一个高维张量的最后两维做转置可以这么写：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>)<br><span class="hljs-comment"># i = 7, j = 9</span><br>b = torch.einsum(<span class="hljs-string">&#x27;...ij-&gt;...ji&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="矩阵转置"><a class="markdownIt-Anchor" href="#矩阵转置"></a> 矩阵转置：</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol B_{ji} = \boldsymbol A_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij-&gt;ji&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="求和"><a class="markdownIt-Anchor" href="#求和"></a> 求和</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>j</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">b=\sum_i \sum_j \boldsymbol A_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.463782em;vertical-align:-1.413777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8723309999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.413777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij-&gt;&#x27;</span>, [a])<br></code></pre></td></tr></table></figure><h4 id="点积"><a class="markdownIt-Anchor" href="#点积"></a> 点积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>a</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c=\sum_i a_ib_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.327674em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">3</span>, <span class="hljs-number">6</span>)<br>torch.einsum(<span class="hljs-string">&#x27;i,i-&gt;&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="hardmard积"><a class="markdownIt-Anchor" href="#hardmard积"></a> Hardmard积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ij}= \boldsymbol A_{ij} \boldsymbol B_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">6</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">6</span>, <span class="hljs-number">12</span>).reshape(<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ij,ij-&gt;ij&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="外积"><a class="markdownIt-Anchor" href="#外积"></a> 外积</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="bold-italic">a</mi><mi>i</mi></msub><msub><mi mathvariant="bold-italic">b</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ij} = \boldsymbol a_i \boldsymbol b_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol">b</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.arrange(<span class="hljs-number">3</span>)<br>b = torch.arrange(<span class="hljs-number">3</span>, <span class="hljs-number">7</span>)<br>torch.einsum(<span class="hljs-string">&#x27;i,j-&gt;ij&#x27;</span>, [a, b])<br></code></pre></td></tr></table></figure><h4 id="batch矩阵相乘"><a class="markdownIt-Anchor" href="#batch矩阵相乘"></a> <strong>batch矩阵相乘</strong></h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>i</mi><mi>j</mi><mi>l</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>k</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{ijl} = \sum_k \boldsymbol A_{ijk}A_{ikl}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3521180000000004em;vertical-align:-1.3021129999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">a = torch.randn(3,2,5)<br>b = torch.randn(3,5,3)<br>torch.einsum(&#x27;ijk,ikl-&gt;ijl&#x27;, [a, b])<br></code></pre></td></tr></table></figure><h4 id="张量缩约上面例子的一般版本"><a class="markdownIt-Anchor" href="#张量缩约上面例子的一般版本"></a> 张量缩约（上面例子的一般版本）</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">C</mi><mrow><mi>p</mi><mi>s</mi><mi>t</mi><mi>u</mi><mi>v</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>q</mi></munder><munder><mo>∑</mo><mi>r</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>p</mi><mi>q</mi><mi>r</mi><mi>s</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>t</mi><mi>u</mi><mi>q</mi><mi>v</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol C_{pstuv} = \sum_q \sum_r \boldsymbol A_{pqrs} \boldsymbol B_{tuqvr}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.06979em;">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4361180000000004em;vertical-align:-1.386113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.386113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8999949999999999em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>注意：在相乘维度上元素个数一定要相同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>)<br>b = torch.randn(<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">3</span>,<span class="hljs-number">17</span>,<span class="hljs-number">5</span>)<br>torch.einsum(<span class="hljs-string">&#x27;pqrs,tuqvr-&gt;pstuv&#x27;</span>, [a, b]).shape<br>torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">17</span>])<br></code></pre></td></tr></table></figure><h4 id="双线性变换einsum可用于超过两个张量的计算"><a class="markdownIt-Anchor" href="#双线性变换einsum可用于超过两个张量的计算"></a> <strong>双线性变换</strong>(einsum可用于超过两个张量的计算)</h4><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold-italic">D</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><munder><mo>∑</mo><mi>l</mi></munder><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi mathvariant="bold-italic">B</mi><mrow><mi>j</mi><mi>k</mi><mi>l</mi></mrow></msub><msub><mi mathvariant="bold-italic">A</mi><mrow><mi>i</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\boldsymbol D_{ij} = \sum_k \sum_l \boldsymbol A_{ik} \boldsymbol B_{jkl} \boldsymbol A_{il}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.972218em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">D</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3521180000000004em;vertical-align:-1.3021129999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000005em;"><span style="top:-1.847887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021129999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>b = torch.randn(<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>)<br>c = torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">7</span>)<br>torch.einsum(<span class="hljs-string">&#x27;ik,jkl,il-&gt;ij&#x27;</span>, [a, b, c])<br></code></pre></td></tr></table></figure><h2 id="案例"><a class="markdownIt-Anchor" href="#案例"></a> 案例</h2><p><img src="/2023/12/10/einsum/1.png" alt="img"></p><p>用传统写法实现这些可要费不少力气，特别是考虑batch实现。einsum是我们的救星！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 参数</span><br><span class="hljs-comment"># -- [隐藏层维度]</span><br>bM, br, w = random_tensors([<span class="hljs-number">7</span>], num=<span class="hljs-number">3</span>, requires_grad=<span class="hljs-literal">True</span>)<br><span class="hljs-comment"># -- [隐藏层维度 x 隐藏层维度]</span><br>WY, Wh, Wr, Wt = random_tensors([<span class="hljs-number">7</span>, <span class="hljs-number">7</span>], num=<span class="hljs-number">4</span>, requires_grad=<span class="hljs-literal">True</span>)<br><br><span class="hljs-comment"># 注意力机制的单次应用</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attention</span>(<span class="hljs-params">Y, ht, rt1</span>):<br>    <span class="hljs-comment"># [i为batch大小]</span><br>    tmp = torch.einsum(<span class="hljs-string">&quot;ik,kl-&gt;il&quot;</span>, [ht, Wh]) + torch.einsum(<span class="hljs-string">&quot;ik,kl-&gt;il&quot;</span>, [rt1, Wr])<br>    Mt = F.tanh(torch.einsum(<span class="hljs-string">&quot;ijk,kl-&gt;ijl&quot;</span>, [Y, WY]) + tmp.unsqueeze(<span class="hljs-number">1</span>).expand_as(Y) + bM)<br>    <span class="hljs-comment"># -- [batch大小 x 序列长度]</span><br>    at = F.softmax(torch.einsum(<span class="hljs-string">&quot;ijk,k-&gt;ij&quot;</span>, [Mt, w]))<br>    <span class="hljs-comment"># -- [batch大小 x 隐藏层维度]</span><br>    rt = torch.einsum(<span class="hljs-string">&quot;ijk,ij-&gt;ik&quot;</span>, [Y, at]) + F.tanh(torch.einsum(<span class="hljs-string">&quot;ij,jk-&gt;ik&quot;</span>, [rt1, Wt]) + br)<br>    <span class="hljs-comment"># -- [batch大小 x 隐藏层维度], [batch大小 x 序列维度]</span><br>    <span class="hljs-keyword">return</span> rt, at<br><br><span class="hljs-comment"># 取样仿造输入</span><br><span class="hljs-comment"># -- [batch大小 x 序列长度 x 隐藏层维度]</span><br>Y = random_tensors([<span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>])<br><span class="hljs-comment"># -- [batch大小 x 隐藏层维度]</span><br>ht, rt1 = random_tensors([<span class="hljs-number">3</span>, <span class="hljs-number">7</span>], num=<span class="hljs-number">2</span>)<br>rt, at = attention(Y, ht, rt1)<br></code></pre></td></tr></table></figure><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>einsum是<strong>一个函数走天下</strong>，用例中可以看到，我们仍然需要在einsum之外应用非线性和构造额外维度。类似地，分割、连接、索引张量仍然需要应用其他库函数（einiops就是很好的选择）。</p><p><strong>使用einsum的麻烦之处是你需要手动实例化参数，操心它们的初始化</strong></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pytorch</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>上采样总结-2023</title>
    <link href="/2023/12/05/%E4%B8%8A%E9%87%87%E6%A0%B7%E6%80%BB%E7%BB%93-2023/"/>
    <url>/2023/12/05/%E4%B8%8A%E9%87%87%E6%A0%B7%E6%80%BB%E7%BB%93-2023/</url>
    
    <content type="html"><![CDATA[<h1 id="上采样工作的总结"><a class="markdownIt-Anchor" href="#上采样工作的总结"></a> 上采样工作的总结</h1><ul><li>CARAFE和IndexNet是最早的上采样工作，它们的创新之处在于将原有的静态上采样过程转变为动态上采样过程.</li><li>A2U是IndexNet的一个发展版本，它将相似度引入了上采样过程中，利用二阶的信息进行上采样过程。CARAFE和IndexNet&amp;A2U的区别在FADE这篇论文中总结，IndexNet&amp;A2U使用的是下采样之前的特征图生成动态核，而CARAFE使用的是下采样之后的特征图生成动态核，一般而言，下采样后的特征图包含的语义信息比下采样前丰富，但细节信息不如下采样前，这就是为什么CARAFE在语义分割方面优于IndexNet和A2U而在图像抠图上表现不如它们两个。</li><li>FADE就利用了这一点（<strong>FADE正是通过实验的这种现象发现并提出的</strong>），将上采样前后的特征图信息同时使用起来进行上采样过程，实现了在抠图和语义分割任务上的通用性。</li><li>SAPA是FADE的进一步发展，类似于A2U和IndexNet的关系，SAPA将相似性引入了FADE进行上采样。</li><li>dysample改变了以前工作生成动态卷积核的视角，将动态卷积核理解为就是点采样过程，权值不同说明的采样点偏向不同，基于这个视角dysample放弃了生成动态卷积核（这正是他极轻量级的原因），转而生成动态采样点坐标，同时与双线性插值联系在一起生成上采样图（<strong>这并不是静态采样，他也是动态的</strong>）。</li></ul>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dysample</title>
    <link href="/2023/12/04/dysample/"/>
    <url>/2023/12/04/dysample/</url>
    
    <content type="html"><![CDATA[<h1 id="learning-to-sample"><a class="markdownIt-Anchor" href="#learning-to-sample"></a> Learning to sample</h1><p>​本文提出了一种新的极轻量级的高效采样算子（比前面所有的都更好，而且是在几乎各个任务中），主要是基于pytorch中grid_sample函数提出。FADE 和 SAPA 对高分辨率图像的需求在一定程度上限制了它们的应用领域，本文避开了动态卷积过程。dysample不需要原始高分辨率的feature map。</p><h2 id="提出并优化dysample"><a class="markdownIt-Anchor" href="#提出并优化dysample"></a> 提出并优化dysample</h2><p>​设feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>H</mi><mn>1</mn></msub><mo>×</mo><msub><mi>W</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X} \in \mathbb{R}^{C \times H_1 \times W_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，采样集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">S</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mn>2</mn><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{S} \in \mathbb{R}^{2 \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，一维的2表示 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 两个坐标，设上采样率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>，朴素采样过程为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="script" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>g</mi><mi>r</mi><mi>i</mi><mi>d</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mo stretchy="false">(</mo><mrow><mi mathvariant="script">X</mi><mo separator="true">,</mo><mi mathvariant="script">S</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{X&#x27;}=grid\_sample(\mathcal{X,S})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="script" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X&#x27;} \in \mathbb{R}^{C \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.790992em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，dysample的想法是引入一个输入和输出分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 的线性层生成偏移量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo>∈</mo><msup><mi mathvariant="script">R</mi><mrow><mn>2</mn><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><msub><mi>H</mi><mn>2</mn></msub><mo>×</mo><msub><mi>W</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{O} \in \mathcal{R}^{2s^2 \times H_2 \times W_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.08125em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，每个采样点由”对应点 + 偏移量“的方式决定上采样图中每个点在采样前图中的坐标，使用<code>F.grid_sample</code>函数，将采样集修改为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">S</mi><mo>=</mo><mi mathvariant="script">O</mi><mo>+</mo><mi mathvariant="script">G</mi><mspace linebreak="newline"></mspace><mi mathvariant="script">O</mi><mo>=</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{S}=\mathcal{O}+\mathcal{G} \\\mathcal{O}=linear(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">S</mi></mrow><annotation encoding="application/x-tex">\mathcal{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span></span></span></span></span> 为采样集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> 为偏移量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> 为采样对应点，由下面代码生成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">torch.stack(torch.meshgrid([coords_w, coords_h])).transpose(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>至此就是 dysample 的雏形，下面我们一步步改进 dysample：</p><h3 id="修改initial-sampling-position"><a class="markdownIt-Anchor" href="#修改initial-sampling-position"></a> 修改initial sampling position</h3><p>​由于上采样前后 feature map 大小的差异，上采样后的特征图中有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点对应采样前的同一个点，这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点的初始坐标都相同，这样就导致了这些点不会区分开来，本质上就是 NN 采样加上了一个偏移量，于是作者将这些点的 initial sampling position 都加上了对应位置的偏离，对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">s=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 的情况，这些点的横纵坐标都分别加上了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo><mn>0.25</mn></mrow><annotation encoding="application/x-tex">\pm 0.25</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span></span>，过程如图所示：</p><p><img src="/2023/12/04/dysample/3.png" alt="修改initial sampling position"></p><h3 id="考虑邻域信息"><a class="markdownIt-Anchor" href="#考虑邻域信息"></a> 考虑邻域信息：</h3><p>​在dysample中，如果使用 NN 插值上采样，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mathcal{O}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时那么整个采样过程就等价于NN采样，没有考虑到邻域信息，我们将<code>F.grid_sample </code>函数中的 mode 调为 bilinear，这样就能考虑邻域信息</p><h3 id="限制偏移量范围"><a class="markdownIt-Anchor" href="#限制偏移量范围"></a> 限制偏移量范围：</h3><p>​偏移量过大会导致靠近边界处原有语义簇内的点采样到其它语义簇的情况，这样就会导致边界混乱，因此我们要限制偏移量的范围，使用：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0.25</mn><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}=0.25linear(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p>的方式限定了边界范围，<strong>注意：如果使用tanh函数严格控制边界范围反而会导致效果变差，作者在文中给出的解释是太过于严格的边界会限制采样效果，因此在后面中提出了动态边界</strong></p><p><img src="/2023/12/04/dysample/1.png" alt="偏移量过大的后果"></p><h3 id="减少参数量"><a class="markdownIt-Anchor" href="#减少参数量"></a> 减少参数量：</h3><p>​类似于在 <code>nn.Conv2d</code> 中的group操作，我们可以将通道分为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个 group，这些 group 内共享参数，作者在文中经验性地说明了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">g=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span> <strong>是一种较好的选择</strong></p><h3 id="设置动态范围"><a class="markdownIt-Anchor" href="#设置动态范围"></a> 设置动态范围：</h3><p>​将偏移量的范围设置为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>0.5</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,0.5]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">]</span></span></span></span> 并以 0.25 为他们的平均值，则偏移量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi></mrow><annotation encoding="application/x-tex">\mathcal{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span></span></span></span> 可继续改写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">O</mi><mo>=</mo><mn>0.5</mn><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy="false">(</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>×</mo><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}=0.5sigmoid(linear_1(\mathcal{X})) \times linear_2(\mathcal{X})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.02778em;">O</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span></span></span></span></span></p><p><img src="/2023/12/04/dysample/2.png" alt="Sample"></p><h3 id="使用pl继续减少参数量"><a class="markdownIt-Anchor" href="#使用pl继续减少参数量"></a> 使用PL继续减少参数量</h3><p>​在上面的讨论中，对于每个共享参数的group，我们先使用了CNN生成了大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">s^2 \times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 大小的偏移量张量，再将其形状变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>H</mi><mo>×</mo><mi>s</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">sH \times sW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 接得到了符合上采样后大小的偏移量，<strong>这个过程称为 “linear + pixelshuffle”（LP）</strong>，<strong>为了减少训练的参数量，我们可以考虑减少通道维数</strong>，先进行形状变换操作，即将每个 group <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C \times H \times W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> 大小的 feature map 形状变换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>C</mi><msup><mi>s</mi><mn>2</mn></msup></mfrac><mo>×</mo><mi>s</mi><mi>H</mi><mo>×</mo><mi>s</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">\frac {C}{s^2} \times sH \times sW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span> ，再直接通过CNN生成符合上采样后大小形状的偏移量，这个过程称为 <strong>“pixelshuffle + linear” （PL）</strong>，这样通过减少通道数的方式，我们减少了训练参数量</p><p>至此，dysample算子可分为以下四类：</p><ul><li>DySample: LP-style with the static scope factor</li><li>DySample+: LP-style with the dynamic scope factor</li><li>DySample-S: PL-style with the static scope factor</li><li>DySample-S+: PL-style with dynamic scope factor</li></ul><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br>torch.manual_seed(<span class="hljs-number">0</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">normal_init</span>(<span class="hljs-params">module, mean=<span class="hljs-number">0</span>, std=<span class="hljs-number">1</span>, bias=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;weight&#x27;</span>) <span class="hljs-keyword">and</span> module.weight <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.normal_(module.weight, mean, std)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;bias&#x27;</span>) <span class="hljs-keyword">and</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.bias, bias)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">constant_init</span>(<span class="hljs-params">module, val, bias=<span class="hljs-number">0</span></span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;weight&#x27;</span>) <span class="hljs-keyword">and</span> module.weight <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.weight, val)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">hasattr</span>(module, <span class="hljs-string">&#x27;bias&#x27;</span>) <span class="hljs-keyword">and</span> module.bias <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        nn.init.constant_(module.bias, bias)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DySample</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, style=<span class="hljs-string">&#x27;lp&#x27;</span>, ratio=<span class="hljs-number">2</span>, groups=<span class="hljs-number">4</span>, dySample=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-built_in">super</span>(DySample, self).__init__()<br>        self.ratio =ratio<br>        self.style = style<br>        self.groups = groups<br>        self.dySample = dySample<br>        <span class="hljs-keyword">assert</span> style <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;lp&#x27;</span>, <span class="hljs-string">&#x27;pl&#x27;</span>]<br>        <span class="hljs-keyword">assert</span> c_in % groups == <span class="hljs-number">0</span><br><br>        <span class="hljs-comment"># upsampling 是分为 linear+pixel-shuffle 和 pixel-shuffle+linear</span><br>        <span class="hljs-comment"># downsampling 分为 linear+pixel-unshuffle 和 pixel-unshuffle</span><br>        <span class="hljs-comment"># if ratio &gt; 1:</span><br>        <span class="hljs-keyword">if</span> style == <span class="hljs-string">&#x27;lp&#x27;</span>:<br>            c_out = <span class="hljs-built_in">int</span>(<span class="hljs-number">2</span> * groups * ratio**<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">assert</span> c_in &gt;= groups * ratio**<span class="hljs-number">2</span><br>            c_out = <span class="hljs-number">2</span> * groups<br>            c_in = <span class="hljs-built_in">int</span>(c_in // ratio**<span class="hljs-number">2</span>)<br>        <br>        <br>        <span class="hljs-keyword">if</span> dySample:<br>            self.scope = nn.Conv2d(c_in, c_out, kernel_size=<span class="hljs-number">1</span>)<br>            constant_init(self.scope, val=<span class="hljs-number">0.</span>)<br><br>        self.offset = nn.Conv2d(c_in, c_out, kernel_size=<span class="hljs-number">1</span>)<br>        normal_init(self.offset, std=<span class="hljs-number">0.001</span>)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Sample</span>(<span class="hljs-params">self, x, offset</span>):<br>        _, _, h, w = offset.size()<br>        x = einops.rearrange(x, <span class="hljs-string">&#x27;b (c grp) h w -&gt; (b grp) c h w&#x27;</span>, grp=self.groups)<br>        offset = einops.rearrange(offset, <span class="hljs-string">&#x27;b (grp two) h w -&gt; (b grp) h w two&#x27;</span>,<br>                                  two=<span class="hljs-number">2</span>, grp=self.groups)<br>        normalizer = torch.tensor([w, h], dtype=x.dtype, device=x.device).view(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)<br>        <br>        <span class="hljs-comment"># offset = torch.zeros_like(offset)</span><br><br>        h = torch.linspace(<span class="hljs-number">0.5</span>, h - <span class="hljs-number">0.5</span>, h)<br>        w = torch.linspace(<span class="hljs-number">0.5</span>, w - <span class="hljs-number">0.5</span>, w)<br>        pos = torch.stack(torch.meshgrid(w, h, indexing=<span class="hljs-string">&#x27;xy&#x27;</span>)).to(x.device)<br>        pos = einops.rearrange(pos, <span class="hljs-string">&#x27;two h w -&gt; 1 h w two&#x27;</span>)<br>        pos = <span class="hljs-number">2</span> * (pos + offset) / normalizer - <span class="hljs-number">1</span><br><br><br>        out = F.grid_sample(x, offset + pos, align_corners=<span class="hljs-literal">False</span>, mode=<span class="hljs-string">&#x27;bilinear&#x27;</span>, padding_mode=<span class="hljs-string">&quot;border&quot;</span>)<br>        out = einops.rearrange(out, <span class="hljs-string">&#x27;(b grp) c h w -&gt; b (c grp) h w&#x27;</span>, grp=self.groups)<br>        <span class="hljs-keyword">return</span> out<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_lp</span>(<span class="hljs-params">self, x</span>):<br>        offset = self.offset(x)<br>        <span class="hljs-keyword">if</span> self.dySample:<br>            offset = F.sigmoid(self.scope(x)) * <span class="hljs-number">0.5</span> * offset<br>        <span class="hljs-keyword">else</span>:<br>            offset = <span class="hljs-number">0.25</span> * offset<br>        <span class="hljs-keyword">if</span> self.ratio &gt; <span class="hljs-number">1</span>:<br>            offset = F.pixel_shuffle(offset, upscale_factor=self.ratio)<br>        <span class="hljs-keyword">else</span>:<br>            offset = F.pixel_unshuffle(offset, downscale_factor=<span class="hljs-built_in">int</span>(<span class="hljs-number">1</span>/self.ratio))<br>        <span class="hljs-keyword">return</span> self.Sample(x, offset)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward_pl</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">if</span> self.ratio &gt; <span class="hljs-number">1</span>:<br>            y = F.pixel_shuffle(x, upscale_factor=self.ratio)<br>        <span class="hljs-keyword">else</span>:<br>            y = F.pixel_unshuffle(x, downscale_factor=<span class="hljs-built_in">int</span>(<span class="hljs-number">1</span>/self.ratio))<br>        offset = self.offset(y)<br>        <span class="hljs-keyword">if</span> self.dySample:<br>            offset = F.sigmoid(self.scope(y)) * <span class="hljs-number">0.5</span> * offset<br>        <span class="hljs-keyword">else</span>:<br>            offset = <span class="hljs-number">0.25</span> * offset<br>        <span class="hljs-keyword">return</span> self.Sample(x, offset)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        <span class="hljs-keyword">if</span> self.ratio &lt; <span class="hljs-number">1</span>:<br>            _, _, h, w = x.size()<br>            padh = h % <span class="hljs-number">2</span><br>            padw = w % <span class="hljs-number">2</span><br>            x = F.pad(x, (<span class="hljs-number">0</span>, padw, <span class="hljs-number">0</span>, padh), mode=<span class="hljs-string">&#x27;replicate&#x27;</span>)<br>        <span class="hljs-keyword">if</span> self.style == <span class="hljs-string">&#x27;lp&#x27;</span>:<br>            <span class="hljs-keyword">return</span> self.forward_lp(x)<br>        <span class="hljs-keyword">return</span> self.forward_pl(x)<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    x = torch.randn(size=(<span class="hljs-number">2</span>, <span class="hljs-number">16</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>))<br>    dy_samp = DySample(<span class="hljs-number">16</span>, style=<span class="hljs-string">&#x27;pl&#x27;</span>, ratio=<span class="hljs-number">0.5</span>)<br>    x = dy_samp(x)<br>    <span class="hljs-built_in">print</span>(x.size())<br></code></pre></td></tr></table></figure><h3 id="代码经验"><a class="markdownIt-Anchor" href="#代码经验"></a> 代码经验：</h3><ul><li><code>F.interpolate</code> 对某一个通道为 c 进行的 feature map 进行分组插值时，将通道上组的维度移动到 batch 维度上，插值完成之后再从 batch 维度上移动回来即可</li><li>对于模型中不变的Tensor，可以使用 <code>register_buffer</code> 将 Tensor 保存到模型中</li><li>使用函数分开各部分的功能提高代码可读性</li></ul><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://arxiv.org/pdf/2308.15085.pdf">Learning to Upsample by Learning to Sample</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SAPA</title>
    <link href="/2023/12/02/SAPA/"/>
    <url>/2023/12/02/SAPA/</url>
    
    <content type="html"><![CDATA[<h1 id="sapa-similarity-aware-affiliation-for-feature-upsampling"><a class="markdownIt-Anchor" href="#sapa-similarity-aware-affiliation-for-feature-upsampling"></a> SAPA: similarity-aware affiliation for feature upsampling</h1><p>​在低分辨率feature map中，如果对边界点进行上采样，可能出现的情况是：原本在低分辨率的一个点上采样之后所得的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点并不属于一个semantic cluster。本篇文章旨在将语义信息的相似性引入上采样算子，利用不同点之间的联系（affiliation）判断采样点属于哪一个semantic cluster。它的原理是：计算待采样点与相邻某些点的相似性，用这些相似性，类似注意力机制去产生采样算子，由此对decoder feature进行上采样。SAPA不仅能够进行semantic smoothness（语义平滑）和boundary sharpness（突出边界），是一种非常有效的采样方式</p><h2 id="sapa-b"><a class="markdownIt-Anchor" href="#sapa-b"></a> SAPA-B：</h2><p>​设 decoder feature <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H \times W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，待采样 feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{X}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>（设采样率为2），设在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{X}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 中每个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l&#x27;=(i&#x27;,j&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，则其对应 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span></span></span></span> 中的点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>=</mo><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">⌊</mo><mfrac><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mfrac><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mo stretchy="false">⌊</mo><mfrac><msup><mi>j</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mn>2</mn></mfrac><mo stretchy="false">⌋</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l=(i,j)=(\lfloor \frac{i&#x27;}{2} \rfloor,\lfloor \frac{j&#x27;}{2} \rfloor)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.370588em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.97348em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.025588em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mclose">)</span></span></span></span>，设我们要从邻域中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span> 个点的信息采样，我们设些采样点的集合全体位置构成的集合设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>l</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mi>S</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">p</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mn>2</mn></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">I_l = \{\boldsymbol p_1,\boldsymbol p_1,...,\boldsymbol p_S,\boldsymbol p_i\in \mathbb{R}^2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23419099999999995em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>，这些采样点沿通道的信息的集合为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>l</mi></msub><mo>=</mo><mo stretchy="false">{</mo><msub><mi mathvariant="bold-italic">x</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">x</mi><mi>S</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">P_l=\{\boldsymbol x_1,...,\boldsymbol x_S, \boldsymbol x_i \in \mathbb{R}^C\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>​再设对整个 feature map 的采样核为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">W</mi></mrow><annotation encoding="application/x-tex">\mathcal{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span></span></span></span>，大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>H</mi><mo>×</mo><mn>2</mn><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">2H \times 2W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，由于要对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">W</mi></mrow><annotation encoding="application/x-tex">\mathcal{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span></span></span></span> 进行 normalize，我们将 normalize 定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">W</mi><mo>=</mo><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>w</mi><mo>=</mo><mfrac><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">z</mi><mo>∈</mo><msub><mi>P</mi><mi>l</mi></msub></mrow></munder><mi>h</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">z</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathcal{W} = norm(\phi(\mathcal{X})) \\w = \frac{h(sim(\boldsymbol{x,y}))}{\sum_{\boldsymbol z \in P_l} h(sim(\boldsymbol{z,y}))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.51857em;vertical-align:-1.09157em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.04213em;">z</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.40557em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04213em;">z</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.09157em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span> 是任意一个函数，通常选用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>e</mi><mi>x</mi></msup></mrow><annotation encoding="application/x-tex">e^x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span> 即为 softmax normalize 过程，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span></span></span></span> 是相似度函数，定义有两种方式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><mi mathvariant="bold-italic">y</mi><mspace linebreak="newline"></mspace><mi>s</mi><mi>i</mi><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi><mrow><mi mathvariant="bold-italic">x</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">y</mi></mrow></mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><mi mathvariant="bold-italic">y</mi><mspace linebreak="newline"></mspace><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup><mtext>  </mtext><msub><mi>M</mi><mi>x</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup><mtext>  </mtext><msub><mi>M</mi><mi>y</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup><mtext>  </mtext><mi mathvariant="bold-italic">y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><msup><mi>C</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">sim_1(\boldsymbol{x,y}) = \boldsymbol{x}^T M_x^T M_y\boldsymbol{y} \\sim_2(\boldsymbol{x,y}) = \boldsymbol{x}^T \boldsymbol{y} \\\boldsymbol{x} \in \mathbb{R}^C \ \  M_x \in \mathbb{R}^{d \times C} \ \  M_y \in \mathbb{R}^{d \times C&#x27;}\ \ \boldsymbol{y} \in \mathbb{R}^{C&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span><span class="mpunct mathbf">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0413309999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.18692em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace"> </span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>则对应点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 的核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 采样点的值可以表示为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi><mspace linebreak="newline"></mspace><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{x}_{l&#x27;}&#x27; = \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T M_x^T M_y \boldsymbol y_{l&#x27;}) \boldsymbol x \\\boldsymbol{x}_{l&#x27;}&#x27;= \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T  \boldsymbol y_{l&#x27;}) \boldsymbol x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub></mrow><annotation encoding="application/x-tex">\boldsymbol y_{l&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68858em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span> 是在 encoder feature 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">l&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 处的沿深度的向量，如果我们将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 定义为点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 在 decoder feature 中的方邻域，则根据采样值的相似度定义的不同，将 SAPA 划分为 SAPA-B (base) 和 SAPA-I (innner product)，SAPA-B 的效果不仅能将同一个 semantic cluster 内的像素进行平滑，而且能将边界像素对比度调高（smooth regions and sharp boundaries）</p><p><img src="/2023/12/02/SAPA/1.png" alt="Fig.1"></p><h2 id="sapa-b的改进"><a class="markdownIt-Anchor" href="#sapa-b的改进"></a> SAPA-B的改进</h2><p>​SAPA-B 在大多数领域中都表现很好的表现，但在目标检测任务中，SAPA-B 的效果不如 CARAFE，作者在文中比较了 Semantic Segmentation 和 Object Detection 的区别，Sementic Segmentation 的每个像素点都会对最终性能评估和损失函数造成影响，而在 Object Detection 中只有一小部分区域对最终结果造成影响，因此它们可以划分为像素级的任务和非像素级的人物， CARAFE 可以修复 semantic information 且具有大的局部可分性( large local divisibility )，而如下图所示 SAPA-B 在低分辨率图像有正确的 semantic cluster 时，SAPA-B 会提升它的性能，但是如果存在着噪声的话 (例如下图中墙上的画的内容)，SAPA-B 会引入噪声，因此如果在同一个 semantic cluster 内部像素信息不是平滑的时候，SAPA-B 的性能提升会很有限</p><p><img src="/2023/12/02/SAPA/2.png" alt="Fig.2"></p><p>如下图所示，SAPA-B 在墙上挂画内部有噪声的时候，会引入一定的噪声</p><p><img src="/2023/12/02/SAPA/3.png" alt="Fig.3"></p><p>​简而言之，作者在文章中给出解释：SAPA-B only extracts already existed knowledge from the encoder feature, but cannot learn new knowledge to enhance features. However, the dynamic convolution in CARAFE learns new representations based on the decoder feature and is able to mend the features. 在修复 feature 上，由于 CARAFE 的局部可分性强于 SAPA-B，在目标检测任务里面， SAPA-B 提供目标精确边界对性能指标的提升会不如 CARAFE 对目标内部一些关键区域信息的修补</p><h3 id="sapa-d的提出"><a class="markdownIt-Anchor" href="#sapa-d的提出"></a> SAPA-D的提出：</h3><p>​基于上面的推理，我们改进的思路是将 SAPA 改进为能够修复 feature，因此我们在噪声中去寻找潜在可能的适合的像素点进行采样。因此我们将 SAPA 先前统一的固定窗口形状变为一个可变的形状，即动态地去选择采样点。受 DCN(Deformable Convolutional Networks) 的启发，我们去生成对应于采样点的偏移量，则整个采样过程可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>I</mi><mi>l</mi></msub><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo stretchy="false">)</mo><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><msub><mi>P</mi><mi>l</mi></msub><mo>=</mo><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mi mathvariant="normal">_</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="script">X</mi><mo separator="true">,</mo><msub><mi>I</mi><mi>l</mi></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msubsup><mi mathvariant="bold-italic">x</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><munder><mo>∑</mo><mrow><mi mathvariant="bold-italic">x</mi><mo>∈</mo><msub><mi>W</mi><mi>l</mi></msub></mrow></munder><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msup><mi mathvariant="bold-italic">x</mi><mi>T</mi></msup><msubsup><mi>M</mi><mi>x</mi><mi>T</mi></msubsup><msub><mi>M</mi><mi>y</mi></msub><msub><mi mathvariant="bold-italic">y</mi><msup><mi>l</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mo stretchy="false">)</mo><mi mathvariant="bold-italic">x</mi></mrow><annotation encoding="application/x-tex">I_l =  \phi(\mathcal{X})\ ,\ P_l =bilinear\_sampling(\mathcal{X},I_l) \\\boldsymbol{x}_{l&#x27;}&#x27;= \sum_{\boldsymbol x \in W_l} softmax(\boldsymbol x^T M_x^T M_y \boldsymbol y_{l&#x27;}) \boldsymbol x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose">)</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.048892em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.450201em;vertical-align:-1.400196em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.855664em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight">x</span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3487714285714287em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15122857142857138em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400196em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord boldsymbol">x</span></span></span></span></span></span></p><p>那么又引出一个问题：我们怎么生成采样点？作者在文章中引入了 DOF 的概念：</p><p><strong>DOF ( Degree of Freedom ) 定义：</strong> 用于描述特征图的连续性和对比度的平衡，如果在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">W_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个值都由同一组参数生成，那么称 DOF 的值为1，反之若它们的值由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个值生成，那么 DOF 的值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p>​根据这个定义，CARAFE 的 DOF 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，SAPA-B 的 DOF 值为1，Pixel-shuffle 的 DOF 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，NN 的 DOF 值为1。DOF 的值越高，代表着更高的对比度和更低的连续性。效果如下图所示：</p><p><img src="/2023/12/02/SAPA/4.png" alt="Fig.4"></p><p>​因此我们在语义分割任务中设置 DOF = 1，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个采样点由同一组参数生成，在 instance-level tasks 中（例如目标检测）设置 DOF = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">s^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> ，在 DOF = 1 时，SAPA-D 表现出一个好的在连续性和对比度之间的折中</p><h3 id="group-upsampling"><a class="markdownIt-Anchor" href="#group-upsampling"></a> Group Upsampling：</h3><p>​用于采样的点的数量对计算速度有很大的影响，Group Upsampling 是一个 economic 的方式提升 SAPA 的性能，我们将 SAPA-B 中25个用于采样的点在SAPA-D中减为9个，并且使用 4 groups 进行采样。值得一提的是：<strong>Interestingly, the grouping operation is only useful for SAPA-D with dynamic selection, while even hurting the performance for SAPA-B and CARAFE.</strong></p><h3 id="高分辨率图像在采样中的作用"><a class="markdownIt-Anchor" href="#高分辨率图像在采样中的作用"></a> 高分辨率图像在采样中的作用：</h3><p>​高分辨率图像不仅能提供图像细节信息，还能提供 <strong>structural information to stabilize the feature map</strong>，如图 Fig.3 所示，在没有高分辨率图像指导的采样过程中，采样出来的高分辨率图像导致了采样的 feature 灾难性消失（值得一提的是，这样采样生成的特征图仍然能产生大约正确的结果，作者在文中猜测是提取了一些新的特殊的特征）。至此，我们可以将 SAPA 的采样过程表示为：</p><p><img src="/2023/12/02/SAPA/5.png" alt="Fig.5"></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FADE</title>
    <link href="/2023/12/02/FADE/"/>
    <url>/2023/12/02/FADE/</url>
    
    <content type="html"><![CDATA[<h1 id="fade-fusing-the-assets-of-decoder-and-encoder-for-task-agnostic-upsampling"><a class="markdownIt-Anchor" href="#fade-fusing-the-assets-of-decoder-and-encoder-for-task-agnostic-upsampling"></a> FADE: fusing the assets of decoder and encoder for task-agnostic upsampling</h1><p>​对于不同的稠密预测任务，有些任务注重于语义信息（semantic information），它们对图像位置信息敏感（region-sensitive）而有的任务（图像分割）注重于细节（detail-sensitive）。原有的上采样算子都是用于特定任务而不是通用型，本篇文章主要从encoder与decoder两方面解释了为什么CARAFE在semantic segmentation上优于IndexNet；IndexNet在image matting上优于CARAFE，并且提出了一种新的通用任务的采样算子FADE，FADE的有效性在于1.同时使用encoder与decoder，2.使用 semi-shift convolution 保证感受野大小，3.在产生上采样算子前使用一个gating mechanism模块，设计成与decoder无关以增强上采样算子的细节增强能力。</p><h2 id="encoderdecoder"><a class="markdownIt-Anchor" href="#encoderdecoder"></a> encoder&amp;decoder</h2><p>​我们先提出一个假设：<strong>一个理想的上采样算子需要能够很好地保留semantic information的同时也需要补偿下采样过程中失去的细节信息；对于前者，semantic information已经嵌入在了decoder中，对于后者则存在于encoder中</strong>。我们进一步假设：正是因为encoder或者decoder中的信息使用不够充分或者有偏向性才导致采样算子有着task-dependent的特性。</p><p>​下面通过采样算子的原理解释为什么现有的采样算子task-dependent：</p><p><img src="/2023/12/02/FADE/1.png" alt="encoder&amp;decoder"></p><ul><li>CARAFE的上采样算子通过下采样之后的特征图产生，即由decoder feature产生，这样就充分利用了decoder feature的信息而丢失了下采样前的图像细节信息。</li><li>IndexNet和A2U的上采样核通过下采样前的feature map产生，这样就充分利用了原feature map中的细节信息，而没有利用采样后的semantic information</li><li>于是我们提出了FADE：通过将encoder与decoder的信息融合生成采样算子</li></ul><h3 id="那么接下来的问题是如何将两个信息全部利用起来"><a class="markdownIt-Anchor" href="#那么接下来的问题是如何将两个信息全部利用起来"></a> 那么接下来的问题是如何将两个信息全部利用起来？</h3><p>​How to leverage both encoder and decoder features for task-agnostic upsampling?</p><p>​一个朴素的想法是将encoder与decoder所提供的信息concatenate起来，通过卷积进行特征提取（卷积核实质上就是一个滤波器）生成上采样算子，但是主要的问题是：encoder与decoder所提供的feature map大小不一样（mismatched resolution），考虑如果对decoder使用参数为2的临近插值（2NN）进行信息补全，同时上采样率为2，当我们使用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 大小的卷积核进行卷积时，本来是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">3 \times 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 大小的感受野就退化为只能感受到4个像素信息，同时实验也证明这种方法并不好。于是启发我们设计一个新的解决方案：semi-shift convolution。每当卷积窗口在 encoder feature 中移动两个像素点时，decoder feature 中的卷积窗口移动一个像素点，这一点和 CARAFE 的方式是相同的</p><p><img src="/2023/12/02/FADE/2.png" alt="semi-shift convolution"></p><h2 id="fade-的设计"><a class="markdownIt-Anchor" href="#fade-的设计"></a> FADE 的设计</h2><p><img src="/2023/12/02/FADE/3.png" alt="FADE"></p><p>​encoder feature 与 decoder feature 先经过一个半移位卷积生成 pre-upsampled feature，如果直接使用这份 feture map 会发现它恢复细节的能力不够，这时候引入 gated mechanism 进行微调，decoder feature 通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积进行通道压缩，再通过一次 NN插值上采样和 sigmoid 函数生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span>，这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">G</mi></mrow><annotation encoding="application/x-tex">\mathcal{G}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span></span></span></span> 用于平衡 encoder feature 和 pre-upsampled 的权重，最终生成的上采样 feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">F</mi></mrow><annotation encoding="application/x-tex">\mathcal{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span></span></span></span> 由如下公式生成：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">F</mi><mrow><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="script">F</mi><mrow><mi>e</mi><mi>n</mi><mi>c</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>⊙</mo><mi mathvariant="script">G</mi><mo>+</mo><msub><mi mathvariant="script">F</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mo>−</mo><mi>u</mi><mi>p</mi><mi>s</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⊙</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi mathvariant="script">G</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{F}_{upsampled} = \mathcal{F}_{encoder} \odot \mathcal{G} + \mathcal{F}_{pre-upsampled} \odot (1 - \mathcal{G})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mclose">)</span></span></span></span></span></p><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FADE_upsampling</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, kernel_size=<span class="hljs-number">3</span>, ratio=<span class="hljs-number">2</span></span>):<br>        <span class="hljs-built_in">super</span>(FADE_upsampling, self).__init__()<br>        self.ratio = ratio<br>        self.kernel_size = kernel_size<br>        self.padding = kernel_size // <span class="hljs-number">2</span> <span class="hljs-keyword">if</span> kernel_size % <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> (kernel_size - <span class="hljs-number">1</span>) // <span class="hljs-number">2</span><br>        self.comp = nn.Conv2d(in_channels=c_in, out_channels=<span class="hljs-number">1</span>, kernel_size=<span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, encoder_f, decoder_f</span>):<br>        _, c1, h1, _ = decoder_f.size()<br>        _, c2, h2, w2 = encoder_f.size()<br>        x = F.unfold(decoder_f, kernel_size=self.kernel_size, padding=self.padding)<br>        x = einops.rearrange(x, <span class="hljs-string">&#x27;b (c n) (h1 w1) -&gt; b n c h1 w1&#x27;</span>, c=c1, h1=h1)<br>        x = einops.repeat(x, <span class="hljs-string">&#x27;b n c h1 w1 -&gt; b n c (h1 2) (w1 2)&#x27;</span>)<br>        <span class="hljs-comment"># x = F.interpolate(x, scale_factor=2)</span><br><br>        y = F.unfold(encoder_f, kernel_size=self.kernel_size, padding=self.padding)<br>        y = einops.rearrange(y, <span class="hljs-string">&#x27;b (c n) (h2 w2) -&gt; b n c h2 w2&#x27;</span>, c=c2, h2=h2)<br>        <br>        pre_upsampled = torch.einsum(<span class="hljs-string">&#x27;bnchw,bnchw-&gt;bchw&#x27;</span>, [x, y])<br>        <br>        G = self.comp(decoder_f)<br>        G = F.interpolate(G, scale_factor=<span class="hljs-number">2</span>)<br>        G = F.sigmoid(G)<br>        out = encoder_f * G + (<span class="hljs-number">1</span> - G) * pre_upsampled<br>        <span class="hljs-keyword">return</span> out<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    fade = FADE_upsampling(<span class="hljs-number">32</span>)<br>    encoder_f = torch.randn((<span class="hljs-number">2</span>, <span class="hljs-number">32</span>, <span class="hljs-number">8</span>, <span class="hljs-number">14</span>))<br>    decoder_f = torch.randn((<span class="hljs-number">2</span>, <span class="hljs-number">32</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>))<br>    x = fade(encoder_f, decoder_f)<br>    <span class="hljs-built_in">print</span>(x.size())<br></code></pre></td></tr></table></figure><p>Q:we assume that all decoder layers have <strong>gradient-imposed distribution priors</strong> and can be encoded to inform the requisite of detail or semantic information. In this way fine details can be chosen from encoder features without hurting the semantic property of decoder features</p><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://arxiv.org/pdf/2207.10392.pdf">Fusing the assets of encoder and decoder in feature upsampling</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>A2U for deep matting</title>
    <link href="/2023/12/01/A2U/"/>
    <url>/2023/12/01/A2U/</url>
    
    <content type="html"><![CDATA[<h1 id="affinity-aware-upsampling"><a class="markdownIt-Anchor" href="#affinity-aware-upsampling"></a> Affinity-Aware Upsampling</h1><p>​相似度(affinity)在稠密预测任务中是一个非常重要的信息，二阶的特征常用于建立相似度信息，本文主要工作是将原有的动态上采样过程都总结成一阶的信息，并在此基础上提出使用二阶的信息，用此将自相似性引入采样过程，同时通过低秩双线性模型减少模型参数，降低模型计算开支</p><h3 id="另一种将upsampling算子统一的视角"><a class="markdownIt-Anchor" href="#另一种将upsampling算子统一的视角"></a> 另一种将Upsampling算子统一的视角：</h3><p>​对于一个单通道的feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Z \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> ，目标是通过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 去产生一个新的像素值（upsampled feature point），将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> 向量化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">z \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，同时设上采样算子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 向量化为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，则现有的上采样算子的形式可以统一为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> （对应新的feature map中一个像素点）</p><p>​文章中将现有的上采样算子分为了两类：</p><h5 id="distance-based-upsampling"><a class="markdownIt-Anchor" href="#distance-based-upsampling"></a> distance-based Upsampling</h5><p>​基于位置信息的上采样算子，例如最临近插值</p><h5 id="feature-based-upsampling"><a class="markdownIt-Anchor" href="#feature-based-upsampling"></a> feature-based Upsampling</h5><p>​基于图像内容信息的上采样算子，例如CARAFE，max upooling，IndexNet</p><p>可以看出无论哪种采样算子都是  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 的形式</p><h2 id="learning-affinity-aware-upsampling"><a class="markdownIt-Anchor" href="#learning-affinity-aware-upsampling"></a> Learning Affinity-Aware Upsampling</h2><p>​现有一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{M} \in \mathbb{R}^{C \times H \times W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal">M</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span>，目标为产生大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>r</mi><mi>H</mi><mo>×</mo><mi>r</mi><mi>W</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{M}&#x27; \in \mathbb{R}^{C \times r H \times r W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.790992em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span></span></span></span></span></span></span></span></span> 的新feature map，对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="script">M</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{M}&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathcal">M</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 中每一点（设为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 位置处），我们都要去学习一个上采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><msup><mi>k</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">w \in \mathbb{R}^{k^2 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span> ，则将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span> 与原图像对应点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">⌊</mo><mfrac><mi>i</mi><mi>r</mi></mfrac><mo stretchy="false">⌋</mo><mo separator="true">,</mo><mo stretchy="false">⌊</mo><mfrac><mi>j</mi><mi>r</mi></mfrac><mo stretchy="false">⌋</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\lfloor \frac{i}{r} \rfloor,\lfloor \frac{j}{r} \rfloor)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.252772em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.907772em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mclose">)</span></span></span></span>邻域内的图像信息经过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>z</mi></mrow><annotation encoding="application/x-tex">g(w,z)=w^Tz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 则可得新feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 位置处的像素值</p><h4 id="本文affinity-定义"><a class="markdownIt-Anchor" href="#本文affinity-定义"></a> 本文Affinity 定义：</h4><p>​对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi></mrow><annotation encoding="application/x-tex">l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span> 和其他所有可能位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 之间的Affinity定义为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi mathvariant="normal">∀</mi><mi>p</mi></mrow></munder><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>m</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathop {softmax }\limits_{\forall p}(sim(m_l,m_p))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8326559999999998em;vertical-align:-1.0826559999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.153452em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∀</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">so</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0826559999999998em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>​相似度直接采用内积的方式定义：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>i</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mi>l</mi></msub><mo separator="true">,</mo><msub><mi>m</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>m</mi><mi>l</mi><mi>T</mi></msubsup><msub><mi>m</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">sim(m_l,m_p)=m_l^T m_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.177439em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/2023/12/01/A2U/1.png" alt="image"></p><h2 id="上采样算子的生成"><a class="markdownIt-Anchor" href="#上采样算子的生成"></a> 上采样算子的生成：</h2><p>​设原 local feature map（<strong>注意这个定义，它是目标采样点的邻域！！！</strong>）为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{X} \in \mathbb{R}^{C \times h_1 \times w_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，将其每一个关于通道切片向量化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X \in \mathbb{R}^{C \times N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span></span> ，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N=h_1 \times w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，我们的目标是基于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span> 产生一个上采样算子，下面我们利用Affinity去进行上采样，我们不使用一阶的信息构建 $w = \sum_{i = 1}^C \sum_{j = 1}^N a_{ij} x_{ij}  $​，<strong>因为二阶的信息常常用于构建相似度</strong>，使用类似于transfomer中的二阶信息（QKV矩阵）：<strong>为了编码二阶的信息，我们的想法是利用双线性插值</strong>，设另外一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{y} \in \mathbb{R}^{C \times h_2 \times w_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>，同样将其向量化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Y \in \mathbb{R}^{C \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">M=h_2 \times w_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">y</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mn>1</mn></mrow></msup><mtext> </mtext><mtext> </mtext><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol{y}_i\in \mathbb{R} ^{C\times 1}\,\,\boldsymbol{x}_i\in \mathbb{R} ^{C\times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78324em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mi>ψ</mi><msup><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">x</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mi>T</mi></msup><mi>ϕ</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="bold-italic">y</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>q</mi><mi>k</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi>t</mi><mi>k</mi></msub><msub><mi>y</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow></mrow></mrow><mspace linebreak="newline"></mspace><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><mrow><msub><mi mathvariant="script">a</mi><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>k</mi></mrow></msub><msub><mi>y</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow></mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msub><mi>X</mi><mi>k</mi></msub><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><msub><mi>Y</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">w=\sum_{i=1}^N{\sum_{j=1}^M{a_{ij}\psi \left( \boldsymbol{x}_i \right) ^T\phi \left( \boldsymbol{y}_i \right)}}=\sum_{k=1}^C{\sum_{i=1}^N{\sum_{j=1}^M{a_{ij}q_kx_{ik}t_ky_{jk}}}} \\=\sum_{k=1}^C{\sum_{i=1}^N{\sum_{j=1}^M{\mathscr{a}_{ijk}x_{ik}y_{jk}}}}=\sum_{k=1}^C{ {X}_k\boldsymbol{A}_k {Y}_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">a</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span></span></span></span> 为embedding function，$\mathscr{a}<em>{ijk}=a</em>{ij}q_kt_k $ ，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow></msup><mtext> </mtext><msub><mi>Y</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>M</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">X_k \in \mathbb{R}^{N \times 1} \ Y_k \in \mathbb{R}^{M \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.991331em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k \in \mathbb{R}^{N \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span> ， 是第k层feature map的affinity matrix。</p><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k \in \mathbb{R}^{N \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span> 参数量非常大而且难以训练，为了减少参数量且将计算过程变为卷积形式，我们引入假设：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">rank(\boldsymbol A_k) \le d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> ，则可以分解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">A</mi><mi>k</mi></msub><mo>=</mo><msub><mi mathvariant="bold-italic">U</mi><mi>k</mi></msub><msubsup><mi mathvariant="bold-italic">V</mi><mi>K</mi><mi>T</mi></msubsup></mrow><annotation encoding="application/x-tex">\boldsymbol A_k = \boldsymbol U_k\boldsymbol V_K^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">A</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1643409999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> ，$ \boldsymbol U_k \in \mathbb{R}^{N \times d},\boldsymbol V_k \in \mathbb{R}^{M \times d}$，因此上式可变形为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><msub><mi mathvariant="bold-italic">U</mi><mi>k</mi></msub><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msup><mi mathvariant="bold">1</mi><mi>T</mi></msup><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mspace linebreak="newline"></mspace><mo>=</mo><msup><mi mathvariant="bold">1</mi><mi>T</mi></msup><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow></mrow><annotation encoding="application/x-tex">w=\sum_{k=1}^C{\boldsymbol{x}_k\boldsymbol{U}_k\boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}=\sum_{k=1}^C{\boldsymbol{1}^T\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k} \\=\boldsymbol{1}^T\sum_{k=1}^C{\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>​其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊙</span></span></span></span> 代表Hadmard积，列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">1</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol 1 \in \mathbb{R}^{d \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathbf">1</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>​因为我们要生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>×</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">s \times s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 大小的上采样核，则列向量 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">1</mi></mrow><annotation encoding="application/x-tex">\boldsymbol 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">1</span></span></span></span></span> 可写为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>s</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol P \in \mathbb{R}^{d \times s^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> ，则**<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>向量化之后的采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>** 可以写为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold-italic">w</mi><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><msubsup><mi mathvariant="bold-italic">U</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">V</mi><mi>k</mi><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub></mrow><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><mo fence="true">(</mo><msubsup><mi mathvariant="bold-italic">u</mi><mrow><mi>k</mi><mi>r</mi></mrow><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">x</mi><mi>k</mi></msub><mo>⊙</mo><msubsup><mi mathvariant="bold-italic">v</mi><mrow><mi>k</mi><mi>r</mi></mrow><mi>T</mi></msubsup><msub><mi mathvariant="bold-italic">y</mi><mi>k</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><msup><mi mathvariant="bold-italic">P</mi><mi>T</mi></msup><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">U</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">X</mi><mo fence="true">)</mo></mrow><mo>⊙</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">V</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">Y</mi><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mspace linebreak="newline"></mspace><mo>=</mo><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><mi mathvariant="script">P</mi><mo separator="true">,</mo><mi><munder><mo><mi><mover><mo><mi>c</mi><mi>a</mi><mi>t</mi></mo><mi>d</mi></mover></mi></mo><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mrow><mo fence="true">(</mo><mrow><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">U</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">X</mi><mo fence="true">)</mo></mrow><mo>⊙</mo><mi>g</mi><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">V</mi><mi>r</mi></msub><mo separator="true">,</mo><mi mathvariant="script">Y</mi><mo fence="true">)</mo></mrow></mrow><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\boldsymbol{w}=\boldsymbol{P}^T\sum_{k=1}^C{\boldsymbol{U}_{k}^{T}\boldsymbol{x}_k\odot \boldsymbol{V}_{k}^{T}\boldsymbol{y}_k}=\boldsymbol{P}^T\underset{r=1}{\overset{d}{cat}}\left( \sum_{k=1}^C{\left( \boldsymbol{u}_{kr}^{T}\boldsymbol{x}_k\odot \boldsymbol{v}_{kr}^{T}\boldsymbol{y}_k \right)} \right) \\=\boldsymbol P^T \underset{r=1}{\overset{d}{cat}} \left( gconv\left( \mathcal{U}_r,\mathcal{X} \right) \odot gconv\left( \mathcal{V}_r,\mathcal{Y} \right) \right)  \\=conv\left( \mathcal{P} ,\underset{r=1}{\overset{d}{cat}}\left( { gconv\left( \mathcal{U}_r,\mathcal{X} \right) \odot gconv\left( \mathcal{V}_r,\mathcal{Y} \right) } \right) \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.02778em;">w</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">u</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">x</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">v</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">y</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.24196799999999993em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.118296em;vertical-align:-0.7171080000000001em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4011879999999999em;"><span style="top:-2.7840800000000003em;margin-left:0em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.4011880000000003em;"><span class="pstrut" style="height:3.4011880000000003em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.401188em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span></span></span></span><span style="top:-3.81508em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7171080000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊙</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>​其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="bold-italic">u</mi><mrow><mi>k</mi><mi>r</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msub><mi mathvariant="bold-italic">v</mi><mrow><mi>k</mi><mi>r</mi></mrow></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>M</mi><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol u_{kr} \in \mathbb{R}^{N \times 1},\boldsymbol v_{kr} \in \mathbb{R}^{M \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">u</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.035771em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03704em;">v</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，卷积核<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><msup><mi>s</mi><mn>2</mn></msup><mo>×</mo><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{P} \in \mathbb{R}^{d \times s^2 \times 1 \times 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></msup><mo separator="true">,</mo><mi mathvariant="script">V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>C</mi><mo>×</mo><msub><mi>h</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{U} \in \mathbb{R}^{d \times C \times h_1 \times w_1},\mathcal{V} \in \mathbb{R}^{d \times C \times h_2 \times w_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 都是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">P</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><mi mathvariant="bold-italic">U</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup><mo separator="true">,</mo><mi mathvariant="bold-italic">V</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>N</mi><mo>×</mo><mi>d</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\boldsymbol {P} \in \mathbb{R}^{N \times d \times 1},\boldsymbol {U} \in \mathbb{R}^{N \times d \times C},\boldsymbol {V} \in \mathbb{R}^{N \times d \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72521em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.11424em;">U</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>  的reshaped tensor，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mo stretchy="false">(</mo><mrow><mi mathvariant="script">K</mi><mo separator="true">,</mo><mi mathvariant="script">M</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">conv(\mathcal{K,M})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal">M</span></span><span class="mclose">)</span></span></span></span> 代表在使用kernal <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">K</mi></mrow><annotation encoding="application/x-tex">\mathcal{K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.01445em;">K</span></span></span></span></span> 在feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal">M</span></span></span></span></span> 上使用卷积操作，gconv代表group convolution，且 groups 的个数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，<strong>至此，我们将一个新的算子化为了能用高效的 <code>einsum</code> 操作的形式</strong></p><h5 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充：</h5><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo separator="true">,</mo><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{X},\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span> 可以选择相同也可以选择不同，本文选择 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">X</mi><mo>=</mo><mi mathvariant="script">Y</mi></mrow><annotation encoding="application/x-tex">\mathcal{X}=\mathcal{Y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.14643em;">X</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span></span></span></span>，这样就对应着 self attention 中的自相似性</li><li>rank <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 的范围可以在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mn>1</mn><mo separator="true">,</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\left[ 1,min(N,M)\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span> 内选取，本文令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 就可以视为 encoding function，为了补偿低秩模型导致的参数量过小的情况，本文选取动态生成 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span>，它们的参数可以根据模型复杂度选择：共享参数，不共享参数，半共享参数，<strong>本文中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U},\mathcal{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 的生成过程为：先通过一次平均值池化之后，在通过一次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的卷积生成</strong></li></ul><h2 id="与下采样算子融合"><a class="markdownIt-Anchor" href="#与下采样算子融合"></a> 与下采样算子融合</h2><p>​类似于IndexNet，upsampling可以extend to downsampling，我们使用相同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">U</mi><mo separator="true">,</mo><mi mathvariant="script">V</mi></mrow><annotation encoding="application/x-tex">\mathcal{U,V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.09931em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathcal" style="margin-right:0.08222em;">V</span></span></span></span></span> 在上下采样操作中，但是使用不同的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> 考虑到采样核的大小不同。即上采样核 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">W</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">\mathcal{W}_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">W</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>u</mi><mn>2</mn></msubsup><mo>×</mo><mi>H</mi><mo>×</mo><mi>W</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">{S_u^2} \times H \times W ,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mpunct">,</span></span></span></span> 下采样核$\mathcal{W}_d $ 大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>d</mi><mn>2</mn></msubsup><mo>×</mo><mi>H</mi><mi mathvariant="normal">/</mi><mi>r</mi><mo>×</mo><mi>W</mi><mi mathvariant="normal">/</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">{S_d^2} \times H/r \times W/r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> ，本文中令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>d</mi><mn>2</mn></msubsup><mo>=</mo><msup><mi>r</mi><mn>2</mn></msup><msub><mi>S</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">s_d^2=r^2S_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.2831079999999999em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2831079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="一些经验"><a class="markdownIt-Anchor" href="#一些经验"></a> 一些经验：</h2><ul><li>high-resolution feature map（图像大的）对于提取spatial information来说更加有效</li><li>二阶的特征比一阶特征在恢复spatial details更加有效</li></ul><h2 id="网络设计"><a class="markdownIt-Anchor" href="#网络设计"></a> 网络设计：</h2><p><img src="/2023/12/01/A2U/2.png" alt="a2u matting"></p><p>​整个网络沿用了UNet的结构，（没看懂A2U在哪里）</p><p>Q：the pairwise similarity is damaged during upsampling?</p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IndexNet</title>
    <link href="/2023/11/18/Indexed%20Network/"/>
    <url>/2023/11/18/Indexed%20Network/</url>
    
    <content type="html"><![CDATA[<h1 id="indexed-network"><a class="markdownIt-Anchor" href="#indexed-network"></a> Indexed Network</h1><p>​卷积网络中上采样算子可以用文章中提出的索引函数（Index function）统一，说明了插值上采样与反池化操作等算子都是索引函数的特殊情况，由于在图像任务中，不同的部分图像对操作的要求不一样（比如图像边界需要提出边界信息，插值的方法就不如反最大值池化的操作；图像内部我们又需要邻域像素点的信息进行上采样的操作，这种情况下反最大值池化又不如插值方法），所以我们不能在图像中简单地用一个算子进行上采样，文章中提出了用Index function来引导采样的操作，其中Index function是一个可学习的函数（通过图像的信息学习—feature map），这样就可以根据图像的内容信息和位置信息进行不同的采样操作。</p><h3 id="index的定义与理解"><a class="markdownIt-Anchor" href="#index的定义与理解"></a> index的定义与理解</h3><p>​就是一个加权（对于图像内容的感知强度），用于进行矩阵乘法，表示对每个像素点的敏感程度。本文是由在 maxunpooling 的传递 index 的基础上提出的，所以本文作者才会称其为 indexNet ，在文章中的index都是&quot;soft index&quot;，对 index 中每个元素: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">i \in [0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></p><h3 id="对于每一个feature-map-large-mathscrxindexnet会产生两个index-function分别用于上采样与下采样其实就是产生两个卷积核进行采样"><a class="markdownIt-Anchor" href="#对于每一个feature-map-large-mathscrxindexnet会产生两个index-function分别用于上采样与下采样其实就是产生两个卷积核进行采样"></a> 对于每一个feature map <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.44em"><mi mathvariant="script">x</mi></mstyle></mrow><annotation encoding="application/x-tex">\Large \mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6200064em;vertical-align:0em;"></span><span class="mord sizing reset-size6 size8"><span class="mord mathnormal">x</span></span></span></span></span>，IndexNet会产生两个Index function分别用于上采样与下采样：其实就是产生两个卷积核进行采样：</h3><ul><li><p>下采样操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> (indexed pooling)：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 通过 IndexNet 产生的索引（由下采样前的 feature map 产生，产生的 index map 大小与下采样前的 feature map 大小相同，因此在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span></span></span></span> 操作之后要进行一次平均值池化满足下采样后的大小要求）<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>k</mi><mo>×</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">E \in \mathbb{R}^{k \times k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span> 是下采样像素点的方形邻域（感受野），那么对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 进行下采样，得到的结果为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">P</mi></mrow><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><mi>E</mi></mrow></msub><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\mathcal{IP}(E)=\sum_{x \in E}I(x)x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.07708em;vertical-align:-0.32708000000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17862099999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.32708000000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">x</span></span></span></span> ，对于每个区域 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span> 都会经过一个 softmax 保证图像强度连续性，从这里就可以看出最大值池化和平均值池化都是IndexNet的特例了。<strong>注：这样产生的 feature map 需要乘一个常数，在下采样率为2的时候整体 feature map 乘4去补偿平均值采样</strong></p></li><li><p>上采样操作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">U</mi></mrow><annotation encoding="application/x-tex">\mathcal{IU}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span></span></span></span> (indexed upsampling)：它是下采样操作的反算子，它先将上采样前低分辨率的 feature map 进行 NN 插值到和上采样后的大小，以匹配产生的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span> 的大小（这一步就相对于CARAFE不同了，它考虑了spatial information，因为信息来自于encoder）即得上采样区域，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="script">I</mi><mi mathvariant="script">U</mi></mrow><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo><mo>⊗</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">\mathcal{IU}(d)=I(d) \otimes E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.07382em;">I</span><span class="mord mathcal" style="margin-right:0.09931em;">U</span></span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的定义同上面的下采样。</p></li></ul><p><img src="/2023/11/18/Indexed%20Network/2.png" alt="index-net"></p><h3 id="文章中还根据训练的参数量将index-function分类"><a class="markdownIt-Anchor" href="#文章中还根据训练的参数量将index-function分类"></a> 文章中还根据训练的参数量将Index function分类：</h3><ul><li>每个层通道是否共享一个Index function将Index Networks分为HINS(holistic index networks) 和 DINS(depthwise index networks)，对于原始<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>×</mo><mi>W</mi><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H \times W \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>大小的feature map，HINS会将feature map特征提取输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><msup><mi>W</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">H^{&#x27;} \times W^{&#x27;} \times 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>大小的Index block，而DINS会将feature map特征提取输出为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>H</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><msup><mi>W</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H^{&#x27;} \times W^{&#x27;} \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0258099999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94248em;"><span style="top:-2.94248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的Index block</li><li>再对DINS进行分类，由于输入feature map与输出Index block的通道数都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，因此我们考虑使用三维卷积还是二维卷积，即输出Index block的对通道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的每一个切片是否考虑与feature map对通道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的每一个切片一一对应，还是考虑feature map的全部层，于是将DINS分类为O2O DINS(one to one)和M2O DINS(many to one)</li><li>我们再对O2O DINS进行分类，考虑在上采样与下采样操作中，我们是否采用同一个参数的Index block，于是将O2O DINS进行分类为Modelwise O2O DINS和Stagewise O2O DINS</li><li>再对Stagewise O2O DINS进行分类，如果我们在不同阶段的采样过程中（不只是上下采样）都需要不同的Index block（即是否共享参数），我们再将Stagewise O2O DINS分类为Shared Stagewise O2O DINS和unshared Stagewise O2O DINS</li></ul><p><img src="/2023/11/18/Indexed%20Network/1.png" alt="catagory"></p><p>​其中M2O的效果最好，但是同时参数量也最大；HINs比DINs更加灵活，对于网络的设计来说自由度更高。</p><h3 id="indexnet与carafe的比较"><a class="markdownIt-Anchor" href="#indexnet与carafe的比较"></a> IndexNet与CARAFE的比较</h3><p><img src="/2023/11/18/Indexed%20Network/2.png" alt="index-net"></p><h4 id="相同点"><a class="markdownIt-Anchor" href="#相同点"></a> 相同点：</h4><ul><li><p>它们都是基于内容生成的动态的，具有可学习参数的采样核。</p></li><li><p>CARAFE是IndexNet的特殊形式：</p></li></ul><h4 id="不同点"><a class="markdownIt-Anchor" href="#不同点"></a> 不同点</h4><ul><li><p>下采样时，IndexNet产生的Index function是基于前面高分辨率的feature map产生的，这样就不会丢失空间位置信息。</p></li><li><p>CARAFE基于下采样后的低分辨率图产生，因此具有丰富的语义信息</p></li><li><p>IndexNet的下采样与上采样方式是相互作用的，而CARAFE上下采样方式毫无关系，这一点可能可以引导以后的研究！</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">HolisticIndexBlock</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, inp, use_nonlinear=<span class="hljs-literal">False</span>, use_context=<span class="hljs-literal">False</span>,</span><br><span class="hljs-params">                 use_batch_norm=<span class="hljs-literal">False</span>, ratio=<span class="hljs-number">2</span></span>):<br>        <span class="hljs-built_in">super</span>(HolisticIndexBlock, self).__init__()<br>        <span class="hljs-keyword">if</span> use_context:<br>            kernel_size, padding = <span class="hljs-number">4</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            kernel_size, padding = <span class="hljs-number">2</span>, <span class="hljs-number">0</span><br><br>        c_mid = inp * ratio<br>        c_out = ratio**<span class="hljs-number">2</span><br>        self.ratio = ratio<br><br>        <span class="hljs-keyword">if</span> use_batch_norm:<br>            BatchNorm2d = nn.BatchNorm2d<br>        <span class="hljs-keyword">else</span>:<br>            BatchNorm2d = <span class="hljs-literal">None</span><br><br>        <span class="hljs-keyword">if</span> use_nonlinear:<br>            self.indexnet = nn.Sequential(<br>                    nn.Conv2d(inp, c_mid, kernel_size=kernel_size, stride=<span class="hljs-number">2</span>,<br>                              padding=padding, bias=<span class="hljs-literal">False</span>),<br>                    BatchNorm2d(c_mid),<br>                    nn.ReLU6(inplace=<span class="hljs-literal">True</span>),<br>                    nn.Conv2d(c_mid, c_out, kernel_size=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>, bias=<span class="hljs-literal">False</span>)<br>                )<br>        <span class="hljs-keyword">else</span>:<br>            self.indexnet = nn.Conv2d(inp, c_out, kernel_size=kernel_size,<br>                                      stride=<span class="hljs-number">2</span>, padding=padding, bias=<span class="hljs-literal">False</span>)<br><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x = self.indexnet(x)<br>        y = F.sigmoid(x)<br>        z = F.softmax(y ,dim=<span class="hljs-number">1</span>)<br>        <span class="hljs-comment"># 可以直接使用stride=1的卷积，这样后续就不需要将通道维数补偿到图像大小上去</span><br>        idx_encoder = einops.rearrange(z, <span class="hljs-string">&#x27;b (r1 r2) h w -&gt; b 1 (h r1) (w r2)&#x27;</span>, r1=self.ratio)<br>        idx_decoder = einops.rearrange(y, <span class="hljs-string">&#x27;b (r1 r2) h w -&gt; b 1 (h r1) (w r2)&#x27;</span>, r1=self.ratio)<br>        <span class="hljs-keyword">return</span> idx_encoder, idx_decoder<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DepthwizeIndexBlock</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, inp, use_nonlinear=<span class="hljs-literal">False</span>, use_context=<span class="hljs-literal">False</span>,</span><br><span class="hljs-params">                 use_batch_norm=<span class="hljs-literal">False</span>, ratio=<span class="hljs-number">2</span>, mode=<span class="hljs-string">&#x27;O2O&#x27;</span></span>):<br>        <span class="hljs-built_in">super</span>(DepthwizeIndexBlock, self).__init__()<br>        <br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;M2O&#x27;</span> <span class="hljs-keyword">in</span> mode:<br>            grp = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">elif</span> <span class="hljs-string">&#x27;O2O&#x27;</span> <span class="hljs-keyword">in</span> mode:<br>            grp = inp<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">assert</span> <span class="hljs-string">&quot;MODE ERROR&quot;</span><br>        self.ratio = ratio<br>        self.grp = grp<br><br>        self.indexnets = nn.ModuleList([<br>            self._build_index_block(inp, use_nonlinear, use_context, use_batch_norm)<br>            <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ratio**<span class="hljs-number">2</span>)<br>        ])<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_build_index_block</span>(<span class="hljs-params">self, inp, use_nonlinear, use_context, use_batch_norm</span>):<br>        <span class="hljs-keyword">if</span> use_context:<br>            kernel_size, padding = <span class="hljs-number">4</span>, <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            kernel_size, padding = <span class="hljs-number">2</span>, <span class="hljs-number">0</span><br>        <br>        <span class="hljs-keyword">if</span> use_batch_norm:<br>            BatchNorm2d = nn.BatchNorm2d<br>        <span class="hljs-keyword">else</span>:<br>            BatchNorm2d = <span class="hljs-literal">None</span><br>        <br>        <span class="hljs-keyword">if</span> use_nonlinear:<br>            <span class="hljs-keyword">return</span> nn.Sequential(<br>                <span class="hljs-comment"># 输入通道被分为grp组，每组之间共享一组卷积核</span><br>                <span class="hljs-comment"># 其中每个组的通道只与同组的卷积核进行卷积操作，而不与其他组的卷积核发生作用</span><br>                nn.Conv2d(inp, inp, kernel_size=kernel_size, stride=<span class="hljs-number">2</span>, <br>                          padding=padding, groups=self.grp),<br>                BatchNorm2d(inp),<br>                nn.ReLU6(inplace=<span class="hljs-literal">True</span>),<br>                nn.Conv2d(inp, inp, kernel_size=<span class="hljs-number">1</span>, stride=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>, groups=self.grp)<br>            )<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> nn.Conv2d(inp, inp, kernel_size=kernel_size, padding=padding,<br>                             stride=<span class="hljs-number">2</span>, groups=self.grp)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        x_list = [indexnet(x) <span class="hljs-keyword">for</span> indexnet <span class="hljs-keyword">in</span> self.indexnets]<br>        x = torch.cat(x_list, dim=<span class="hljs-number">1</span>)<br><br>        y = F.sigmoid(x)<br>        z = F.softmax(x, dim=<span class="hljs-number">2</span>)<br><br>        idx_en = einops.rearrange(y, <span class="hljs-string">&#x27;b (r1 r2 c) h w -&gt; b c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio, r2=self.ratio)<br>        idx_de = einops.rearrange(z, <span class="hljs-string">&#x27;b (r1 r2 c) h w -&gt; b c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio, r2=self.ratio)<br>        <span class="hljs-keyword">return</span> idx_en, idx_de<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    DIN = DepthwizeIndexBlock(<span class="hljs-number">16</span>, mode=<span class="hljs-string">&#x27;M2O&#x27;</span>)<br>    x = torch.Tensor(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>)<br>    y, z = DIN(x)<br>    <br>    x1 = torch.einsum(<span class="hljs-string">&#x27;bcij,bcij-&gt;bcij&#x27;</span>, [x,y])<br>    <span class="hljs-comment"># x = F.interpolate(x, scale_factor=0.5, mode=&#x27;area&#x27;)</span><br>    x1 = F.avg_pool2d(x1, kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>)<br>    x1 = x1*<span class="hljs-number">4</span><br><br>    x2 = F.interpolate(x1, scale_factor=<span class="hljs-number">2</span>, mode=<span class="hljs-string">&#x27;nearest&#x27;</span>)<br>    x2 = torch.einsum(<span class="hljs-string">&#x27;bcij,bcij-&gt;bcij&#x27;</span>, [x2,z])<br>    <span class="hljs-built_in">print</span>(x1.size())<br>    <span class="hljs-built_in">print</span>(x2.size())<br></code></pre></td></tr></table></figure><h3 id="代码经验"><a class="markdownIt-Anchor" href="#代码经验"></a> 代码经验：</h3><ul><li>对于一些不确定是否存在的层，将这些层设置为None就可以跳过他们，而不需要写两个<code>nn.Sequence</code></li><li>对于重复性的层，合理使用列表生成式写法减少代码量</li></ul><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献：</h2><p><a href="https://ieeexplore.ieee.org/document/9123580/">Index Networks</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CARAFE上采样算子</title>
    <link href="/2023/11/17/CARAFE/"/>
    <url>/2023/11/17/CARAFE/</url>
    
    <content type="html"><![CDATA[<h1 id="carafe"><a class="markdownIt-Anchor" href="#carafe"></a> CARAFE</h1><p>​在图像任务中，不同的部分图像对操作的要求不一样（比如图像边界需要提出边界信息，插值的方法就不如反最大值池化的操作；图像内部我们又需要邻域像素点的信息进行上采样的操作，这种情况下反最大值池化又不如插值方法），所以我们不能在图像中简单地用一个算子进行上采样，CARAFA是基于图像内容特征进行的采样方式。</p><h2 id="上采样方式"><a class="markdownIt-Anchor" href="#上采样方式"></a> 上采样方式：</h2><p><img src="/2023/11/17/CARAFE/1.png" alt="CARAFE net"></p><h3 id="kernel-prediction-module"><a class="markdownIt-Anchor" href="#kernel-prediction-module"></a> kernel Prediction Module</h3><p>​产生上采样算子的模块，Channel Compresser进行的一部是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><mo>×</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">1 \times 1 \times C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的卷积操作，这部的目的是减少参数量，减少Computational cost。Content Encoder就是一个全卷积层，通过卷积感知邻域信息进行编码，注意卷积核的数量要符合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>×</mo><msubsup><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma^2 \times k_{up}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> 以满足后续的上采样操作，再将得到的feature map展平为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mi>H</mi><mo>×</mo><mi>σ</mi><mi>W</mi><mo>×</mo><msubsup><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma H \times \sigma W \times k_{up}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.197216em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span> ，再经过一次正则化就产生了上采样算子</p><h3 id="content-aware-reassembly-module"><a class="markdownIt-Anchor" href="#content-aware-reassembly-module"></a> Content-aware Reassembly Module</h3><p>​论文中上采样操作为：对于原图像中任一个像素点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">x</mi></mrow><annotation encoding="application/x-tex">\mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span> ，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi mathvariant="script">x</mi><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(\mathscr{x}, k_{up})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 为以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">x</mi></mrow><annotation encoding="application/x-tex">\mathscr{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span></span></span> 为中心，边长为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">k_{up}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的方邻域，将原 feature map 先后进行通道压缩，内容编码，变换形状后再进行正则化操作得到上采样算子，在将原 feature map 的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mi mathvariant="script">x</mi><mo separator="true">,</mo><msub><mi>k</mi><mrow><mi>u</mi><mi>p</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(\mathscr{x}, k_{up})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和上采样算子的对应点沿通道进行相乘，运算如上图所示，这样得到的feature map的大小变为了原来的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 倍，而通道数不变，这样就完成了上采样的操作。</p><h2 id="下采样方式"><a class="markdownIt-Anchor" href="#下采样方式"></a> 下采样方式：</h2><p><img src="/2023/11/17/CARAFE/2.png" alt="CARAFE_net"></p><p>​下采样的结构与上采样结构相似，只是在 Content_Encoder 部分使用了步幅为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> 的卷积，以此生成对应数量的采样核，因为大小已经满足需要，后续就不需要进行 pixeL-shuffle 操作了，接下来的过程与上采样相同</p><h2 id="上下采样算子的协同使用"><a class="markdownIt-Anchor" href="#上下采样算子的协同使用"></a> 上下采样算子的协同使用：</h2><p>​论文中提到了：Experimental results show that adopting CARAFE++ in both upsampling and downsampling can consistently and substantially outperforms CARAFE on object detection, instance segmentation, semantic segmentation and image inpainting</p><p>​这启发我们再后续的工作中探讨：<strong>上下采样算子的对应关系是否会影响采样的性能，我们能不能找出一般化的上下采样算子的对应准则？即去讨论上下采样算子的协同性，以此去指导上下采样过程</strong></p><h3 id="question"><a class="markdownIt-Anchor" href="#question"></a> Question：</h3><p>文章中：Note that these spatially adaptive weights are <strong>not learned as network parameters. Instead, they are predicted on-the-fly,</strong> using a lightweight fully-convolutional module with softmax activation.</p><p>not learned bur predicted 的意思是什么?</p><p>​动态卷积核并不是在学习卷积核，如果学习的是卷积核，那么学习完成之后的卷积核依然是静态的。backward 学习的是：根据输入 feature map 而生成的生成卷积核的函数，这样卷积核就是动态生成的了。</p><h3 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<br><span class="hljs-keyword">import</span> torch.nn.functional <span class="hljs-keyword">as</span> F<br><span class="hljs-keyword">import</span> einops<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">CARAFE_upsample</span>(nn.Module):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, c_in, c_mid, encoder_size, ratio=<span class="hljs-number">2</span>, k_up=<span class="hljs-number">5</span></span>):<br>        <span class="hljs-built_in">super</span>(CARAFE, self).__init__()<br>        padding = (encoder_size-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span> <span class="hljs-keyword">if</span> encoder_size%<span class="hljs-number">2</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> encoder_size//<span class="hljs-number">2</span><br>        self.ratio = ratio<br>        self.k_up = k_up<br>        self.unfold_padding = (k_up-<span class="hljs-number">1</span>)//<span class="hljs-number">2</span> <span class="hljs-keyword">if</span> k_up%<span class="hljs-number">2</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> k_up//<span class="hljs-number">2</span><br>        self.comp = nn.Conv2d(c_in, c_mid, kernel_size=<span class="hljs-number">1</span>, padding=<span class="hljs-number">0</span>)<br>        self.content_encoder = nn.Conv2d(c_mid, (ratio*k_up)**<span class="hljs-number">2</span>,<br>                                         kernel_size=encoder_size,<br>                                         padding=padding)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):<br>        _, _, _, W = x.size()<br>        y = self.comp(x)<br>        y = self.content_encoder(y)<br>        y = einops.rearrange(y, <span class="hljs-string">&#x27;b (r1 r2 k_up2) h w -&gt; b k_up2 (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio, r2=self.ratio)<br>        <br>        z = F.unfold(x, kernel_size=self.k_up, padding=self.unfold_padding)<br>        z = einops.rearrange(z, <span class="hljs-string">&#x27;b (c k_up2) (h w) -&gt; b k_up2 c h w&#x27;</span>,<br>                             k_up2=self.k_up**<span class="hljs-number">2</span>, w=W)<br>        z = einops.repeat(z, <span class="hljs-string">&#x27;b k c h w -&gt; ratio_2 b k c h w&#x27;</span>, ratio_2=self.ratio**<span class="hljs-number">2</span>)<br>        z = einops.rearrange(z, <span class="hljs-string">&#x27;(r1 r2) b k_up2 c h w -&gt; b k_up2 c (h r1) (w r2)&#x27;</span>,<br>                             r1=self.ratio)<br>        x = torch.einsum(<span class="hljs-string">&#x27;bkchw,bkhw-&gt;bchw&#x27;</span>,[z, y])<br>        <span class="hljs-keyword">return</span> x<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    torch.manual_seed(<span class="hljs-number">0</span>)<br>    x = torch.Tensor(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">24</span>, <span class="hljs-number">24</span>)<br>    carafe = CARAFE_upsample(<span class="hljs-number">16</span>, <span class="hljs-number">64</span>, <span class="hljs-number">5</span>, ratio=<span class="hljs-number">3</span>)<br>    oup = carafe(x)<br>    <span class="hljs-built_in">print</span>(oup.size())<br></code></pre></td></tr></table></figure><ul><li>CARAFE在上采样时，由于生成的卷积算子要求原图像中一个点对应 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 个点，这样会导致卷积核移位的速度不一样，不容易求和。所以使用 <code>F.interpolate</code> 将原图像膨胀 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma ^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span> 倍</li><li>要求原 feature map 中每一个点的邻域时，使用 <code>F.Unfold</code> 函数可以求出每个窗口</li><li>最后一步进行 einsum 操作时，将生成的四维卷积算子升为五维，多出来的一维专门用来求和，这样求和操作就变得很方便直观</li></ul><h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h3><p><a href="https://arxiv.org/pdf/1905.02188.pdf">CARAFE: Content-Aware ReAssembly of FEatures</a></p>]]></content>
    
    
    <categories>
      
      <category>deep learning</category>
      
      <category>computer vision</category>
      
      <category>sampling operation</category>
      
    </categories>
    
    
    <tags>
      
      <tag>scientific research</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
